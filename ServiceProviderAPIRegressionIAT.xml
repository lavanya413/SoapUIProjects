<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="41735683-3700-4c97-a8e4-2090b8dc87e8" activeEnvironment="Default" name="ServiceProviderAPIRegressionIAT" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" defaultScriptLanguage="Groovy" lastOpened="2018-02-13T16:36:32.683-05:00" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="25855392-a04c-4137-9024-23b592d6956e" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://iat-api.adp.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:endpoint>https://iat-api.adp.com</con:endpoint><con:endpoint>https://ike6cxyhhd.execute-api.us-east-1.amazonaws.com</con:endpoint></con:endpoints><con:resource name="Wfn_Token" path="/auth/oauth/v2/token" id="1261e096-386f-4b63-8d9c-4f274d32b3f7"><con:settings/><con:parameters/><con:method name="Wfn_Token" id="d76bf934-43ea-4d08-aa9b-003e98b9e9ea" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>500 400</con:status><con:params/><con:element xmlns:tok="http://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="http://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401 403 503</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postWfnToken" id="3aa490d8-0d47-47bd-8d28-edb8cab5b11f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>client_id=54a9abd6-67b5-4652-8fae-7196e1cac971&amp;client_secret=8c2049cc-dd4b-4377-902c-10779b97e850&amp;grant_type=client_credentials</con:request><con:originalUri>http://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-register-meta" path="/marketplace/v1/service-provider.register/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Service_Provider_Register_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="getServiceProviderRegisterMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-add" path="/events/marketplace/v1/service-provider.add" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Service_Provider_Add" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postServiceProviderAdd" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider" path="/marketplace/v1/service-providers/{serviceProviderID}" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>serviceProviderID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Get_Service_Provider" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getServiceProvider" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceProviderID" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>serviceProviderID</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="consumer-application-subscription" path="/events/core/v1/consumer-application-subscription.create" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Consumer_Application_Subscription_Create" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:request name="postConsumerApplicationSubscriptionCreate" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-providers-meta" path="/marketplace/v1/service-providers/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Service_Providers_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:request name="getServiceProvidersMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-providers" path="/marketplace/v1/service-providers" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>$inlinecount</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$filter</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$select</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$skip</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$top</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get_Service_Providers" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getServiceProviders" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="service-provider-modify" path="/events/marketplace/v1/service-provider.modify" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Modify_Service_Provider" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="modifyServiceProvider" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="event-notification-messages" path="/core/v1/event-notification-messages" id="f8f83858-1741-4380-91ca-ba06742248bf"><con:settings/><con:parameters><con:parameter><con:name>eventid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get_Event_Notification_Messages" id="f9cadbff-1fea-4de8-b598-2dc3f2606b42" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:request name="getEventNotificationMessages" id="36c2d532-4b6c-44b3-9d4b-a3de5005cd15" mediaType="application/json"><con:settings/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="eventid" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>eventid</con:entry></con:parameterOrder></con:request></con:method><con:method name="Delete_Event_Notification_Message" id="ffcd4131-8559-44ad-8b5d-ee2bdb29ca3a" method="DELETE"><con:settings/><con:parameters/><con:request name="deleteEventNotificationMessage" id="47e9fa85-8a04-484b-98f3-d1aab216db52" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="eventid" value="eventid" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>eventid</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="service-provider-deactivate" path="/events/marketplace/v1/service-provider.deactivate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Deactivate_Service_Provider" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="deactivateServiceProvider" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-activate" path="/events/marketplace/v1/service-provider.activate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Activate_Service_Provider" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="activateServiceProvider" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-contact-add" path="/events/marketplace/v1/service-provider.contact.add" id="3eb45434-d402-4244-9ade-50a771c7cd96"><con:settings/><con:parameters/><con:method name="Service_Provider_Contact_Add" id="80a72114-f5d4-4671-9545-7162c36f541c" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="addServiceProviderContact" id="f01cb5f0-14cf-4cf1-b034-eda7218511d1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-contact-change" path="/events/marketplace/v1/service-provider.contact.change" id="3eb45434-d402-4244-9ade-50a771c7cd96"><con:settings/><con:parameters/><con:method name="Service_Provider_Contact_Change" id="80a72114-f5d4-4671-9545-7162c36f541c" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404 401</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="changeServiceProviderContact" id="f01cb5f0-14cf-4cf1-b034-eda7218511d1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-contact-remove" path="/events/marketplace/v1/service-provider.contact.remove" id="3eb45434-d402-4244-9ade-50a771c7cd96"><con:settings/><con:parameters/><con:method name="Service_Provider_Contact_Remove" id="80a72114-f5d4-4671-9545-7162c36f541c" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="removeServiceProviderContact" id="f01cb5f0-14cf-4cf1-b034-eda7218511d1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-contact-add-meta" path="/events/marketplace/v1/service-provider.contact.add/meta" id="3eb45434-d402-4244-9ade-50a771c7cd96"><con:settings/><con:parameters/><con:method name="Service_Provider_Contact_Add_Meta" id="80a72114-f5d4-4671-9545-7162c36f541c" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="getServiceProviderContactAddMeta" id="f01cb5f0-14cf-4cf1-b034-eda7218511d1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-contact-modify-meta" path="/events/marketplace/v1/service-provider.contact.modify/meta" id="3eb45434-d402-4244-9ade-50a771c7cd96"><con:settings/><con:parameters/><con:method name="Service_Provider_Contact_Modify_Meta" id="80a72114-f5d4-4671-9545-7162c36f541c" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="getServiceProviderContactModifyMeta" id="f01cb5f0-14cf-4cf1-b034-eda7218511d1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-provider-contact-remove-meta" path="/events/marketplace/v1/service-provider.contact.remove/meta" id="3eb45434-d402-4244-9ade-50a771c7cd96"><con:settings/><con:parameters/><con:method name="Service_Provider_Contact_Remove_Meta" id="80a72114-f5d4-4671-9545-7162c36f541c" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="getServiceProviderContactRemoveMeta" id="f01cb5f0-14cf-4cf1-b034-eda7218511d1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-register-meta" path="/marketplace/v1/operation-implementation.register/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Operation_Implementation_Register_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="getOperationImplementationRegisterMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation" path="/marketplace/v1/operation-implementations/{operationImplementationID}" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>operationImplementationID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="Get_Operation_Implementation" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 502 990</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getOperationImplementation" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>operationImplementationID</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="operation-implementations" path="/marketplace/v1/operation-implementations" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>$inlinecount</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$filter</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$select</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$skip</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$top</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get_Operation_Implementations" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getOperationImplementations" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="operation-implementations-meta" path="/marketplace/v1/operation-implementations/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>$inlinecount</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$filter</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$select</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$skip</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$top</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get_Operation_Implementations_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="getOperationImplementationsMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="operation-implementation-modify" path="/events/marketplace/v1/operation-implementation.modify" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Modify" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationsModify" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-register" path="/events/marketplace/v1/operation-implementation.register" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Register" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationRegister" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-open" path="/events/marketplace/v1/operation-implementation.open" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Open" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationOpen" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-review" path="/events/marketplace/v1/operation-implementation.review" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Review" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationReview" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-approve" path="/events/marketplace/v1/operation-implementation.approve" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Approve" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationApprove" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-suspend" path="/events/marketplace/v1/operation-implementation.suspend" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Suspend" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSuspend" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-reject" path="/events/marketplace/v1/operation-implementation.reject" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Reject" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationReject" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-activate" path="/events/marketplace/v1/operation-implementation.activate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Activate" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationActivate" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deactivate" path="/events/marketplace/v1/operation-implementation.deactivate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deactivate" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationDeactivate" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-retire" path="/events/marketplace/v1/operation-implementation.retire" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Retire" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationRetire" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deprecate" path="/events/marketplace/v1/operation-implementation.deprecate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deprecate" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="postOperationImplementationDeprecate" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-delete" path="/events/marketplace/v1/operation-implementation.delete" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Delete" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationDelete" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-edit-meta" path="/events/marketplace/v1/operation-implementation.edit/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Edit_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationEditMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-review-meta" path="/events/marketplace/v1/operation-implementation.review/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Review_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationReviewMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-approve-meta" path="/events/marketplace/v1/operation-implementation.approve/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Approve_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationApproveMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-release-meta" path="/events/marketplace/v1/operation-implementation.release/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Release_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationReleaseMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-suspend-meta" path="/events/marketplace/v1/operation-implementation.suspend/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Suspend_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationSuspendMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-reject-meta" path="/events/marketplace/v1/operation-implementation.reject/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Reject_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationRejectMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-activate-meta" path="/events/marketplace/v1/operation-implementation.activate/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Activate_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationActivateMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deactivate-meta" path="/events/marketplace/v1/operation-implementation.deactivate/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deactivate_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationDeactivateMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-retire-meta" path="/events/marketplace/v1/operation-implementation.retire/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Retire_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationRetireMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deprecate-meta" path="/events/marketplace/v1/operation-implementation.deprecate/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deprecate_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationDeprecateMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-remove-meta" path="/events/marketplace/v1/operation-implementation.remove/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Remove_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationRemove" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-modify-meta" path="/events/marketplace/v1/operation-implementation.modify/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Modify_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="postOperationImplementationsModifyMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-submit-request" path="/events/marketplace/v1/operation-implementation.submit" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Submit_Request" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSubmitRequest" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-review-request-meta" path="/events/marketplace/v1/operation-implementation.review-request/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Operation_Implementation_Review_Request_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getOperationImplementationReviewRequestMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-register" path="/events/marketplace/v1/operation-implementation-deployment.register" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deployment_Register" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationDeploymentRegister" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-get" path="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>operationImplementationDeploymentID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Get_Operation_Implementation_Deployment" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 502</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getOperationImplementationDeployment" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="operation-implementation-deployments-get" path="/marketplace/v1/operation-implementation-deployments" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Operation_Implementation_Deployments" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getOperationImplementationDeployments" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-modify" path="/events/marketplace/v1/operation-implementation-deployment.modify" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deployment_Modify" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationDeploymentModify" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-activate" path="/events/marketplace/v1/operation-implementation-deployment.activate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deployment_Activate" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationDeploymentActivate" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-deactivate" path="/events/marketplace/v1/operation-implementation-deployment.deactivate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deployment_Deactivate" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationDeploymentDeactivate" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-add-meta" path="/events/marketplace/v1/operation-implementation-deployment.add/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Deployment_Add_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postOperationImplementationDeploymentAddMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployments-get-meta" path="/marketplace/v1/operation-implementation-deployments/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Operation_Implementation_Deployments_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getOperationImplementationDeploymentsMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-modify-meta" path="/events/marketplace/v1/operation-implementation-deployment.modify/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Operation_Implementation_Deployment_Modify_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getOperationImplementationDeploymentModifyMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-activate-meta" path="/events/marketplace/v1/operation-implementation-deployment.activate/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Operation_Implementation_Deployment_Activate_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getOperationImplementationDeploymentActivateMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-deactivate-meta" path="/events/marketplace/v1/operation-implementation-deployment.deactivate/meta" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Operation_Implementation_Deployment_Deactivate_Meta" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getOperationImplementationDeploymentDeactivateMeta" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-add" path="/events/marketplace/v1/operation-implementation-subscription.add" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Add" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSubscriptionAdd" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-suspend" path="/events/marketplace/v1/operation-implementation-subscription.suspend" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Suspend" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSubscriptionSuspend" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-activate" path="/events/marketplace/v1/operation-implementation-subscription.activate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Activate" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSubscriptionActivate" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-cancel" path="/events/marketplace/v1/operation-implementation-subscription.cancel" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Cancel" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSubscriptionCancel" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="get-operation-implementation-subscriptions" path="/marketplace/v1/operation-implementation-subscriptions" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>$filter</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get_Operation_Implementation_Subscriptions" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getOperationImplementationSubscriptions" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>$filter</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="get-operation-implementation-subscriptions-by-subscriptionid" path="/marketplace/v1/operation-implementation-subscriptions/{operation-Implementation-subscription-id}" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>operation-Implementation-subscription-id</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Get_Operation_Implementation_Subscriptions_By_SubscriptionId" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getOperationImplementationSubscriptionsBySubscriptionId" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operation-Implementation-subscription-id" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operation-Implementation-subscription-id</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-authentication-credentials-change" path="/events/marketplace/v1/operation-implementation-subscription-authentication-credentials.change" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Authentication_Credentials_Change" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSubscriptionAuthenticationCredentialsChange" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-authentication-credentials-delete" path="/events/marketplace/v1/operation-implementation-subscription-authentication-credentials.delete" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Authentication_Credentials_Delete" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSubscriptionAuthenticationCredentialsDelete" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-mutual-ssl-certificates-change" path="/events/marketplace/v1/operation-implementation-subscription-mutual-ssl-certificates.change" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationSubscriptionMutualSslCertificatesChange" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-mutual-ssl-certificates-delete" path="/events/marketplace/v1/operation-implementation-subscription-mutual-ssl-certificates.delete" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="postOperationImplementationSubscriptionMutualSslCertificatesDelete" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-subscription-modify" path="/events/marketplace/v1/operation-implementation-subscription.modify" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Operation_Implementation_Subscription_Modify" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="postOperationImplementationSubscriptionModify" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="canonical-uri" path="/marketplace/v1/canonical-uri" id="d429eee6-e011-4f87-8166-dd543e14e973"><con:settings/><con:parameters/><con:method name="Get_Canonical_Uri" id="f28775ee-a463-4be2-90fe-8445251ce9d1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="getCanonicalUri" id="96936867-2a5d-48d3-a98f-810280658415" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="operation-implementation-deployment-uri-get" path="/marketplace/v1/operation-implementation-deployment-uri" id="6a0d1917-f273-4a49-8033-1f5c7b1b27ab"><con:settings/><con:parameters/><con:method name="Get_Operation_Implementation_Deployment_Uri" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getOperationImplementationDeploymentUri" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="x-url-path" value=""/>
  &lt;con:entry key="x-method" value=""/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="Wfn_Session_Call" path="/auth/oauth/v2/authorize" id="5f010682-0b0a-4600-b7eb-dbda79b19e7a"><con:settings/><con:parameters><con:parameter><con:name>response_type</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>scope</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Wfn_Session_Call" id="061bdab4-9598-48ea-a21b-b3fe9259dca4" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>302</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>302</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:aut="https://accounts.adp.com/auth/oauth/v2/authorize">aut:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="getWfnSession" id="0b48b6a8-a8ca-4166-bd63-77dc5a83754e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>response_type</con:entry><con:entry>client_id</con:entry><con:entry>redirect_uri</con:entry><con:entry>scope</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Wfn_SMSession_Call" path="/auth/oauth/v2/authorize" id="605da9ce-22d5-4c72-9b54-b22ccbb3939b"><con:settings/><con:parameters><con:parameter><con:name>response_type</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>scope</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Wfn_SMSession_Call" id="061bdab4-9598-48ea-a21b-b3fe9259dca4" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>302</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>400 401</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>302</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>307</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="getWfnSMSession" id="0b48b6a8-a8ca-4166-bd63-77dc5a83754e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>response_type</con:entry><con:entry>client_id</con:entry><con:entry>redirect_uri</con:entry><con:entry>scope</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="post-address" path="/dev/address" id="c9926862-5827-4c10-9272-66bde77a9587"><con:settings/><con:parameters/><con:method name="PostAddress" id="a17b5aad-1513-43f1-ac9a-c05cf39065ae" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 404 401</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Response</con:element></con:representation><con:request name="postAddress" id="dc8ec691-726b-4394-82ef-29e672c95b86" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="get-address" path="/dev/address" id="c9926862-5827-4c10-9272-66bde77a9587"><con:settings/><con:parameters/><con:method name="GetAddress" id="a17b5aad-1513-43f1-ac9a-c05cf39065ae" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 502</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Fault</con:element></con:representation><con:request name="getAddress" id="dc8ec691-726b-4394-82ef-29e672c95b86" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="get-time" path="/dev/api/time" id="c9926862-5827-4c10-9272-66bde77a9587"><con:settings/><con:parameters/><con:method name="GetTime" id="a17b5aad-1513-43f1-ac9a-c05cf39065ae" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 401</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990 992 400</con:status><con:params/><con:element xmlns:add="http://mkplproxy-iat.gslb.es.oneadp.com/dev/address">add:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="getTime" id="dc8ec691-726b-4394-82ef-29e672c95b86" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Wfn_AuthorizeConsent_Call" path="/auth/oauth/v2/authorize/consent" id="d1996e1e-120c-481f-961b-2138989219e1"><con:settings/><con:parameters><con:parameter><con:name>response_type</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>scope</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Wfn_AuthorizeConsent_Call" id="0b883098-44c7-4bc6-b5e2-49903709cf7d" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>302</con:status><con:params/></con:representation><con:request name="getWfnAuthorizeConsent" id="84ebad67-d5e9-4cf4-a557-479f58ec05e7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>response_type</con:entry><con:entry>client_id</con:entry><con:entry>redirect_uri</con:entry><con:entry>scope</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="get-services" path="/marketplace/v1/services" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Services" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getServices" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/marketplace/v1/services</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="service-operation-implementation-ids-change" path="/marketplace/v1/services" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>$inlinecount</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$filter</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$select</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$skip</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$top</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get_Services" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:request name="getServices" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/marketplace/v1/services</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="get-service" path="/marketplace/v1/services/{serviceID}" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>serviceID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Get_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:request name="getService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceID" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>serviceID</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="register-service" path="/events/marketplace/v1/service.register" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Register_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="registerService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="submit-service" path="/events/marketplace/v1/service.submit" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Submit_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="submitService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="review-service" path="/events/marketplace/v1/service.review" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Review_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="reviewService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="approve-service" path="/events/marketplace/v1/service.approve" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Approve_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="approveService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="reject-service" path="/events/marketplace/v1/service.reject" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Reject_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:request name="rejectService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="activate-service" path="/events/marketplace/v1/service.activate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Activate_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="activateService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="retire-service" path="/events/marketplace/v1/service.retire" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Retire_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="retireService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="suspend-service" path="/events/marketplace/v1/service.suspend" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Suspend_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="suspendService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="delete-service" path="/events/marketplace/v1/service.delete" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Delete_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="deleteService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="open-service" path="/events/marketplace/v1/service.open" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Open_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="openService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="modify-service" path="/events/marketplace/v1/service.modify" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Modify_Service" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="modifyService" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="service-operation-implementation-ids-change" path="/events/marketplace/v1/service.operation-implementation-ids.change" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Service_Operation_Implementation_Ids_Change" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:request name="changeServiceOperationImplementationIds" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="service-subscribe" path="/events/marketplace/v1/service.subscribe" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Service_Subscribe" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="postServiceSubscribe" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-subscription-activate" path="/events/marketplace/v1/service-subscription.activate" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Service_Subscription_Activate" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="postServiceSubscriptionActivate" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-subscription-suspend" path="/events/marketplace/v1/service-subscription.suspend" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Service_Subscription_Suspend" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="postServiceSubscriptionSuspend" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-subscription-cancel" path="/events/marketplace/v1/service-subscription.cancel" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Service_Subscription_Cancel" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="postServiceSubscriptionCancel" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-subscription-modify" path="/events/marketplace/v1/service-subscription.modify" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Service_Subscription_Modify" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990 400</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="postServiceSubscriptionModify" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-subscriptions" path="/marketplace/v1/service-subscriptions" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Get_Service_Subscriptions" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="getServiceSubscriptions" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-subscription-by-id" path="/marketplace/v1/service-subscriptions/{serviceSubscriptionId}" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters><con:parameter><con:name>serviceSubscriptionId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get_Service_Subscription_By_Id" id="fb990410-958b-49db-9702-ab3b7cd56937" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400 502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="getServiceSubscriptionById" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>serviceSubscriptionId</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="service-subscription-auth-cred-change" path="/events/marketplace/v1/service-subscription.authentication-credentials.change" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Service_Subscription_Auth_Cred_Change" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="postServiceSubscriptionAuthCredChange" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="service-subscription-auth-cred-remove" path="/events/marketplace/v1/service-subscription.authentication-credentials.remove" id="9538d0d3-a000-480b-9f4e-0962a8c78931"><con:settings/><con:parameters/><con:method name="Post_Service_Subscription_Auth_Cred_Remove" id="fb990410-958b-49db-9702-ab3b7cd56937" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404 990</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wor="https://apifit.nj.adp.com/hr/v2/workers">wor:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:tok="https://apidit.nj.adp.com/auth/oauth/v2/token">tok:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="postServiceSubscriptionAuthCredRemove" id="b7f94d53-e26d-4636-ab15-195784df076f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="94a42a73-0997-4994-a87c-a73d1861d16d" name="ServiceProviderAPIRegressionTestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f3c25ebb-b56a-48cf-9ff7-4a020ce65b0a" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Delete_Service_Registry_Data" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:testStep type="groovy" name="Remove_Service_Subscriptions" id="dc06d8f2-4d8e-4d70-8668-10d8276cfef6"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceSubscriptions


			log.info "Total No Of Service Subscriptions: "+ dbCollection.find().count()

			serviceId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Id"));
			log.info "serviceId: " + serviceId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("serviceID").equals(serviceId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Subscriptions Found In ServiceSubscriptions Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceSubscriptionID " + doc.get("content").get("serviceSubscriptionID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service" id="20d8f5bd-9d45-4dbf-b706-2d5112cc2bbb"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Services Found In Services Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceID " + doc.get("content").get("serviceID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="6c3fc03d-fe14-4249-9b71-633faacd02fe"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="5b9d75af-48d6-432c-81ff-4b41ee522b47"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="3d992e32-8b92-4d72-a49d-0a93dba96992"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="118af67c-ec9e-426f-9080-1507ff35b476" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Generate_Token_B2C" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="properties" name="Properties" id="b0e61252-133a-4e26-bb0c-7d47f74437a2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Session_ID</con:name><con:value>sessionID=5a315f2a-496e-4c6e-afd1-5539d4b62b04&amp;action=Login&amp;username=sbarbato@iat9mark&amp;password=adpadp18</con:value></con:property><con:property><con:name>Sm_session</con:name><con:value>client_id=888ed931-bb1d-496f-a5a9-3d71e6171c47&amp;client_secret=47f1f83b-9af3-48be-aa6e-38788a74dbd4&amp;code=a632cd76-000d-45b2-b615-6a62c8c88dcf&amp;redirect_uri=https://testadp.appdirect.com&amp;scope=openid%20api%20profile&amp;grant_type=authorization_code</con:value></con:property><con:property><con:name>Session_ID_value</con:name><con:value>5a315f2a-496e-4c6e-afd1-5539d4b62b04</con:value></con:property><con:property><con:name>Set_Cookie</con:name><con:value>SMSESSION=ytF++FxNsxwqgaQnZCTJSNbgbsFYbRYiFXNhutiFbcZ+UMvsn4yDq1J7QBGb8dqIub7OQKZ/4OIqzvwGaeokMPZ97pCYnmfnQnNTBk6lonA+hSVdH7XmRM6eQ4fcnNNjAOCT+Mz0bF54G8Tr31dWcP2kslOiM/wOyc1ltbzFwUQdQFSmPSHd9jLySK3z+r3ZoniaV8WgBU8gensc7RW32OQ7M76wm4WLvp84v26bhG+D5tquQVXrswDL20u8cNhBAcTxnRikJekNmz+yRFWNpgCsCmy6l7vOyrkabQRC91NSRpQM2p/adRqIvZf4MKBPVwMlzeLfDTEEjFTy/1Oqn0TyNI1qnc9wIj+hZmyzqM9GjjX1BsgIHxDuobUn8INHGVpf1pHQfClp38MF6cbk+P5Rug/iv7qXo/e+NClTUIqzjRzAnumTVc61vDvevPk0dpYgpzIDE93PryBuG9rYfXnvoPg1HYlnPZaOSmYdHkLX/gKeDyv0ks9LpSYGCXqrSnDL3+P85ev1FVm5kVQeir60PgGRB/zSjau96AKwSvi2coNgJVl+FzfWhQf6So1kdp1Mx4pfB7I1jkNPNEF+3Uonc+nPcqQFvpiOC4wGIKTaNkzMEzciZnIT5vlGjVJwh6QFNCk0WqXm5EN7esn5T3z96ixBjfaWLEp9GPTupwX5zQIGHLi8ou0qRsay3E6QIsMk9ToKn4Pbz3QUeXcrXlOIO/DWIFKt0QPU2KBg50P+9V9LY9gDBM2dm2DU6etEU3dOU3OkbeJryTeMkXuc/rQznDrIJ++ylp86ezN46fSwuwHEvJBUv7PoPMG3z1YmnP11y5H44mFF1KBkh2KPM5eP9k1mV7Vp9ahiDil2qKB+ASx5hzoiZ+fYsSFErYuQtnmrlE3EArGwfZnqQkMFiwWNAZBp833QjrO2wtYV9aOlpZbrQL/MhAQriUli06iYRKSL4X5MFKohIEh329Ir50EXzm76M2KmUrACOOmBFNd/uFJCt2v0mPAeOkjV2LMeXfAc4VneB325/9xfDPwo7XoDlTSLAO7S</con:value></con:property><con:property><con:name>Authorize_confirm</con:name><con:value>sessionID=5f53c04b-72eb-4b87-9596-6affcdc58515&amp;action=Confirm</con:value></con:property><con:property><con:name>accessTokenPayload</con:name><con:value>client_id=888ed931-bb1d-496f-a5a9-3d71e6171c47&amp;client_secret=47f1f83b-9af3-48be-aa6e-38788a74dbd4&amp;code=5b9815e9-6d37-452c-bef4-185aabd82fde&amp;redirect_uri=https://marketplace.adp.com/&amp;scope=openid%20api%20profile&amp;grant_type=authorization_code</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Get_SessionID" id="9f843297-5233-4ee9-887c-14a1fb7bf2e3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/authorize" methodName="Wfn_Session_Call" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_SessionID" id="46e5185b-a519-49f8-a772-ca7595c620be" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://accounts.adp.com/auth/oauth/v2/authorize</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="627f4dd7-80e6-4202-a442-6879a2405dbd" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="scope" value="openid api profile"/>
  <con:entry key="response_type" value="code"/>
  <con:entry key="redirect_uri" value="https://testadp.appdirect.com"/>
  <con:entry key="client_id" value="888ed931-bb1d-496f-a5a9-3d71e6171c47"/>
</con:parameters><con:parameterOrder><con:entry>response_type</con:entry><con:entry>client_id</con:entry><con:entry>redirect_uri</con:entry><con:entry>scope</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Get_SessionID_groovy" id="b49a4272-3d04-47ba-8aa8-902856ebe7f5"><con:settings/><con:config><script>import java.util.regex.*
def response
def match
def postJSON = "sessionID=528dcac3-4c93-4bbe-aa3d-6423a60c2b8f&amp;action=Login&amp;username=sbarbato@iat9mark&amp;password=adpadp18"
def propTestStep
def responseHeads
def httpStatus

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_SessionID"].testRequest.response.responseContent
responseHeads = context.testCase.testSteps["Get_SessionID"].testRequest.response.responseHeaders
httpStatus = responseHeads["#status#"]
log.info "Response Status for the GET SessionID call: " + httpStatus

//log.info "Response:$response"

httpsLocation = (responseHeads["Location"]).toString()
log.info "Location:$httpsLocation"

Pattern myRegex = ~/regex/
match = (httpsLocation =~ /\w{8}-\w{4}-\w{4}-\w{4}-\w{12}/)[0]
//Matcher myatcher = Pattern.compile(/regex/).matcher("subject")
log.info "SessionID value: " + match.toString()

log.info postJSON
postJSON = postJSON.replace("528dcac3-4c93-4bbe-aa3d-6423a60c2b8f", match.toString())
log.info "The Payload to get the smSession vlaue: "+postJSON

propTestStep = context.testCase.getTestStepByName("Properties")
propTestStep.setPropertyValue("Session_ID",postJSON)
propTestStep.setPropertyValue("Session_ID_value",match.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_code_smSession" id="6fd8684a-9afb-4d5b-8515-b6558a5e85d6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/authorize" methodName="Wfn_SMSession_Call" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_code_smSession" id="87552401-8f3b-4c16-8aea-7bb127019ec6" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>${Properties#Session_ID}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/authorize</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="53d7ae8e-6d3d-4c86-9612-636cab4b10c7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,302, 307</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_code_smSession_With_Authorize_Consent" id="a6cdcffe-9bf3-4032-8bb3-62c3275f981c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/authorize/consent" methodName="Wfn_AuthorizeConsent_Call" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_code_smSession_With_Authorize_Consent" id="87552401-8f3b-4c16-8aea-7bb127019ec6" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>${Properties#Session_ID}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/authorize</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="53d7ae8e-6d3d-4c86-9612-636cab4b10c7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,302, 307</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Get_code_sm_groovy" id="2ca7f099-b45b-478c-9e5f-93b60a02c375"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.support.types.StringToStringsMap

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def payload = "client_id=888ed931-bb1d-496f-a5a9-3d71e6171c47&client_secret=47f1f83b-9af3-48be-aa6e-38788a74dbd4&code=<<code>>&redirect_uri=https://testadp.appdirect.com&scope=openid%20api%20profile&grant_type=authorization_code"
def runner
def myTestCase = context.testCase
def TestCase = testRunner.testCase.testSuite.testCases["Get_Token_B2C"]
def codeValue
def httpStatus
def httpStatusTemp
def cookieValue
def AC_payload = "sessionID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&action=Confirm"
//def sessionID_value
def propTestStep = context.testCase.getTestStepByName("Properties")
//payload = propTestStep.getPropertyValue("accessTokenPayload")
AC_payload = propTestStep.getPropertyValue("smSessionPayload")
response = context.testCase.testSteps["Get_code_smSession_With_Authorize_Consent"].testRequest.response.responseContent
//log.info "Response:$response"

httpResponseHeaders = context.testCase.testSteps["Get_code_smSession_With_Authorize_Consent"].testRequest.response.responseHeaders
//log.info "Got the RH"
httpStatus = (httpResponseHeaders["#status#"]).toString()
codeValue = httpResponseHeaders["Location"][0]
log.info "httpStatus for the smSession call: " + httpStatus
log.info "CodeValue: " + codeValue



//if(httpStatus.contains("200")){
if(codeValue.toString().contains("code=")){

	log.info "Calling the Get token call since status is 302"	
	codeValue = httpResponseHeaders["Location"][0]
	match = ((codeValue =~ /code=(.*)\&/)[0][1]).toString()
	//log.info "Code Value: " + match

	log.info "Got the code value from the location header: " + match
	payload = payload.replace("<<code>>", match.toString())
	log.info "Payload for Get_Token: " + payload
	propTestStep.setPropertyValue("Sm_session",payload)	

}
else if(!codeValue.toString().contains("code=")){
	
	log.info "Calling authorize with action=confirm since the status 200 received"

	cookieValuetemp = httpResponseHeaders["Set-Cookie"][0]
	cookieValuetemp = cookieValuetemp.replace("; Domain=.adp.com; Path=/; Secure", "")
	//log.info cookieValuetemp

	cookieValue = ((cookieValuetemp =~ /(SMSESSION=.*)/)[0][1]).toString()		
	propTestStep.setPropertyValue("Set_Cookie",cookieValue)
	log.info "Cookie Value is seen: " + cookieValue

	//sessionID_value = propTestStep.getPropertyValue("Session_ID_value")
	AC_payload = AC_payload.replace("action=Login", "action=Confirm")
	log.info "Payload for Authorize_confirm: " + AC_payload

	
	propTestStep.setPropertyValue("Authorize_confirm",AC_payload)	
	request = testRunner.testCase.getTestStepByName("Authorize_confirm").testRequest
	headers = request.getRequestHeaders()
	headers.remove( "Cookie");
	headers.put("Cookie", cookieValue)

	request.setRequestHeaders(headers)

	log.info "Cookie header is set successfully"
	log.info "cookieValue: " + cookieValue
	
	runner = TestCase.testSteps["Authorize_confirm"]
	runner.run(testRunner, context)
	//testRunner.runTestStepByName("Authorize_confirm_http")
	log.info "Run Success for Authorize_confirm case!!"

	httpResponseHeaders = context.testCase.testSteps["Authorize_confirm"].testRequest.response.responseHeaders
	httpStatusTemp = (httpResponseHeaders["#status#"]).toString()
	log.info "HttpStatus for Authorize call: " + httpStatusTemp
	codeValue = httpResponseHeaders["Location"][0]

	match = ((codeValue =~ /code=(.*)\&/)[0][1]).toString()
	//log.info "Code Value: " + match

	log.info "Got the code value from the location header: " + match

	payload = payload.replace("<<code>>", match.toString())
	log.info "Payload for Get_Token: " + payload

	propTestStep.setPropertyValue("Sm_session",payload)

}


//runner = TestCase.testSteps["Get_token"]
//runner.run(testRunner, context)
//log.info "Run Success for Get_token case!!"

else{
	log.info "Invalid Status Code. Script will fail"
}

/*
match = ((httpStatus =~ /code=(.*)\&/)[0][1]).toString()
log.info match

payload = payload.replace("d9a881a1-fcc9-4d8a-916b-e65fed398ada", match.toString())
log.info payload

propTestStep = context.testCase.getTestStepByName("Properties")
propTestStep.setPropertyValue("Sm_session",payload)
*/
//log.info "compelete headers:"
					//log.info httpResponseHeaders
					//temp = httpResponseHeaders["Cache-Control"]]]></script></con:config></con:testStep><con:testStep type="restrequest" name="Authorize_confirm" id="d85e6e74-6f44-4651-b729-053a44704e43" disabled="true"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/authorize" methodName="Wfn_SMSession_Call" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Authorize_confirm" id="87552401-8f3b-4c16-8aea-7bb127019ec6" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="SMSESSION=W0WBaUGTQDvYjqXb1wnQldW50WJ5vR2BnsLtlA+K2GlPTi3aQ+vq72GL/qekzK3bGC7xsiBwMXiecCf8KZQG1OjkPVCdRzvzy+f4tT//ro0yK8Muzm/b8Y98Wt6op5aMcw+jtNoa3IKhalJ4C3R04qvRHuIqUZW+saoaQGOixqy0Q3GNYLouK3X5kqQ92C1Q+CYXI4Ll3yDmLWdHYasOSwlpV4Sx6yy8vLZ6ABpMtMNAFpY7WhM5pNgR3d4KQ5EqMti+tJcDhV0Iv40po6DzU48cHoqjjN5gl4c6H/KC7UnhyEt1cChtGqKQJg229jO8m7vTOReQ6Cs/AUb9IsWZ0I6hW/5nxFnUvgyvGaUHNS9KEJ6A5DB5DwqAbHkMboy/jIXdUGgRsFR8oLoswys4g2DEJ3Lt4a2r54jYw63h/TofLgmATZPgJk6AlqlmikebqFyDDDMbHoz1ijVvy8qMOOe3ZgTzHDwnyxZaKqf/pT5KoZSfAb7EgF1aq8NQoLzjHMmJxarAs78WfUbkBVIdfyOvT0nBM+SLIRWsM2jJ7lizFRikRRJBpJgrMBopPDm7mEIgTK+JtvanwChVU9VHt5kyvGwB1EzTVYYsHm5e3WOs3lpwJ8bfjmpj75rmKWaEa3A3+uH1PqzfQXyGMGBDwYx04fU+rkwHxfFD9hxa5DN+xqtu3Fj65aU1EhFuMPrxHF2BC2LMFGWt8jWCSKfPDiMjeaCtqogFJSaVA+ZfECffoJC+yB3zdKDqsrYvqw/XY7FgPeAKYEN6e1FUquaBKDjjBVYZIFklRofvWo/PmPEJLqZppE0NwRovq38glfg7Hb/Pas+GnLIuGrDBmXZGVyAe1B7rBIWTql52ijOB5rzfdgQDs39b+px84/8OTU7ediZp7muXTt6xFOHOvvJ6yIRjOI7by44QTPXRXiecow2UwbSmfkN4STXF23j11u43PS6sa05mfjE72rP6V5zAPdy12DJURrNS;"/>
  &lt;con:entry key="content-type" value="application/x-www-form-urlencoded"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>${Properties#Authorize_confirm}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/authorize</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="210fdb11-7f51-4c66-8787-46cc79eb8e27" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,302</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="$badparam" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>$orderby</con:entry><con:entry>$expand</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$badparam</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_token" id="29e4edef-8109-4594-a47b-e62cf36a7aee"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/token" methodName="Wfn_Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_token" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>${Properties#Sm_session}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="78077eba-0b9d-4787-bdd4-21fe90861835" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Get_token_groovy" id="deaee3e1-c44c-491b-a390-95c5144a4980"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_token"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.access_token

log.info "Access Token: " + temp

accessToken = "Bearer " + temp

testRunner.testCase.testSuite.setPropertyValue("Access_Token",accessToken);

log.info "Authorization is header is set for the workers call !!"</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="cacb35cd-9d5c-42b4-95fe-93d89c7b0769" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="70c4002c-2c34-4af8-8b13-175c9a895132"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="7527091b-3517-42a1-8861-baf355ca9414"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="939d086f-52da-4e7e-96fc-1795ac8b64c3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProviderAddTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="8fe4841b-9b12-4a13-a478-9c041e473c6e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="58d9fbab-a555-4da6-a767-a1d18d19194d"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5302a7cd-c1c8-43c5-9d50-cf2d50141730" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Service_Provider" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="3d8cb632-1179-4250-a840-1e782e5cd034"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider" id="b8db5953-d09a-4532-ab8a-0c538d432523"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a586efd0-c8fe-47e0-824b-9c9f6c834335" name="Contains"><con:configuration><token>${#TestSuite#Service_Provider_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="227ffce5-1aa0-4f9b-92ae-54051b80ae03" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="5b0cb8b1-c11f-4f8f-88f3-38fb1254c8df"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="b0d6896b-4bd0-4ebd-ac0e-d5005589be68"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5497b112-250c-47de-a27e-32167b39ea27" name="Contains"><con:configuration><token>${#TestSuite#Service_Provider_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3fdd8ff9-cd0c-43ef-90cc-077e21e46b02"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c522ca2d-8d3d-42fb-ae9c-69f1268a1f9b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Top" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="fb4eb270-ce83-4f3b-99f9-e8710583ab79"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="f10425b0-28ce-43fb-b23f-2dd5b1dada90"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value="1"/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value=""/>
</con:parameters><con:parameterOrder><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="4e2353e4-a4e4-43a9-94f3-cf90ce429ccd"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="55e17864-a910-42d9-8778-4ba243be5d14" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Skip" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a04f770d-e3ae-48c1-b27e-66e1fed69adb"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="a8487f31-e8e4-4e9c-9dc6-6a03938b1c54"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$skip" value="1"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value="1"/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value=""/>
</con:parameters><con:parameterOrder><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="9ec43c41-1fee-4614-b69a-16bff3eaef33"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="65a28d87-f2b4-42a7-bef8-658f0a9a5ed5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_InlineCount" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="dd98c124-0a72-4eaf-8c51-fa2a6c874080"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="711a8cb0-899f-42ff-9bc2-b3eb0965214b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c7093b85-4b0a-480a-9cdd-0ae4821760a8" name="Contains"><con:configuration><token>count</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value="allpages"/>
  <con:entry key="$filter" value=""/>
</con:parameters><con:parameterOrder><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="4abc7cac-b244-444d-ab38-59d70d5a9b1b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7b2fe357-8fb9-4023-b083-efe9a1920b41" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Filter" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="107d61de-fa64-4194-9379-692f376397ff"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="50ab8fdb-4659-4755-8b22-42febb7046fd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b100b9c2-1d64-4b53-bc65-064958b325b7" name="Contains serviceProviderName"><con:configuration><token>${#TestSuite#Service_Provider_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$skip" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$filter" value="serviceProviderName eq '${#TestSuite#Service_Provider_Name}'"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="46ce5dee-6754-475b-81fc-f071ecd92f2b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="259cbf3e-dced-482a-bfce-da71b24ef1f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Select" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="6df42bd5-8b9c-4711-9618-82e1b6f1b1a5"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="27cc6b54-c541-4bc2-ba02-96ebe5dd718a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c85a1daa-b0e1-475f-a007-81e0d4b5cfe1" name="Contains serviceProviderName"><con:configuration><token>serviceProviderName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c028561a-62df-443a-851d-212b6c1a9a83" name="Contains serviceProviderID"><con:configuration><token>serviceProviderID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="serviceProviderID, serviceProviderName"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="ee431fac-235a-4a5a-9f74-06749d657f26"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="447c5d6a-eb94-4771-9c4a-b4dc7233cd0b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Top_Skip_Filter_Select_Inlinecount" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="89553bde-ab09-4cea-bbee-e237b27f0c46"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="27c94790-ecef-41be-912a-e9193107489f"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a7d11a2-817b-4c48-823f-2d6ac656f680" name="JsonPath Count Match"><con:configuration><path>$.count</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d440c86f-03af-4553-b1d3-277de112804c" name="Contains"><con:configuration><token>${#TestSuite#Service_Provider_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$filter" value="serviceProviderName eq '${#TestSuite#Service_Provider_Name}'"/>
  <con:entry key="$inlinecount" value="allpages"/>
  <con:entry key="$select" value="serviceProviderID, serviceProviderName"/>
</con:parameters><con:parameterOrder><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="2aa83d32-4a7f-4d45-9299-dfce6af63f5e"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="eb49ab10-e518-4eab-b277-1bbd3c732140" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify_Service_Providers_Name_And_Desc" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f24c5e97-91f5-43f1-b2e9-fe378e78a3aa"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Modify_Service_Providers_Name_And_Desc").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Modify_Service_Providers_Name_And_Desc" id="6fc63fc0-ff9f-4983-ad51-d918cbdc55f4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.modify" methodName="Modify_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Modify_Service_Providers_Name_And_Desc" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.modify"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}"
          
        },
        "transform": {
          "serviceProvider": {
            "serviceProviderName": "${#TestSuite#Modified_Service_Provider_Name}" ,
            "serviceProviderDescription": "${#TestSuite#Modified_Service_Provider_Desc}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cce5111b-f62a-4a25-951e-1a53a6fec128" name="Contains Modified Name"><con:configuration><token>${#TestSuite#Modified_Service_Provider_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3fb56e43-4338-4989-a94b-697b1468e622" name="Contains Modified Desc"><con:configuration><token>${#TestSuite#Modified_Service_Provider_Desc}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="2135f84d-50cc-473b-a025-7c29957038f2"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b01e59e4-e184-4c10-8f51-a360f72fbf53" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Deactivate_Service_Provider" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="44a73488-5056-472a-adf7-7d540169fe11"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Deactivate_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Deactivate_Service_Provider" id="3a34a22c-01d1-45d9-8720-3d9334481335"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.deactivate" methodName="Deactivate_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Deactivate_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.deactivate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}"
         
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cce5111b-f62a-4a25-951e-1a53a6fec128" name="Contains Inactivate Status"><con:configuration><token>inactive</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="31b54ac2-35be-4d1f-a6b4-b0315202009d"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b7d7b1d8-6d37-4a4f-a1ad-7df3c07e63f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Service_Provider" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="45aa8ae0-32e7-4559-bc51-56693c9ec917"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Activate_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Service_Provider" id="3e6ab51e-ff79-4119-ba1f-ceb5845bcde6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.activate" methodName="Activate_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
      
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}"
          
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cce5111b-f62a-4a25-951e-1a53a6fec128" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="bf3c787f-c450-454b-b128-d9a082d573d5"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8d198342-659f-4ba4-8a7b-f99838d720b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Filter_On_ServiceProviderId" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="415b9bd6-4fa8-4f55-bb75-1ecf6916d8bb"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="ac3fd5ef-a08f-4ccf-a121-74ec77c9bdb6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="11acb20f-575f-44f0-9de8-4341cf6d24ee" name="Contains serviceProviderID"><con:configuration><token>${#TestSuite#Service_Provider_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$skip" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$filter" value="serviceProviderID eq '${#TestSuite#Service_Provider_Id}'"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="6b834b9a-d35a-48c0-b9eb-e623efb80662"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2bddd86f-9cba-4598-9e37-b87387f06e34" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Filter_On_ServiceProviderName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="9a9262a2-0214-4ac4-84db-845d2d445a3b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="9e1b3dbc-2c31-4bf1-a610-02c242441ed8"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8c82fe8e-d72e-4029-b36b-ef30c7eaca14" name="Contains serviceProviderName"><con:configuration><token>${#TestSuite#Modified_Service_Provider_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$skip" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$filter" value="serviceProviderName eq '${#TestSuite#Modified_Service_Provider_Name}'"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e9e2da7e-602a-4a7e-b359-a7ed832058ac"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5959741c-a6d4-4f09-bb0f-a9554cfd5c10" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Filter_On_ServiceProviderDescription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="da2d25ef-32d4-42d7-b79e-07d3d14226de"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="a0f44017-2e0b-4f22-995d-706e69f0a469"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="71c83b20-b302-4a70-a40f-c03496352730" name="Contains Modified serviceProviderDescription"><con:configuration><token>${#TestSuite#Modified_Service_Provider_Desc}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$skip" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$filter" value="serviceProviderDescription eq '${#TestSuite#Modified_Service_Provider_Desc}'"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="df90f6eb-0282-49e6-8e2b-e3fc8784f756"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="95ca72e6-b36e-4a61-bd5d-accba6372e11" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Filter_On_serviceProviderOOID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a255b8e1-6dce-4690-a736-6ecc19a586c7"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="b93b66e3-0945-4ff0-a1be-e5dfcd6542b2"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="92df516d-85d5-4b7c-9e8b-39a2723409bc" name="Contains serviceProviderOoid"><con:configuration><token>${#TestSuite#Service_Provider_Ooid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$skip" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$filter" value="serviceProviderOrganizationOID eq '${#TestSuite#Service_Provider_Ooid}'"/>
  <con:entry key="$select" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="507c1438-2f64-436b-80c6-7679d3159d77"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3b70df57-11aa-45fd-a042-42d657ff3bc8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Filter_On_Status_ShortName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="77997b95-5205-4c50-8db5-2604cbb087ef"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="a0b0e434-31ca-4f92-9cdd-ab9fcb7a65a2"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="46d25526-6176-4473-951c-411aa3aa7597" name="Contains serviceProvider StatusCode ShortName"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="serviceProviderStatusCode/shortName eq 'Active'"/>
  <con:entry key="$top" value="2"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8260e2e6-3d6b-448d-bfc9-923860f7399a"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7c31a96b-0a7a-4132-b5c2-6c2b9f1c09e5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Filter_On_Status_CodeValue" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="580abc15-3724-4435-b8cf-5587011d727b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="7d856fd0-5c9e-4827-98aa-c6dcbc53acd4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="40131752-29c2-434f-a820-ad9cde081822" name="Contains serviceProvider StatusCode CodeValue"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="serviceProviderStatusCode/codeValue eq 'active'"/>
  <con:entry key="$top" value="2"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="0c9b7511-e557-41b0-9521-efbf877d1454"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9ff098ef-516c-46a0-a24d-d498456ad40b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Select_On_ServiceProviderId" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="e812349b-1a27-4dd4-b570-bc07eedf37e5"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="22ac9efe-dc15-418e-9088-f30a0ae90783"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b622e16c-a05d-4a07-b366-bf789b5f9456" name="Contains serviceProviderID"><con:configuration><token>serviceProviderID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="serviceProviderID"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="f6b1146d-02f4-428b-85ac-131393de4e9b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1ae90a04-3008-411f-97db-a312170b6e18" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Select_On_ServiceProviderName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="6efe0c3d-540f-407c-953b-5b2b276df0e4"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="158df4ce-7785-4205-b455-52e1a894abad"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="469092e9-9d9e-46c9-9906-3709b4f648d4" name="Contains serviceProviderName"><con:configuration><token>serviceProviderName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="serviceProviderName"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="fc3e9095-62db-4982-8c09-6ea037ef5e5d"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6b64e77b-4058-4d27-9282-38f3c33032be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Select_On_ServiceProviderDescription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="d8bb5b31-b660-4fcf-b871-c68f926ae7de"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="bc5b18e7-19d0-4149-a3d4-8c698937605b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9353fd33-b63f-45bf-b819-de21ea14dae6" name="Contains serviceProviderDescription"><con:configuration><token>serviceProviderDescription</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="serviceProviderDescription"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="34a01ad7-1201-4ced-9873-a8748d00bcdf"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9af8556e-380b-4db1-b34f-c7f21b5b3336" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Select_On_ServiceProviderShortCode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="99d9dfcc-593e-4248-a690-99f2bd065083"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="319c693c-46f9-44ec-81fd-219d0388b666"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f68cf6e0-195b-4e15-b89e-e7a62d726383" name="Contains serviceProvider ShortCode"><con:configuration><token>serviceProviderShortCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value="serviceProviderShortCode"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="c366af10-f018-481d-aee7-85ae32ba2c90"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="649d55ac-08e4-4a57-b640-060d57c07f45" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Select_On_ServiceProviderOOID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c448b932-d140-4a6a-aa2b-90488855328f"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="389927cf-7a4a-4bf9-b327-607216ef9915"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5ed8b05b-53e7-430a-b807-12f64b622933" name="Contains serviceProviderOOID"><con:configuration><token>serviceProviderOrganizationOID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value="500"/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value="serviceProviderOrganizationOID"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="6fe8643b-4e2b-49db-aaad-f6aa76d75dea"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="fc0da120-8964-4592-ad04-1119aef1dc24" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Select_On_ServiceProviderStatusCode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="1b29569c-7d9e-48a7-833c-02cd96687455"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="547a13af-79ee-4f08-8b54-64c04c3b229c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="00c9b7e0-68c8-4083-a620-3891bf1c6ffd" name="Contains serviceProviderStatusCode"><con:configuration><token>serviceProviderStatusCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="serviceProviderStatusCode"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="14b03df0-008b-496a-b3a8-091f192c5a62"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8d9a929a-af1e-44a6-aa9f-ff72837aaf25" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Multiple_Selects" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="8bbfa251-ecb9-477f-9b0b-8b409e6a6dd7"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="70abc9a4-a451-43e8-9600-f1d0f0a34fad"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2a2cc061-467c-4fdb-a236-44038b8e10f9" name="Contains serviceProviderName"><con:configuration><token>serviceProviderName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="176ad309-dafb-4bb3-8436-826192f946e5" name="Contains serviceProviderOOID"><con:configuration><token>serviceProviderOrganizationOID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="201dd923-033a-476f-8f5b-78499eecb633" name="Contains serviceProviderStatusCode"><con:configuration><token>serviceProviderStatusCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value="500"/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value="serviceProviderID,serviceProviderName,serviceProviderOrganizationOID,serviceProviderStatusCode"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="9deca306-71f2-4eec-a3a9-1547b2b9dd82"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9b63f9c1-85cd-4410-b9bd-128d2406170c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers_With_Multiple_Filters" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="ba16f52e-f405-4e20-8302-6e75496e932d"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

//request = testRunner.testCase.getTestStepByName("Register_Service_Provider").testRequest
//headers = request.getRequestHeaders()
//headers.remove( "Authorization");
//headers.put("Authorization", accessToken)
//request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="73e75d02-74d5-483e-a194-3e099f1357af"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8671f89a-fd1d-40f8-90ee-df5a5ee9a512" name="Contains serviceProviderName"><con:configuration><token>${#TestSuite#Modified_Service_Provider_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d2f95292-6a6e-4bf2-a7fa-33e78881327c" name="Contains serviceProviderID"><con:configuration><token>${#TestSuite#Service_Provider_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$skip" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$filter" value="serviceProviderName eq '${#TestSuite#Modified_Service_Provider_Name}' and serviceProviderDescription eq '${#TestSuite#Modified_Service_Provider_Desc}'"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$select" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="4921a85d-8fee-4413-8aac-aa49be73651d"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="08262fb4-4780-4ec7-826b-54d934553149" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Without_ServiceProviderOOID_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c6c3f031-ff08-47b3-8e4f-7d47b1f88550"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="338a1d2b-0258-4165-9fb9-545c6c0b82fd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="b36eb031-1a35-4ece-9c89-9b7f0cf521a8"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="cbd69687-ec76-4714-9e24-9d63c8849a58" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Without_ServiceProviderName_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="7abdf9df-4b20-46da-8508-97e50cb2edc0"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="b2650c8b-75bc-4411-9016-125e723b81be"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
             "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="68821117-5402-46fd-9bec-8aadd9d88c71"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="617b6493-ee1a-477d-8b81-4c974b468bb4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Without_ShortCode_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="91f41fd8-23c7-4af7-9e3f-22ff331aeb58"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="a6368880-ec61-4eb5-9ff5-3b8c66ffaf7d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="214c26aa-8876-4acc-a822-f05f962b3e94"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e204a542-3f9d-4253-b70b-ccbcbb214d15" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_With_Existing_ServiceProviderOOID_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="894fe169-3df4-4b62-852e-043c17e19aa2"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="dd335a4d-c8d9-4c9d-9cca-5e30538453c5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1b2f1359-0f32-409c-be9e-22477caa7fec"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="70526fb2-e59b-41d3-8b6f-eae13c201847" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_With_Existing_ServiceProviderName_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="d998a42a-5059-49b2-a15d-62dc98db5f6c"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="035a07c9-4c1f-487f-9536-3e98b12603b1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d16a86fe-a780-4025-ba43-6fd4a64a7639"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2b691ea6-d494-4b71-9d44-4fdd30f13f45" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Contact" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c6c7bf60-48ff-4619-a2b8-bdebbccc2fa6"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider_Contact" id="964d9965-2a32-4c5c-8007-b96187d102c3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.add" methodName="Service_Provider_Contact_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProviderContactAddTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.add"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
       
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}"
       
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "home", "shortName": "Home" }, "formattedNumber": "(234) 567-8900" }],
              "mobiles": [{ "nameCode": { "codeValue": "iphone", "shortName": "iphone" }, "formattedNumber": "111-111-1111" }],
              "emails": [{ "nameCode": { "codeValue": "yahoo", "shortName": "Yahoo" }, "emailUri": "joe.dirt@yahoo.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Event Status"><con:configuration><token>complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e176859b-3379-40ac-b73c-26f222205abb" name="Contains Added Email"><con:configuration><token>joe.dirt@yahoo.com</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cf68a06e-6d77-4ecc-8a0b-2ac935f879c3" name="Contains Added Mobile"><con:configuration><token>iphone</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a049913a-8b37-44fb-83bb-967936f83659" name="Contains Added Landline"><con:configuration><token>home</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a924fc74-cf80-4d83-8cf2-b1ed146361f8"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="653302e7-d783-4126-abda-39cfed9cbf64" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Same_Contact_To_Service_Provider_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="7755a04e-479d-4695-bdd5-a2656582ea9f"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider_Contact" id="d61dccaf-61c9-4041-b30a-3e4213b7d1b6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.add" methodName="Service_Provider_Contact_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.add"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        "serviceProvider": {
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}"
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "home", "shortName": "Home" }, "formattedNumber": "1 (234) 567 8900" }],
              "mobiles": [{ "nameCode": { "codeValue": "iphone", "shortName": "iphone" }, "formattedNumber": "1 (111) 111 1111" }],
              "emails": [{ "nameCode": { "codeValue": "yahoo", "shortName": "Yahoo" }, "emailUri": "joe.dirt@yahoo.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3a3dbe43-dd9f-439b-a98a-897550394270"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="46943cc3-69ca-4bee-a3ce-33daedc9dfe2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Contact_Without_ServiceProviderId_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="1e709513-2efa-46ef-be76-7525a169ae34"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider_Contact" id="4f89dc0e-0ca4-4e26-8f71-b4d171df5895"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.add" methodName="Service_Provider_Contact_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.add"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        "serviceProvider": {
          "serviceProviderID": ""
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "home", "shortName": "Home" }, "formattedNumber": "1 (234) 567 8900" }],
              "mobiles": [{ "nameCode": { "codeValue": "iphone", "shortName": "iphone" }, "formattedNumber": "1 (111) 111 1111" }],
              "emails": [{ "nameCode": { "codeValue": "yahoo", "shortName": "Yahoo" }, "emailUri": "joe.dirt@yahoo.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3e3ad1b9-4d2e-411c-bb1d-3cdffe11c6a7"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8e408c82-94e9-4192-aa2c-4c29d6d22d38" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Contact_With_Invalid_Email_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a88ac6e2-a0bb-45d9-a8cb-12793dee01bc"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider_Contact" id="f7cf0ceb-1d91-499a-9e0d-ed31f73d5c7f"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.add" methodName="Service_Provider_Contact_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.add"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        "serviceProvider": {
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}"
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "home", "shortName": "Home" }, "formattedNumber": "1 (234) 567 8900" }],
              "mobiles": [{ "nameCode": { "codeValue": "iphone", "shortName": "iphone" }, "formattedNumber": "1 (111) 111 1111" }],
              "emails": [{ "nameCode": { "codeValue": "yahoo", "shortName": "Yahoo" }, "emailUri": "joe.dirtyatyahoodotcom" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Message"><con:configuration><token>SCHEMA_VALIDATION_FAILED</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="6591167d-09c3-4035-9b7d-e37a62430f8a"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e8cfffe9-1380-4c10-ba69-18df405f541b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Contact_With_Invalid_Landline_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="0da38423-df74-4b90-846a-dafa13623dfd"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider_Contact" id="ce3e76f7-fd95-4a51-8811-199ee3aea5b4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.add" methodName="Service_Provider_Contact_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.add"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        "serviceProvider": {
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}"
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "home", "shortName": "Home" }, "formattedNumber": "(abc) @#$ !$%^0" }],
              "mobiles": [{ "nameCode": { "codeValue": "iphone", "shortName": "iphone" }, "formattedNumber": "111-111-1111" }],
              "emails": [{ "nameCode": { "codeValue": "yahoo", "shortName": "Yahoo" }, "emailUri": "joe.dirt@yahoo.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a69d2625-51ed-4038-b3e4-f6807a9fe1a9"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7901f8dc-8862-4528-ace8-b846d47c2374" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Contact_With_Invalid_Mobile_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="cd33ded4-19fc-4f5d-a975-a0a35071e704"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider_Contact" id="67a3587b-2d51-4618-8bd5-92da6cce1403"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.add" methodName="Service_Provider_Contact_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.add"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        "serviceProvider": {
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}"
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "home", "shortName": "Home" }, "formattedNumber": "(234) 567-8900" }],
              "mobiles": [{ "nameCode": { "codeValue": "iphone", "shortName": "iphone" }, "formattedNumber": "(abc) @#$ !$%^0" }],
              "emails": [{ "nameCode": { "codeValue": "yahoo", "shortName": "Yahoo" }, "emailUri": "joe.dirt@yahoo.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="0facd9a4-489c-48fb-9ef0-83bd8d490524"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="72ef0de4-ea87-41b6-8835-e53fd4819c54" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change_Service_Provider_Contact" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="06dcdb15-e9d8-485e-a7c0-851b08720107"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Change_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="2a89cc5d-1847-4f30-8807-235f7fefdfbe"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="bf53fa18-e65c-43e4-9a5d-fe577f9abfd2"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Change_Service_Provider_Contact" id="9d5fc3e8-9eb0-441c-8db1-d672990472f6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.change" methodName="Service_Provider_Contact_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Change_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  <con:entry key="if-none-match" value="none"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.change"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
      
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
          "serviceProviderContacts": {
            "itemID": "${#TestSuite#Item_Id}"
 
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "work", "shortName": "Work" }, "formattedNumber": "(234) 567-8910" }],
              "mobiles": [{ "nameCode": { "codeValue": "android", "shortName": "android" }, "formattedNumber": "111-111-1112" }],
              "emails": [{ "nameCode": { "codeValue": "gmail", "shortName": "GMail" }, "emailUri": "josephronalddirt@gmail.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Event Status"><con:configuration><token>complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f2f9cf50-34b3-4ccf-882c-8a464fb8c3ea" name="Contains Changed Email"><con:configuration><token>josephronalddirt@gmail.com</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ba307bad-28da-413e-b118-006edace4d59" name="Contains Changed Mobile"><con:configuration><token>android</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d3d8a923-7a0b-45ab-86b4-8673eb578e99" name="Contains Changed Landline"><con:configuration><token>work</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="97b79df3-8e55-41b6-aca5-fa906e794f8e"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3c51ff51-9c0e-490f-8f72-7573f742adfd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change_Service_Provider_Contact_Without_ServiceProviderId_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="20155e27-a186-44d0-977b-fd243f612246"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Change_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="34fdff95-ece9-4e8d-af2e-fbdd567daab0"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="25798110-39f8-49fb-9bcf-dd702366009d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Change_Service_Provider_Contact" id="4bbf041a-66b5-45b5-ac6a-86800050baba"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.change" methodName="Service_Provider_Contact_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Change_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.change"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
       
          "serviceProviderID": "",
          "serviceProviderContacts": {
            "itemID": "${#TestSuite#Item_Id}"
        
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "work", "shortName": "Work" }, "formattedNumber": "1 (234) 567 8910" }],
              "mobiles": [{ "nameCode": { "codeValue": "android", "shortName": "android" }, "formattedNumber": "1 (111) 111 1112" }],
              "emails": [{ "nameCode": { "codeValue": "gmail", "shortName": "GMail" }, "emailUri": "josephronalddirt@gmail.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="dd66a5c6-e4b6-4423-bac4-589c78e3f632"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="be2c6d3a-53c8-47cb-b985-3b238fe552b0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change_Service_Provider_Contact_Without_ItemId_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="9c27310a-e16b-4fca-96a4-05abaeef8c25"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Change_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="9b86606d-5a17-44a2-89e7-1030f988933a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="e7a21cc5-319a-4ac1-86b0-e6f0fe3900af"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Change_Service_Provider_Contact" id="b6cd6256-ecd0-49b8-9342-8f2bb677457c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.change" methodName="Service_Provider_Contact_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Change_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.change"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
       
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
          "serviceProviderContacts": {
            "itemID": ""
        
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "work", "shortName": "Work" }, "formattedNumber": "1 (234) 567 8910" }],
              "mobiles": [{ "nameCode": { "codeValue": "android", "shortName": "android" }, "formattedNumber": "1 (111) 111 1112" }],
              "emails": [{ "nameCode": { "codeValue": "gmail", "shortName": "GMail" }, "emailUri": "josephronalddirt@gmail.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="62efcc1f-1bf6-414c-946d-3045e1260f7b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8f1cee24-78a0-4cad-b27b-b90216ffe74d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change_Service_Provider_Contact_With_Invalid_Email_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="9eef06f4-f556-4d58-9fcf-9c883658beb2"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Change_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="bfb004ae-5be2-4e92-a424-b0b48c635ec0"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="5ad59ef6-95ee-430b-9e5c-55c9ca00dfb3"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Change_Service_Provider_Contact" id="af706d34-d101-490c-949b-c92f010e99cc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.change" methodName="Service_Provider_Contact_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Change_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.change"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
          "serviceProviderContacts": {
            "itemID": "${#TestSuite#Item_Id}"
        
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "work", "shortName": "Work" }, "formattedNumber": "1 (234) 567 8910" }],
              "mobiles": [{ "nameCode": { "codeValue": "android", "shortName": "android" }, "formattedNumber": "1 (111) 111 1112" }],
              "emails": [{ "nameCode": { "codeValue": "gmail", "shortName": "GMail" }, "emailUri": "josephronalddirtatgmaildotcom" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="936739d2-6366-45f0-94fb-980139e17366"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="20058bd7-bc1e-4aa6-a0a5-7f11952d1d4d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change_Service_Provider_Contact_With_Invalid_Landline_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="3404a8c3-3f73-4cfa-b3ca-0a85cbe3eeae"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Change_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="b92f9b06-be0b-40f2-8d1d-16834465e50c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="012daf8f-ae98-4326-8fcc-36cb2bb22ae1"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Change_Service_Provider_Contact" id="cb3709ff-0dbf-422c-bb54-d33568bafef4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.change" methodName="Service_Provider_Contact_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Change_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.change"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        "serviceProvider": {
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
          "serviceProviderContacts": {
            "itemID": "${#TestSuite#Item_Id}"
          }
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "work", "shortName": "Work" }, "formattedNumber": "1 (abc) @#$ !$%^0" }],
              "mobiles": [{ "nameCode": { "codeValue": "android", "shortName": "android" }, "formattedNumber": "1 (111) 111 1112" }],
              "emails": [{ "nameCode": { "codeValue": "gmail", "shortName": "GMail" }, "emailUri": "josephronalddirt@gmail.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="72935df3-a5af-49c6-8939-fbce3867887a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change_Service_Provider_Contact_With_Invalid_Mobile_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f7c55518-d3a1-4aac-9eb4-fe6c237b0a4a"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Change_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="0ed0d9aa-542c-452e-8c3d-e92f2010fa45"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="f7a0b292-2829-4e64-94fa-78e6e53493cc"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Change_Service_Provider_Contact" id="518a15f3-ef6a-4913-8ac2-6fdfae21b05a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.change" methodName="Service_Provider_Contact_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Change_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.change"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        "serviceProvider": {
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
          "serviceProviderContacts": {
            "itemID": "${#TestSuite#Item_Id}"
          }
        }
      },
      "transform": {
        "serviceProvider": {
          "serviceProviderContacts": {
            "formattedName": "Joe Dirt",
            "communication": {
              "landlines": [{ "nameCode": { "codeValue": "work", "shortName": "Work" }, "formattedNumber": "1 (234) 567 8910" }],
              "mobiles": [{ "nameCode": { "codeValue": "android", "shortName": "android" }, "formattedNumber": "1 (abc) @#$ !$%^0" }],
              "emails": [{ "nameCode": { "codeValue": "gmail", "shortName": "GMail" }, "emailUri": "josephronalddirt@gmail.com" }]
            }
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="08136b37-179d-469b-9c4c-47c17bfffae8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove_Service_Provider_Contact" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="01eb33bb-fb1a-4c50-acad-f9852e3b4942"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Remove_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="719043ca-78c7-4765-989e-40fbbe8bac92"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="de5cd6fb-b18f-440c-b9d0-b2f5ecbd6a1c"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Remove_Service_Provider_Contact" id="240af9b1-f9f4-4272-a050-69cdc100db65"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.remove" methodName="Service_Provider_Contact_Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.remove"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
       
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
          "serviceProviderContacts": {
            "itemID": "${#TestSuite#Item_Id}"
          
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Event Status"><con:configuration><token>complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts" id="44b549c9-ff4d-412b-8f78-7a77b4a58a0b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="f4744ec6-db7c-45b2-92dd-f4dda4dd4077" name="Not Contains Communication"><con:configuration><token>communication</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="f20cfe44-d921-40ec-9822-9c1271760c53" name="Not Contains Mobiles"><con:configuration><token>mobiles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="85aebdce-5c18-46b2-bd33-929b53645322" name="Not Contains Emails"><con:configuration><token>emails</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e07472da-fc12-46f0-94aa-91874f17f2df"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5c18582e-920a-4c90-850a-6224161480d9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove_Service_Provider_Contact_Without_ServiceProviderId_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="084e2931-cd2d-40e4-abbe-f7fc3e356432"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Remove_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="2ac1ffe3-ce8c-4160-8f38-8ff45520a7d7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="dc99c228-2328-43eb-83cb-b3f27ba50665"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Remove_Service_Provider_Contact" id="d0469376-139a-4e91-b780-6785e5963c31"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.remove" methodName="Service_Provider_Contact_Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.remove"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        
          "serviceProviderID": "",
          "serviceProviderContacts": {
            "itemID": "${#TestSuite#Item_Id}"
       
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8ad93f7a-6b85-44a1-b24a-62c058446861"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="191b4eef-e5b6-451c-a43a-84ff939f9279" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove_Service_Provider_Contact_Without_ItemId_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="51a11d0d-7602-44c3-89de-92f7b88a081b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider_Contacts_Itemid").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Remove_Service_Provider_Contact").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider_Contacts_Itemid" id="8a44d547-c4b9-43c6-83f2-8ea7fcf1b3ae"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider_Contacts_Itemid" id="83a764f0-22e5-4c88-ae7d-0c497ffee6b4" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="if-none-match" value="none"/>
  &lt;con:entry key="sm_transactionId" value="WorkersTest"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@dump-file">Get_b2b_response_with_bypass_1</con:setting></con:settings><con:encoding/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apifit.nj.adp.com/hr/v2/workers</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="74275da8-541b-42d2-90e3-d8a3dd508574" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="worker/person/otherPersonalAddresses/itemID"/>
  <con:entry key="$top" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$filter</con:entry><con:entry>$top</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$queryName</con:entry><con:entry>count</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Item_Id" id="7287a61a-390e-4454-847a-bad1b6178a75"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_Service_Provider_Contacts_Itemid"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.serviceProviders.serviceProviderContacts.itemID
temp = temp.toString().drop(2).reverse().drop(2).reverse()

log.info "itemID: " + temp.toString()

//Read this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Item_Id",temp.toString());

</script></con:config></con:testStep><con:testStep type="restrequest" name="Remove_Service_Provider_Contact" id="335cc06a-9e55-4159-ba2e-2bbadaeaa07a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.contact.remove" methodName="Service_Provider_Contact_Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove_Service_Provider_Contact" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [{
    "serviceCategoryCode": {
      "codeValue": "core"
    },
    "eventNameCode": {
      "codeValue": "service-provider.contact.remove"
    },
    "eventStatusCode": {
      "codeValue": "submit"
    },
    "actor": {
      "geoCoordinate": {
        "latitude": 40.816636,
        "longitude": -74.310168
      },
      "deviceUserAgentID": "Apple-iPhone5C1"
    },
    "data": {
      "eventContext": {
        "serviceProvider": {
          "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
          "serviceProviderContacts": {
            "itemID": ""
          }
        }
      }
    }
  }]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="56eb48ef-c280-477d-9e36-f58e1fb47e6a"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e1fea50b-89b2-4187-b4d0-fb4bd57f2e16" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Service_Provider_Without_Description_For_200" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Service_Provider" id="32c8ab80-464a-4ea5-98dc-9479d3d077fc"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="41e58f5c-4ceb-4d45-bdf2-f7b351172945"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider_Without_Description").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="8c7d3ff9-603c-41ed-90a2-33357be2bbcf"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider_Without_Description" id="e9c98f58-f18b-4ce0-a87c-3d1780ab4d2f"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider_Without_Description" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="b72afa3f-d05a-4f1b-ae81-fbcab60dce06"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider_Without_Description"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="abb1ad84-c698-4708-9c10-44b42924a5f5"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>3a1d1eb2-dd33-4c80-bc7e-00691b0d3ef5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="2c552e10-1e76-4ff5-9b43-523d99098de6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Service_Provider" id="829d9f34-248d-4d8f-a248-45ddd633d834"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="ef32c8ed-b22a-4dcc-b8f3-671caaf3990a"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="560a1326-b0e2-4f69-9790-f4430fc6dd4e"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="cc9ac7e3-e04b-49f8-a73d-6a214bc50e28"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="a347e5da-972c-467e-934b-a91777403c99"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="462581fc-4318-4874-b505-06315f43d329"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Operation_Spec_Id", "OSpec"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="637c737e-2df8-4a7a-a06a-e69e9ee27031"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="4578efa6-7ab5-40d0-84ea-c624ddb71bbc"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="55303fa0-d65c-40fa-b2e2-e2ed49ba8f05"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>45114a7d-944a-4b4c-a34a-4b38a3c95fe5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="529ef1b6-988c-4011-b8a4-aae597a91e35" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a589c61a-1a1b-4080-b46c-0e07aa42d02c"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Operation_Implementation" id="046f5ed6-9a8b-417c-a357-2bb5d92d2393"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations/{operationImplementationID}" methodName="Get_Operation_Implementation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="920d3673-f05d-4e48-9854-4fdd34be6ae0" name="Contains operationImplementationName"><con:configuration><token>${#TestSuite#Operation_Implementation_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="operationImplementationID" value="${#TestSuite#Operation_Implementation_Id}"/>
</con:parameters><con:parameterOrder><con:entry>operationImplementationID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="53c7598e-659f-4b11-adc0-dfb8c2873c36"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d92b2899-1bb5-4499-9ba1-d7db9b05b4b2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="8769d99f-43eb-4bb1-aaa1-a84f3c088077"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="abb43084-2e0d-48cc-8cf5-e9cb21faffe7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 6158a13f-fd3a-4c58-aac0-240cbc9ed380"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="66d88262-746d-4d6b-b0a3-f50fae601a20"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e9b8bbaf-cbe5-4aaa-b4c1-a2f469cca0ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Top" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="7d120dc3-db39-4c1d-883b-79f723d73df0"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="949cd176-9483-46dc-8137-d01c204e0d4e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
</con:parameters><con:parameterOrder><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="487fab32-2609-4dee-ae99-266fad463181"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d02dbb0d-c5b7-4c6d-83ea-3a2858a30960" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Skip" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="dd56c384-3fa3-441a-b092-00d3ad0942e0"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="4cd72797-9084-436b-9647-3a8aa066234a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="2ba6221a-7d81-40db-a658-15ba4cb0ec64"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e1c929d2-1d06-41c7-a3ae-d698addbe5be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_InlineCount" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="08a04ca9-92bc-481b-9569-a87a69131412"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="9d0f1ec8-8f4b-4b1a-a4d4-322d77714b67"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c57a372f-3c1a-40fd-be13-7c24f76822c7" name="Contains"><con:configuration><token>count</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value="allpages"/>
  <con:entry key="$filter" value=""/>
</con:parameters><con:parameterOrder><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="043f80ed-2e36-4898-a5b7-eb0a1e339637"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5bc7fec5-ac3f-445c-a588-6b191cc82ece" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a83e6eda-c24b-411c-ad34-e125942fccfc"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="fa77674b-e404-435e-b010-0bfa7f3bc482"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a5ac637e-5e9e-4fe1-bac2-847a69963ee6" name="Contains operationImplementationName"><con:configuration><token>${#TestSuite#Operation_Implementation_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationName eq '${#TestSuite#Operation_Implementation_Name}'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="7683ca22-cf1c-433b-939f-8a6004aeb815"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="86a46332-27dc-406a-9213-c3b33e934e53" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="d9d9a4d0-d2f3-4dce-ab00-7172874ce89e"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="c07712b2-9458-4ea4-a091-39c352fa6b56"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a36d2002-d5c0-47df-ad5b-0c3b0448cc38" name="Contains apiSpecificationID"><con:configuration><token>apiSpecificationID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="00b76ed2-25d3-49c5-bb2a-6198474d70ad" name="Contains operationImplementationID"><con:configuration><token>operationImplementationID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="af7364df-5f3d-494e-9550-65143e72837d" name="Contains operationImplementationName"><con:configuration><token>operationImplementationName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="apiSpecificationID, operationImplementationID, operationImplementationName"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="c3083717-c12a-48ce-9d8a-1b86a09b0d86"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6052cf9a-e746-45a9-aece-2368182f4273" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Top_Skip_Filter_Select_Inlinecount" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="df7167ff-5c0a-450b-b09c-bafb53c62073"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="56a8c372-190e-4a29-9dc5-5bb20bf63c0a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a940d530-a0c8-4b06-b3e2-93a3118a703e" name="Contains apiSpecificationID"><con:configuration><token>apiSpecificationID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4ece9710-c76d-4f0b-a70a-7ba799c68c86" name="Contains operationImplementationName"><con:configuration><token>operationImplementationName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="10d567a3-556c-40b9-b780-9ee029ea0e52" name="Contains operationImplementationID"><con:configuration><token>operationImplementationID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="apiSpecificationID, operationImplementationID, operationImplementationName"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value="allpages"/>
  <con:entry key="$filter" value="operationImplementationDescription eq 'ADP'"/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value="1"/>
</con:parameters><con:parameterOrder><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="fba8941b-3e83-413d-ac04-6545a32d9492"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ec744fe5-0d24-41dd-a48c-2313e7c6cb17" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Multiple_Selects" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="04832410-334d-48b9-8608-56246744d5c1"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="9df520e5-7b8e-43f5-a643-7cfd92490859"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="13e4826a-8c9c-4019-ae59-f888467c6d44" name="Contains operationImplementationID"><con:configuration><token>operationImplementationID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="607af9ef-378f-4904-8ddd-e6174a87c445" name="Contains operationImplementationName"><con:configuration><token>operationImplementationName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d057458e-d800-4a13-8560-b2d8a65dc3b1" name="Contains operationImplementationStateCode"><con:configuration><token>operationImplementationStateCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="operationImplementationID,operationImplementationName,operationImplementationStateCode"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="4ba32c53-0279-4ae8-b676-27612457d4c0"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5cfb18fb-827d-4b31-8265-771f0c2a9712" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Multiple_Filters" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="b606901a-da3c-410a-9e15-d8b5a33a38aa"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="39b085d8-9120-490d-8569-223b5fdc67a1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a46ec7cd-644d-47e5-bf29-f8cf7f80806c" name="Contains apiSpecificationID"><con:configuration><token>${#TestSuite#Api_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationDescription eq 'ADP' and apiSpecificationID eq '${#TestSuite#Api_Id}'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="5f2a25e2-2034-4699-849e-11deefeaff38"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="bac5b724-6b62-4a1e-bb1a-74ea11e01d93" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationDescription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="955af038-231c-454a-ac15-da1792e9af05"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="4a4b61cb-fe49-41d2-908c-87e2c9a9590b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="1831e9aa-dd70-475c-a704-4fce467a73ee" name="Contains operationImplementationDescription"><con:configuration><token>ADP</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationDescription eq 'ADP'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d2fd0c60-5d44-47da-8363-5b993cc40d28"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4adccdd1-d77e-43ae-8ec7-dcb21916174e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_ApiSpecificationID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="3a673d15-188d-440e-a504-868ba9aacc20"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="151ce68f-80a2-4336-9995-27819e1e9b9e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ed0436bd-9010-46ec-a8f5-8a114b26a723" name="Contains apiSpecificationID"><con:configuration><token>${#TestSuite#Api_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="apiSpecificationID eq '${#TestSuite#Api_Id}'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a91f1e8c-3c0b-478e-a43c-334425ab57f1"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3229c52f-d4e9-48c5-9c60-c585e346f07a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_CanonicalUri" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="159a0fe9-fd34-40c0-adb6-77e625c0eb37"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="2f935916-32b9-4121-884b-c579cbe3de5a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="03ae1e4a-9378-426a-a0b8-9af430e24d43" name="Contains canonicalURI"><con:configuration><token>/a/b/c/d/e</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="canonicalURI eq '/a/b/c/d/e'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="44366a27-d145-448e-a185-c5a783e6bb35"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9684fec6-9bb2-4709-8c2e-ea36b60eb742" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="e7d8ccb9-a5e1-4853-9a61-37a8be86a9ec"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="b61db28f-ff1e-461c-8a49-886fc7a989dd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d1e28f8a-0365-42de-8c24-917287139cf1" name="Contains ${#TestSuite#Operation_Implementation_Name}"><con:configuration><token>${#TestSuite#Operation_Implementation_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationName eq '${#TestSuite#Operation_Implementation_Name}'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="2eccbbf1-b3ac-4e3d-b12c-a18b3f45c741"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="800836f5-8065-4315-95e5-9e962e528c34" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_ServiceProviderId" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="0e3c93f2-4477-401e-a104-2bd680465fb3"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="521565ad-3d62-4943-8d08-ddc544ac599c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="34b36632-c0bb-4503-828d-186db74131d8" name="Contains serviceProviderID"><con:configuration><token>${#TestSuite#Service_Provider_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="serviceProviderID eq '${#TestSuite#Service_Provider_Id}'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a9e3cde0-171a-4a10-a339-2a93673e571d"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c03ca291-c490-46cd-b1d9-ae580309d286" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationGrantTypeCode_ShortName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a462e345-8fe7-4ab9-9abd-9bf26229d71f"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="6f07257a-4ccd-4dbb-86e0-56fa89807241"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="378cc2e4-1fef-4ba5-85c5-f33ca6b4368f" name="Contains operationImplementationGrantTypeCodeShortName"><con:configuration><token>None</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationGrantTypeCode/shortName eq 'None'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="60073f54-be9a-46b3-b4e2-2aa222b7f0bf"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1bf467bc-d0fd-45ad-a58c-a85ce0e823e6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationGrantTypeCode_CodeValue" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="1987f3ea-3eef-4aed-9a81-73614593b395"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="9348c5a6-0c5c-4b34-840f-1938dcbd3910"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="764d034e-5d46-495b-9759-7879977e256d" name="Contains operationImplementationGrantTypeCodeValue"><con:configuration><token>none</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationGrantTypeCode/codeValue eq 'none'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1eb7a49d-6ec5-42ac-8179-9c6ca9cee832"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="182da7f8-1659-48b8-a182-241a32c8a489" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationAuthenticationTypeCode_ShortName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="41a8dd71-85aa-4246-815c-95ed22d36d11"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="f45eda7a-d28b-476c-a56e-3cf1363f151b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ac3cc461-df3a-4a0e-963d-45951a1cadf7" name="Contains operationImplementationAuthenticationTypeCodeShortName"><con:configuration><token>None</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationAuthenticationTypeCode/shortName eq 'None'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="c7dfb0e0-e893-4326-924d-6b341e95930f"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f0f61636-742e-4d08-b1dc-ff70b7de4012" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationAuthenticationTypeCode_CodeValue" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="49ef1447-bba6-422d-a908-047d1efc0d6c"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="7cdc8b62-0214-4dc6-897b-07f0593918b1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8dce6f6b-e8d1-4787-b2e5-27fa8f75563a" name="Contains operationImplementationAuthenticationTypeCodeValue"><con:configuration><token>none</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationAuthenticationTypeCode/codeValue eq 'none'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3dbe45e7-eadf-47b9-b031-2f20577f968e"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="14bc4399-8216-4360-bc2a-c4c9cbd52022" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationStateCode_ShortName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="5cab4e9d-58f2-406b-baba-dd27eb87100b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="af12a4ea-7dec-45b3-9fe6-ed139ad647d0"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="111fbf46-dbd3-4ae9-89a6-91a7a0a2ecba" name="Contains operationImplementationStateCodeShortName"><con:configuration><token>InActive</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationStateCode/shortName eq 'InActive'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d42cdf70-371b-4eea-a969-1434ee47eafe"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d9f17b33-3305-4392-8aa2-ae67a87ebb03" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationStateCode_CodeValue" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="6de4236a-b4db-4b03-983f-b325d1a0b286"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="a1697106-cc06-45b7-a7e4-b0b62b2055ed"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e8c68682-4062-43e2-b50b-29a4f96877fc" name="Contains operationImplementationStateCodeValue"><con:configuration><token>inactive</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationStateCode/codeValue eq 'inactive'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8347a15b-c09e-4b14-95e6-63b8012c1a5f"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5575574b-3c7f-4de0-88f7-51b116396dc2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationStatusCode_ShortName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="00517966-cccc-45ec-9ebc-48c32b1f9d18"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="16245766-f341-47dd-84fb-8fa2dca710b4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="6eb73ec3-222c-401b-abb8-b4415d058b62" name="Contains operationImplementationStatusCodeShortName"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationStatusCode/shortName eq 'Open'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="399931b0-22e8-4ed4-9771-f0c7fc598bbb"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a164b53c-4d40-46ba-8b04-3a18f4b9ffbd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationStatusCode_CodeValue" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2cb6962d-3b47-41e6-b202-114dd750801e"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="07d01cd9-acff-43cd-a110-fa1e0e9b64c7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="48ca5e6f-bf7c-4eb1-8edb-6026946d1041" name="Contains operationImplementationStatusCodeValue"><con:configuration><token>open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationStatusCode/codeValue eq 'open'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="0a48f8e2-8d0c-4ec3-b7ed-4bc20d0cc8b7"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a1ab6018-4214-446f-99aa-a98c2c49c965" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationVersionVersion" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="e613a857-90bf-4b53-90c8-6f7c955d778f"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="6d804a9f-6cc7-476e-846c-98a9dd382faf"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="6e336b03-0563-4362-bc66-208ea477dc65" name="Contains operationImplementationVersion"><con:configuration><token>1.0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value=""/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationVersion eq '1.0'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1d2a1662-c706-461e-8f02-bd208f6a0c64"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="31eee68e-7eb5-48a4-b2e8-3bdad279336e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Filter_On_OperationImplementationID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="af9be457-0aee-4d1a-a3cc-c1eb856ca286"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="24401e7d-91e1-4fba-abad-73ba18ef403b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="13c7f524-0870-4a46-bb58-0ad372b3395d" name="Contains operationImplementationID"><con:configuration><token>${#TestSuite#Operation_Implementation_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value="operationImplementationID eq '${#TestSuite#Operation_Implementation_Id}'"/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="04ed4333-1e65-4d55-b728-1cd973b29517"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2ee74cb9-246c-4201-bcd9-83676fe600f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_OperationImplementationDescriptionDescription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a7db446a-bb00-4666-9f4b-01d2a4d97108"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="3e6a1c7b-52d5-4f0e-ba98-c3a677fce162"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="1793c400-2401-4e90-8be8-d6f54ead30e2" name="Contains operationImplementationDescription"><con:configuration><token>ADP</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="operationImplementationDescription"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value="2"/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="19093a11-f1da-4088-a435-befb8c23a368"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f7324c9f-374c-4ca9-87d2-a8111d34067a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_ApiSpecificationId" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="5d8b3f28-cfe5-463b-923d-641bcaf91ba4"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="012f6c13-1baa-481e-8388-067cde537c67"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="6d49120c-2683-4414-b080-7809ed1cee01" name="Contains apiSpecificationID"><con:configuration><token>apiSpecificationID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="${#TestSuite#apiSpecificationID}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8ecaa9af-cc0e-4938-b50e-d0cf630a826f"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7d5e4f74-c3d8-4cdc-ae61-47b5bd0c9fb1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_CanonicalUri" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2e956614-5da4-4b5a-b118-b5e399d1bdf6"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="5e7051fd-a511-4292-b5c8-6c0fe694b509"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="70c3b793-1347-441a-8fd7-4be9ff827bdb" name="Contains canonicalURI"><con:configuration><token>canonicalURI</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="canonicalURI"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="bcbf2c82-5cd0-4bbf-82c3-ec09db296966"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="eee41485-2ade-4399-9775-bd8d0ab72dfb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_OperationImplementationName" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="bcc58abb-a4eb-4f9c-94bf-506d33731afa"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="20356331-6986-47fd-8f97-7bb0b08625da"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="066e7ed4-8d2f-4c1a-8d0f-81e8c6bb0b74" name="Contains operationImplementationName"><con:configuration><token>operationImplementationName</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="operationImplementationName"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="ffc8ae57-53a2-4c76-a8d8-4f22e8ea7314"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e3ac8290-5bc1-430e-8db8-32cf424c3b29" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_ServiceProviderID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c10d730b-bf9e-4c21-81f5-a18a9fa28163"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="7ff0979d-183c-4ec3-8ee2-0839cd96ab7d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="85c0499e-fa86-408b-b7e1-71820d2968bf" name="Contains serviceProviderID"><con:configuration><token>serviceProviderID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="serviceProviderID"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="c0cc54f5-c747-4592-a9b3-902a90525d94"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2cc4342e-f67a-4d31-99f3-e3af700afff7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_OperationImplementationGrantTypeCode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="9e1796bf-1888-484a-a2fb-b43dda0f7ca1"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="352d1fe3-d7f8-4577-a120-1ccce2247732"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c8785277-f9fe-438e-8154-f2cbee216b2f" name="Contains operationImplementationGrantTypeCode"><con:configuration><token>operationImplementationGrantTypeCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="operationImplementationGrantTypeCode"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="4c0a581d-d1b0-40c6-abe2-923c6185b5a8"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9f3a0213-f615-4b5a-93ac-801fd8ae6753" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_OperationImplementationAuthenticationTypeCode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2afc123c-7fc1-4230-8c8e-ef2fb85bc54d"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="730a9418-bbf9-4a93-a2e0-e82985beee12"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="6712a088-19ad-4172-bc3a-04d8729e3256" name="Contains operationImplementationAuthenticationTypeCode"><con:configuration><token>operationImplementationAuthenticationTypeCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="operationImplementationAuthenticationTypeCode"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="babe9984-9c83-4651-9e25-f9983305c3ca"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="51830928-ef8c-4f67-ac27-06b0774c2b73" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_OperationImplementationStateCode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="7edde869-b133-45d5-92d2-9a9c1be4ebdf"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="ab1eb4e4-da07-46f1-9d0c-0c202199b49d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8b738155-c615-492e-bf12-52be9d98d53e" name="Contains operationImplementationStateCode"><con:configuration><token>operationImplementationStateCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="operationImplementationStateCode"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="830b9cb9-dc1b-4ba9-894c-f1d6afaaa387"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="70ab17f5-7958-4296-9e46-32969d2412f6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_OperationImplementationStatusCode" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="97f92581-0c48-451a-9c68-f1fef3974cb7"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="77239c64-5e62-4cf5-9f58-d217a0a6ba56"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="68ef3160-6913-4361-932e-0b757ea13248" name="Contains operationImplementationStatusCode"><con:configuration><token>operationImplementationStatusCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="operationImplementationStatusCode"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="fecc450e-f10a-445f-be2f-54246629c3ea"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="22c1936e-798a-4457-a4f4-32b2745e8672" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_OperationImplementationVersion" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="02d5b5af-4cb6-4deb-aa1d-3fa496641929"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="fb6cbf8f-333e-4fb0-b095-fb6e6ea2711d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="742767b3-0ac2-4785-829a-46297693fb54" name="Contains operationImplementationVersion"><con:configuration><token>operationImplementationVersion</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$select" value="operationImplementationVersion"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="df6e2301-ebf3-4205-9be2-528fd9084586"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="04ca7140-fa20-4f5d-a79d-fbd1a7ad5cfb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations_With_Select_On_OperationImplementationID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="eb67da0e-c66b-4c8d-b272-aacc72ae079b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="f710aace-4265-4498-a1bb-4560a0bec317"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ef9765d5-c616-4a9e-8a2a-f76da72e68f2" name="Contains operationImplementationID"><con:configuration><token>operationImplementationID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value="operationImplementationID"/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value="2"/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a342b868-8676-4f02-bdd6-5d89211b2a4e"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="91f1dfa1-565e-4c93-8cb6-3e342cf7975c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Submit_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2be5126a-22e0-4841-a900-2cff51d8bc5d"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="3490c811-1543-45a9-b289-9aca361e17a3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="63af97a6-79bb-4bc7-bff0-b15cbf962035"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2c817147-2075-4f81-9b28-72d7e7629148" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Review_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c5466655-b1b6-4d3a-b9ce-aea327a39f00"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="c8ae494d-a65b-4a0e-b3c4-10e76c053cf8"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="75c34699-0c70-42ae-a410-577df738c915"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="698252b5-c2ca-424a-98e2-88269a0eb61f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Approve_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="4206b87f-ec82-49bb-8c04-aab64bde8118"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="4e85d7ad-2f66-4d94-aa65-11c410d3cfae"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="7c0f254a-1bcd-4ebf-acb6-4e068a7c2e75"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b2abcda9-7ffa-401a-8d8b-b9b945ce9700" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="0af5b2e4-7eef-443d-8e08-b4811634fab0"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="f537ef1e-7114-4736-9a85-7922b87b0719"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="5d04dc4d-e3fb-420d-9918-5cdff1c76783"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="0c2ce4b8-c135-4178-8657-72c008753052"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="580c1109-b132-41f6-ba85-0135a8cab6e1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="3622bf39-bc2f-4111-9288-be22c7368eb5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a90fc508-58e1-431d-b1e2-83a26177534e"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="22498de2-4283-439d-b438-5c38fe3e0f4c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Suspend_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="4d8b8e90-4a5b-42d4-8711-0e28d628f26b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Suspend_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Suspend_Operation_Implementation" id="2ded8255-b4a6-462d-98d2-34e8df6326e7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.suspend" methodName="Post_Operation_Implementation_Suspend" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Suspend_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.suspend"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0a8991df-65d4-484f-9f1b-28136ba9bfb1" name="Contains Operation Implementation Status Suspended"><con:configuration><token>Suspended</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cc37ff6b-01e2-4f91-b43b-12ff80faba8a" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="76be9a0d-d148-45fd-985c-1023ea690c41"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a393d177-00ac-431e-bf62-3e5726a65bc0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Open_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="11bb4fd3-f0ed-4519-8a17-0437cf0827ba"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Open_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Open_Operation_Implementation" id="4d50394b-9c22-43f3-a63a-848ac9bc8f28"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.open" methodName="Post_Operation_Implementation_Open" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Open_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.open"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="010717fe-a2de-46e5-8fa1-3ab0e0499c0e" name="Contains Operation Implementation Status Open"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e7c8f98a-68f1-45c4-90d1-98213489f07c" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="ff57e0e6-d092-461f-95ac-3a417d39518d"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4d0e8a1b-26db-4b4b-a922-43a64c7f482a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="013e895e-8410-4243-95ee-46422954b853"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Modify_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Modify_Operation_Implementation" id="c00488b5-a8b1-4440-aaee-69ff89ff5f39"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.modify" methodName="Post_Operation_Implementation_Modify" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Modify_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.modify"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
    	    "eventContext": {
 			"operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
 		},
        "transform": {
          "operationImplementation": {
            "operationImplementationName": "${#TestSuite#Modified_Operation_Implementation_Name}",
            "canonicalURI": "f/g/h",
            "operationImplementationVersion": "1.1",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "some",
              "shortName": "some"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "some",
              "shortName": "some"
            },
            "operationImplementationDescription": "ADP"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Open Status"><con:configuration><token>open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3619cb91-c2d6-4dce-b6f9-f27c4992cf0d" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_Operation_Implementation" id="6a31e783-1059-4e42-9090-8f0dfb54b7f4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations/{operationImplementationID}" methodName="Get_Operation_Implementation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4e04cdfa-e158-434c-905d-7db05c9786dc" name="Contains Changed Service Name"><con:configuration><token>${#TestSuite#Modified_Operation_Implementation_Name}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="085c52cc-9341-42eb-bf30-edf78ef7e1d9" name="Contains Changed CanonicalURI"><con:configuration><token>f/g/h</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="de5f7cbb-c326-42fa-be17-2be9dec4570d" name="Contains Changed Type Code"><con:configuration><token>some</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="operationImplementationID" value="${#TestSuite#Operation_Implementation_Id}"/>
</con:parameters><con:parameterOrder><con:entry>operationImplementationID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="7770b90c-ba4c-4191-b3d3-01ea82731033"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="cf567018-dd1a-4ac9-9213-19be7e87591b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reject_Operation_Implementation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f66d4f2e-c253-404a-a078-c2f8473f733c"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Reject_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="abeb9e6a-a924-4270-8261-8174404c6171"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review-request"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="e01d5343-3ac5-47eb-9978-0ae4fa51399e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Reject_Operation_Implementation" id="8a749a44-45c8-47b1-b4ed-d30539a0f2b6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.reject" methodName="Post_Operation_Implementation_Reject" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reject_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.reject"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cf0b7ce4-1611-48fe-8fa2-a1c33065305f" name="Contains Operation Implementation Status Rejected"><con:configuration><token>Rejected</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5d4c07fc-bf6d-4df5-a435-ff9c92266a22" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="fe4ba33d-b4d5-47e3-b14c-375dd84b120b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d39f3177-eea6-41b8-90b8-e7878604ea4a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Operation_Implementation_In_Active_Status_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="1ba64136-3b04-463d-975b-c41bfe9052f0"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="a375a30c-0b6b-49a3-839a-b2afd937a4ca"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="81bef54f-1e73-4e16-a58f-569c4e8122ad"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f8afa8fe-8180-4d5c-9140-e148e2b4a7b8"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_In_Active_Status").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="2879fe68-b9ad-4f43-b8cc-681954da81dc"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="2d001d5f-fd5b-49e6-a07b-76ab2dbe984c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="79b64445-26ae-4818-80cd-11f147be06fb"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="0f6efceb-8625-4720-aa65-1730d08befcc"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="593cf255-1a72-4aef-8857-2d8b6c071c96"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="c58a3fd8-8a86-4e54-8dc7-7171099c4dc7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="82665fa4-866c-4dac-ad3e-df3096cf1788"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="d76393b3-1fa7-4738-87b5-b626a28b5a2e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="91880189-f7c2-4794-acf8-42ffb557d1bd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="970cd501-f94a-44ea-8164-20b13093b6cc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="fea90aa6-c912-46ac-9c46-da77e0ef2a95"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="2ac8e8ef-8e07-4972-a4ac-1d34cf7a6490"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="29ed779e-0aea-49b4-888c-fc62996ccb55"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="4a083649-b9e6-4859-9b0e-c857fc541afd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_In_Active_Status" id="28d71e22-b716-4c0b-a31b-2321f39081d8"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_In_Active_Status" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="20cc61e4-80fb-4749-8d1d-7621613c409b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8d80f98b-563e-45fe-86a9-dfdc0c649b1c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Suspend_And_Retire_Operation_Implementation_In_Active_Status_For_200" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="4196e291-a70f-4a32-8afb-d24d855bed35"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="072ba61f-37d4-47e4-b4bc-f4f4e8b427fa"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="2a582e7f-fba8-4567-aff4-6cfe8725f17d"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="0edb1fc7-a5e2-4e89-a180-04ecdf217273"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Suspend_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Retire_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="e89fdd14-f365-4077-9f8a-e29bbc226969"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="e9cabdac-02c5-4c26-a5cd-171c3cc16d27"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="b56eb776-464e-418a-85e2-e1ad9bb7738f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="93df805c-317e-4f14-a85e-8a898bd81a63"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="521a253f-8b54-427d-b48b-4bf216a51457"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="c1bff086-0723-410a-a30a-bedc7cb886d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="74f2811e-c5bc-4908-b87c-de120edbec75"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="c9dd5a0b-8ad7-455c-b6fe-80f3f6fa8075"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="85505742-8928-4e2c-b14d-1aa21d035ca4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="e5639b97-c661-4a8b-b9c7-9715a6e80cfd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="ae4d3362-0056-49db-9f46-5c903b30912d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="2aba31d7-095d-4694-9bb1-01f587b6d129"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="5ac4865c-6954-4b08-997d-303b0aef1294"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="79383b6d-1219-4850-bb75-16183421444b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Suspend_Operation_Implementation" id="4f3f8105-bb68-464f-8b28-c2a5e5eefdef"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.suspend" methodName="Post_Operation_Implementation_Suspend" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Suspend_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.suspend"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0a8991df-65d4-484f-9f1b-28136ba9bfb1" name="Contains Operation Implementation Status Suspended"><con:configuration><token>Suspended</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cc37ff6b-01e2-4f91-b43b-12ff80faba8a" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Retire_Operation_Implementation" id="8eae30e5-d539-45f4-a01b-fdd65666a951"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.retire" methodName="Post_Operation_Implementation_Retire" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Retire_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.retire"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c435add8-f2b5-4d3a-b209-4e0770bff4d9" name="Contains Operation Implementation Status Retired"><con:configuration><token>Retired</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="507744c5-f862-4efb-996e-1cccde3c8c9e" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d983b7ca-e607-4536-a86a-9443ba4a041a"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="515854b8-4fd8-4138-a5fb-3eb703d9aacc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Retire_Operation_Implementation_In_Active_Status_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="a38207cb-4a1c-4a14-9fce-54b67b99c849"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="419dfae8-a1fd-4adc-bc1c-ae6c075b67bc"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="485722af-c838-4af3-8779-be8c79a24b3f"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="ad2c838f-1133-4b6a-ab72-8c3de9b95df3"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Retire_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="ceeab22a-11d8-4949-8398-016eaaaf424b"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="a10d82b5-06b7-4932-a5b6-f7462b068db0"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="58855118-5f86-4f0b-bf41-04f798d265aa"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="a9777cca-5248-46aa-bfff-d21947062484"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="74f4ef0c-f59f-433c-9b8a-e67f6377f8dc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="b5363ef5-64db-40e8-8b65-9a073b981210"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="5913b624-77c5-48d3-b643-623dbee48590"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="8b611de1-7521-4ff2-b8be-6189a4e3acbb"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="451bd6a0-5bf2-44ba-a162-d881b3254f01"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="5fe7c13f-0e1a-402d-817e-cd66faa736a0"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="08326657-0a78-4187-aa8c-bc5a7e4d3b30"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="5fb473d4-9eee-4dfe-8684-9029e4529a74"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="cfa8f296-b557-456b-82c7-4dd05baec5f7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="e0972e72-df31-4b7d-bb68-1654a36d4383"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Retire_Operation_Implementation" id="2ec8fd6f-0a38-48f1-b0e7-8c762eb56a96"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.retire" methodName="Post_Operation_Implementation_Retire" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Retire_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.retire"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="79d5aae9-f093-4390-9bb6-00e6fd58a97f"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="705d116b-c9cf-4697-95cf-eb4c4b0c9ef0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Suspend_And_Activate_Operation_Implementation_For_200" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="08a32f5e-1bbf-48ba-a80d-41fdbe3817a2"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="d3e21e64-fb75-4611-a21c-8ae831aad253"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="7104f603-50a6-4c25-92d1-3f42e86c35ee"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="fd18dfa7-d791-40b5-b249-050fd7941bbb"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Suspend_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_After_Suspend").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="ac688254-8153-4aee-8ab7-06d4b525276f"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="5fda840b-32b4-4f63-8075-13aba021c2cc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="c2ba27a1-b6fe-4a2e-be74-0a15e2fbae26"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="db6624dd-8192-4747-8acb-7e4188b4e9e6"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="cb5c7fbb-5889-43e5-920c-054d27e5a522"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="0bdf8740-c3b1-48da-a918-3aa1fd3c3c85"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="1415a707-a5b7-4529-a454-2d414a502a14"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="72855d06-de1a-4877-a37f-1ae50eead397"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="96063230-4fbe-45ac-9eca-4496b5b82798"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="e659a1df-d3f4-4164-8e68-873a4ddc2be3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="32da9d95-beed-4b73-b96e-147be8161145"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="7e6f1f75-7c9f-4507-9ecd-4951867635ce"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="2ce955cd-662a-42da-9126-f9a3ed913d62"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="da92c024-68f5-4c18-98e4-c607f4dd2303"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Suspend_Operation_Implementation" id="b5e66ebb-3f41-4de4-a47f-d31c277dfab3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.suspend" methodName="Post_Operation_Implementation_Suspend" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Suspend_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.suspend"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0a8991df-65d4-484f-9f1b-28136ba9bfb1" name="Contains Operation Implementation Status Suspended"><con:configuration><token>Suspended</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cc37ff6b-01e2-4f91-b43b-12ff80faba8a" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_After_Suspend" id="87410b96-671a-4f98-a866-8caca1d8241c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_After_Suspend" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8af41e89-5d83-4fc9-8fa0-d879d1e35ec5"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8692be90-37e3-4304-a08b-91cb12fc755e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Edit_Operation_Implementation_Before_Operation_Implementation_Release_For_200" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="d21e6d15-27ba-4161-98ba-a6a2a14c5b7b"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="e022be64-3ecd-4743-aae0-5ac3588f1e6d"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="5eed266b-dfb8-4f2f-948e-b640c97d9978"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a8f071b8-6824-41f4-b7b0-ec71c581d94a"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Open_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="181d2b6f-a285-492f-b36e-0b14b03af6f8"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="0e4afc05-ed62-47f1-855b-b401436dc854"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="c9213844-3c00-496b-9bdf-b09ba8127a77"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="a897cd70-aa0b-4a6b-9416-5d5b644e3626"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="0886092c-9226-4846-8b67-bac464aa9206"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="b8d0686f-6265-4572-a362-f36009d75bc4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="d86326ef-cd03-4178-b491-328aed1109e4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation State Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="c13ffc2b-44b5-49ef-adc1-711394388539"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="25725272-ad62-4569-815f-d1add7c220f5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Open_Operation_Implementation" id="c4a17a2b-206d-43ba-93b2-8d80da607ddb"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.open" methodName="Post_Operation_Implementation_Open" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Open_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.edit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="bce92fde-607a-43c6-8957-0ec404f13e9a" name="Contains Open State"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="fb9f9bad-3347-49af-aa58-8e9661736962"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c8465a62-57ef-44f3-a4c7-adad7de9848f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f41a8316-4edb-48fd-9afd-445374a4f0d0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e72f208b-6e5a-4ff3-8f2c-f81fe85d21d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="1951e2f6-12fd-4715-91cd-ccbd80e07155" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Operation_Implementation_Without_Operation_Implementation_Deployment_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="80f0cb6c-6351-4787-a50b-4d95bf9be5aa"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="b010c2f2-f7b2-4c80-a3ac-4637dadc22fd"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="85c46b4e-cd06-4759-a6fb-d2d709ba97e9"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="1eb9d665-5121-4659-b600-5536bf3f1d4f"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="18392518-e4c2-4b3f-ace6-9e5e3af5a52d"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="7a393a5f-ac10-4d2e-b123-7ff5e200ba12"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="9e7e8405-75f1-4017-83d5-4972ea1148a2"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="e61b35d1-840c-43f3-bcdc-3174b951c7e4"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="c1e75c98-65c7-422c-ac7d-8f0e849e5331"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="348b3f8c-ac34-4d01-9cd4-51f5e261510b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="8c280e9e-870e-48ea-ac54-5509fb04dc52"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="f1766c36-a969-4594-b0a2-af78c9ce2c25"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="f2c2a717-7f04-4558-9ecf-9f1adf18289c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="e50ceed3-818d-40bb-bd07-6ee1cdf8bb58"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="b3b6602a-3d15-4c82-a55e-1bf2d611334f"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="debca991-27ca-400e-bbd2-d48103150453" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove_Operation_Implementation_In_Inactive_State_For_200" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="a86b2eb7-e3db-4cce-aa41-aa3140db1421"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="4c1586c4-1d33-4dcf-ace1-855acd82c3a4"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="925bd17f-4fef-49c2-8a41-c9d2503618a9"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c08f6bc9-6762-4b6d-b97d-5d0837b4523d"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Delete_Operation_Implementation_In_Inactive_State").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="11a43948-a653-4a81-9c33-aaa6a23a2e95"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="69b0e8a7-b441-4e13-81e9-a4ee555b68a7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="345c65cc-c4e3-4162-926e-45c25ada5d24"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="0a325adc-cf2d-440a-8217-9cfee3efce35"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="90281154-eacf-4dde-9bd1-3427f69aea73"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="e4801cf8-5f88-41fb-bc55-2917833297d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="febfd28f-2ca9-4ea6-94b7-e347830045a2"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="d497643d-40e3-4257-a23f-1b93bdf287ed"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="a939bf54-7303-4194-8e99-598dff675bc5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete_Operation_Implementation_In_Inactive_State" id="07f80d7a-1fae-438f-945c-b71d12a8de7a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.delete" methodName="Post_Operation_Implementation_Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete_Operation_Implementation_In_Inactive_State" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.remove"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cfb65bac-8efd-40d1-82aa-fa2b8c360fd2" name="Contains Deleted State"><con:configuration><token>Deleted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="0a4d5b6e-dddf-4b64-8564-1efa3e9d46c4"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="fc35b0d8-6efa-4a7a-abbe-b30d189d9ec5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove_Operation_Implementation_In_Active_Status_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="4471a20e-b736-4857-ae7b-4b0017f61b1b"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="8fc5cb87-c8f6-4164-b9d3-5c0957e0dc37"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="3e84294a-76c5-4983-958e-6f7e1493e46c"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="e54e8235-620a-4fce-babe-b2b98b42b3ec"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Delete_Operation_Implementation_In_Active_Status").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="bb4e45aa-795c-43da-b68c-7150e83c9a51"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="9200c7c8-8588-4be5-9814-824946520fa7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="d66ca9ec-246b-45f5-afd3-5ffa051efaee"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="36b4471b-e70d-4e15-8e8b-bf1516b97347"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="6abbbb93-851d-4219-89d3-e023c534a77d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="c1c0a73a-91e5-43c3-b0c3-110d7f8aaf67"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="e531867e-feb4-4c94-aa89-63c427366ab5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="8865b76e-7167-492a-8586-24260d7cba53"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="9171aab4-9e06-445d-a79e-93758a7ef3a6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="785e475e-a3e5-422d-956f-163745000758"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="79238726-be37-427d-8c0e-e10cfe0c7386"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="bc65b2c2-bc36-4d29-972b-2d0053bf8369"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="72660ea7-fa2c-4782-bc2c-c1f7a765ebd3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="d9b24d09-72d1-4980-8b38-fbf026d23f11"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete_Operation_Implementation_In_Active_Status" id="a1bc6d01-24e7-48dc-aae2-d9b2649607ad"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.delete" methodName="Post_Operation_Implementation_Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete_Operation_Implementation_In_Active_Status" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.remove"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8a3a57d2-564a-4856-8e84-7cb8197e17d3"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="180f6fa5-4276-4627-be3d-4a84262f7821" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Operation_Implementation_Deployment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="4cd698f8-680b-4646-b8e7-e68bc63f27ae"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Deployment_Add").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Add" id="12686084-fca1-4e30-9af6-685ee2bd5cbe"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Add" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="dbc4dd25-08ca-47e7-8b6e-5ff6ec0174a0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Implementation_Deployment_Add"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8c53941d-c113-4bef-8ca9-af9d95340890"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="af68abe8-497e-4fbd-be69-8ee7485f7701" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Operation_Implementation_Deployment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="965acce5-9be4-47df-bd5b-56d8affa40bf"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Get" id="c3b44dc4-19c5-4cc7-bb2e-85b956f79c88"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>${#TestSuite#Operation_Implementation_Deployment_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="80fd53c9-0f64-48bc-b2a9-100abd18dc30"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="55f845b9-72e8-4f3c-b5a7-b21ef48fc687" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_All_Operation_Implementation_Deployments" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="801ca10f-3254-41e9-82ce-185a0f56fe24"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_All_Operation_Implementation_Deployments").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_All_Operation_Implementation_Deployments" id="1ea04d1c-d96d-4f9d-ab19-88e51faaf729"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments" methodName="Get_Operation_Implementation_Deployments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_All_Operation_Implementation_Deployments" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="0c3502ff-e5ff-42ec-b009-0ff2251f3384"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a5fe4ea5-780c-48e4-9985-de5461a541be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify_Operation_Implementation_Deployment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="855d0c0c-5546-4f60-ad95-ba8f8ebb32a4"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Modify_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Modify_Operation_Implementation_Deployment" id="c03d71af-16c7-4071-b891-f086e9609528"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.modify" methodName="Post_Operation_Implementation_Deployment_Modify" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Modify_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        },
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationDeploymentEndPoint": "/hr/v2/worker",
            "operationImplementationDeploymentHost": "https://east.amazonaws.com",
            "operationImplementationDeploymentProxy": "eastproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 10000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d213ddf5-5ef1-4be8-b1ac-b8f52b418ac7" name="Contains Modified End Point"><con:configuration><token>/hr/v2/worker</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a993cd66-b66e-4e56-b75c-c3a37f209a67" name="Contains Modified Host"><con:configuration><token>https://east.amazonaws.com</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4e5a3df6-11f5-48cc-899a-9879b9df30d0" name="Contains Modified Proxy"><con:configuration><token>eastproxy</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d9c132c2-181b-465b-b297-7237d702184b" name="Contains Modified Deployment Rate Limit"><con:configuration><token>10000</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="21e88f3c-a0f9-47db-a590-0d9129a98c8f"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c64a38cf-b0fe-4f44-959a-e68e4c07f6f5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Operation_Implementation_Deployment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="1c05094b-d976-4366-bd28-3c8226510290"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="d140c82d-3a43-4ebf-8ec9-4d77a5978f74"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="891c26be-bb75-43c7-96aa-4c1a0fc8c7f6"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7324abf0-d773-47af-b39d-55c1a1b1f097" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Deactivate_Operation_Implementation_Deployment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="268e273e-6625-43ca-97af-405d97b78452"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Dectivate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Dectivate_Operation_Implementation_Deployment" id="31ceb648-7f2f-437b-827c-d4f0719972ab"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.deactivate" methodName="Post_Operation_Implementation_Deployment_Deactivate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Dectivate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status InActive"><con:configuration><token>Inactive</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="785bb0ef-fc52-4d5c-8f82-482a74f45360"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4a80852c-11e8-4073-bae6-8dadb3428ffa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Without_Operation_Implementation_Deployment_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2f7e02bd-1949-419e-bd23-be02a765d6de"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Deployment_Add").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Add" id="22cea4c4-36a3-4087-9b3d-0ff71dde2a61"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Add" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="d215e004-5308-42ef-98be-a10720dddd9f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Implementation_Deployment_Add"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="43d3deb6-d786-466b-9f89-2da2fa2ce1ea"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="396090b2-a87e-4acd-9c1b-39e26dcaf234" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify_Without_Operation_Implementation_Deployment_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a1fb7c3e-b437-4a23-8b93-910bdac86d56"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Modify_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Modify_Operation_Implementation_Deployment" id="3d425f42-288f-478a-89c2-72a479e5040b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.modify" methodName="Post_Operation_Implementation_Deployment_Modify" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Modify_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": ""
        },
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationDeploymentEndPoint": "/hr/v2/worker",
            "operationImplementationDeploymentHost": "https://east.amazonaws.com",
            "operationImplementationDeploymentProxy": "eastproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 10000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="829f955d-be02-4026-9a75-6deb684d1be1"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d1bc1224-8481-4594-a19e-b8fc27902dd1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Without_Operation_Implementation_Deployment_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f7a35381-4150-4d5d-abb0-7faa6d8c66c8"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="7826a327-cb72-48d3-bff1-73b241d959ac"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": ""
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="9f8a3b97-47f7-4791-8363-baf918480429"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d62f8497-d851-4ee0-9a8a-f47afbf2985d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Deactivate_Without_Operation_Implementation_Deployment_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="b435b798-c1df-4129-adee-9b498931a05b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Dectivate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Dectivate_Operation_Implementation_Deployment" id="7a24c68f-f4c1-4bc4-9fc9-d47325431af3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.deactivate" methodName="Post_Operation_Implementation_Deployment_Deactivate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Dectivate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": ""
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="bdc04752-1a1b-4de2-aa94-e075983dae22"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="42a3f6a4-15b1-402d-93e5-86d4f0e62401" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="d7380229-dfb7-49d1-b264-5247d2f2b555"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="118ee33b-50f3-410e-857e-7385f8f6c0f2"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="5e0bc21c-6060-4471-9d29-7b50fe53c6d3"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="6a770319-47e4-4b11-9da1-6a399ce3f7c0"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="6edcea62-140a-40a6-8ef2-0b5d87b69df5"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Service_Name", "TestService"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Management_Domain_Id", nr.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="b13bc9ad-0ddc-4b71-9899-17ccc951305d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="18c24dcd-b9d6-4456-bfa9-65fa0a25afd0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="ac2132be-c2f5-4b07-9da9-a90e60c0c04f"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="56e7e8d7-4611-4a62-a2aa-83aeb427e0dd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="d32e12cc-b02d-444e-b95a-d895fec3f364"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="2bd9ad52-3fed-4eb9-893b-e00008b358b1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="ccc9e91c-8661-4c9f-b635-ae7204b0e116"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="0c9e76c9-71d9-4a82-a019-89a4232575ea"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="bdae58de-0a17-4775-8ac6-ab28af34da0a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="b16953a5-e130-4a86-ab0b-46bfe8dfb5c6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="1497c267-5d2b-42de-bb67-0a97031eebe2"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="0aebfa09-8e7d-4075-a43b-f55a0f16954b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="643ab260-e1b4-4fa3-9169-a48c0ead359e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Register_Service" id="521006a0-b464-4868-a41a-86829b8e8f59"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.register" methodName="Register_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="RegisterServiceTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "transform": {
          "service": {
            "serviceName": "${#TestSuite#Service_Name}",
            "serviceDescription": "${#TestSuite#Service_Name}",
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationIDs": ["${#TestSuite#Operation_Implementation_Id}"],
            "managementDomainID": "${#TestSuite#Management_Domain_Id}",
            "subscriptionRequiredIndicator": true
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="45d018e1-db2a-4b4e-8bc1-05aabbc9db58" name="Contains"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Id" id="b09d40ce-e6a8-401b-bc4a-515477cc4319"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Service"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.service.serviceID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d86a0922-3d39-4d76-9afe-19ffd862d9a9"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="116e9f18-e87e-45d4-a7eb-5a6b7356cc91" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Services" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="23468e55-a4d8-40c9-8c8e-2ca69a72952e"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Services").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Services" id="c1a63820-7f83-446d-ae0e-bc9088f52c0a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/services" methodName="Get_Services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Services" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="146a4036-930f-4754-8b8f-4186e5fe0db1" name="Contains"><con:configuration><token>${#TestSuite#Service_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9ec98a1e-a4ee-4eed-92e8-f31a1164688d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="58f45b0f-3a23-4861-8739-cacb49bf9d84"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service" id="63724d4c-dd8d-4ff3-ae73-6592fdd4a091"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/services/{serviceID}" methodName="Get_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="049f68ae-4cb6-4232-bec3-068641e6c887" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Submit_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="5989bc82-d649-4a55-9744-a09b8af0b192"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Submit_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Service" id="170f1624-91a9-49f1-92c9-706744be8209"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.submit" methodName="Submit_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "requesterNote": {
              "textValue": "Requester Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e6093940-b488-4643-87f8-141a8ad93872" name="Contains State Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1f81b158-0a43-4910-9601-8a6087065b79" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Review_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="1251e5e6-8d21-4863-af4c-5d8610db27b3"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Review_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Review_Service" id="3fdd94f8-4ea7-43c8-8932-d56f250fbdb7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.review" methodName="Review_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="53eb487b-919c-4a5d-8067-790d847383e0" name="Contains In Review State"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="041fb579-0805-4c06-8185-56bc86e84b43" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Approve_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="3f765d52-7b4e-4551-a97f-64381cd0b91e"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Approve_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Service" id="9dc4edb4-3e87-4565-bb60-03651c420aae"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.approve" methodName="Approve_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "reviewerNote": {
              "textValue": "Review Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="55a9630f-1f5f-4fc1-90b8-cba16426666c" name="Contains Approved State"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="96a546da-371b-420a-ac01-7d6418458d25" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="fb486d6f-5bda-41b2-a771-3f46c48b7143"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Activate_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Service" id="fd3df34c-1661-4ff0-9eea-cdaacbb913c4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.activate" methodName="Activate_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ea4aed5f-772c-44b5-be52-1233c3afcde3" name="Contains Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="182da966-3e8b-45f7-a176-7dd08a991d8d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Suspend_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="e86bd1e5-92d2-40c5-8919-8499a97b661c"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Suspend_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Suspend_Service" id="522ac115-bab1-455d-81bf-d761c22d76ff"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.suspend" methodName="Suspend_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Suspend_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="abe09554-c86f-4042-a2df-b08b69c90d3d" name="Contains Status Suspended"><con:configuration><token>Suspended</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6a4c2052-e720-4301-abbe-2638a12567fc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Retire_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c779b28a-3474-47fe-a9f6-c0c77f3402c8"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Retire_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Retire_Service" id="ba7812fa-3e2f-42a9-a98f-e777bb942489"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.retire" methodName="Retire_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Retire_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="38a1ecbe-2322-4d3a-a0e9-db5d88d636a2" name="Contains StatUS Retired"><con:configuration><token>Retired</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="34a340af-a245-437d-90bc-4dbbbea9ba4d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Approve_And_Delete_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Service" id="ed942dd3-2056-4078-88fb-ccc68e6b825e"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.services


			log.info "Total No Of Services : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Services Found In Services Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceID " + doc.get("content").get("serviceID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="0f0234fc-3db9-4827-b864-76f4c24766c3"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="7bd89c92-6e19-4a19-9824-29db7c2880ff"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="40a1317b-d875-44f2-ac2b-12a8d9bb7e02"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="90d30a32-f4a7-4cce-98ff-0b50c917c96e"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Delete_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="10d7a525-619c-4a45-ac60-6348497bc941"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Service_Name", "TestService"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Management_Domain_Id", nr.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="d932ff8a-4a6e-4bc2-9d68-2ed33e74168a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="dc879eb2-63f5-4be8-9558-908b5f047d9f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="fc47ca79-1ea0-46ec-9ffe-43bb41d2f665"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="78f13cc6-fdf1-47cf-9b05-bf007d219d8d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="364892a1-1c72-4766-add3-35f63cd2129b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="b1e7de55-2bcb-4dcf-9a27-ce46844a56f5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="6db97e2a-8b1d-4d06-8ee0-ff12a48b138b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="d6443497-9a2e-4593-bd90-72db978203ef"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="6a688983-c234-40de-b900-b7e46aebb92b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="b6ea581a-32b8-4c2d-acc8-8bcb55386aeb"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="63b3b942-3ee7-4c6a-bf9c-bfe6b612bb43"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="a2f4d606-c6e3-47bc-a699-45548838fdc3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="f9638f78-993e-43b5-8db0-6f55dc0657dc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Register_Service" id="b820420f-712f-447e-b305-a8719566bfbc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.register" methodName="Register_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "transform": {
          "service": {
            "serviceName": "${#TestSuite#Service_Name}",
            "serviceDescription": "${#TestSuite#Service_Name}",
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationIDs": ["${#TestSuite#Operation_Implementation_Id}"],
            "managementDomainID": "${#TestSuite#Management_Domain_Id}",
            "subscriptionRequiredIndicator": true
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="45d018e1-db2a-4b4e-8bc1-05aabbc9db58" name="Contains"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Id" id="56f093fc-c61b-4d0d-a087-2ff3165349d1"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Service"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.service.serviceID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="253fdd4b-533f-42a4-81ad-f56b80ca12b9"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service" id="66d394fb-8417-4723-96d6-e8318ba09470"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/services/{serviceID}" methodName="Get_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Service" id="664628df-231c-42b6-b8bf-f3f8b8dd011c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.submit" methodName="Submit_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "requesterNote": {
              "textValue": "Requester Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e6093940-b488-4643-87f8-141a8ad93872" name="Contains State Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Service" id="12630741-5321-4c6a-8ae4-4a613db80db8"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.review" methodName="Review_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="53eb487b-919c-4a5d-8067-790d847383e0" name="Contains In Review State"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Service" id="6434d887-610d-4271-ab66-cc65a0b020f1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.approve" methodName="Approve_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "reviewerNote": {
              "textValue": "Review Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="55a9630f-1f5f-4fc1-90b8-cba16426666c" name="Contains Approved State"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Delete_Service" id="b14e9b27-3ff9-4f76-aab4-af3661b0c80e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.delete" methodName="Delete_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="69dfd54d-6bb6-490d-bf89-fe654c015f56" name="Contains Status Deleted"><con:configuration><token>Deleted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="1e7f94df-763e-4c8c-8e3c-141ddaafb5c7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Edit_Modify_And_Reject_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Service" id="4a72852e-41da-4dbb-8973-0dad24e82a50"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.services


			log.info "Total No Of Services : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Services Found In Services Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceID " + doc.get("content").get("serviceID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="9afd77d3-6989-4ad7-be4c-07bb1a2b1a7b"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="4fd9a3c8-4435-4c29-bc3b-f0e8ff532020"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="48dd69e7-451c-49e0-9917-d43145402e1c"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="28850ac5-81c3-4444-8887-0600679ba10e"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Suspend_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Open_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Modify_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Service1").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Service1").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Reject_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="785307f8-9d91-4d31-abea-a25524d38660"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Service_Name", "TestService"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Management_Domain_Id", nr.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="4085d5b6-1c76-4471-8ce7-92a1294c8dd9"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="d7d93295-955d-4820-90d5-d58a8ae921f8"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="be0ecbda-4c53-43f2-8edf-bdcc394718a9"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="97c7f886-2ec7-40a7-9533-b8dd13ee861e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="5e70ab4a-a4c6-46cc-975c-f8441cdc0af7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="765d655d-a35e-47ce-8525-78ee2218a5aa"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="f261c6ba-80a6-49d3-a932-21e2ab0a46cd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="efa7cc2d-11d9-40d4-9738-98aa8b633bc7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="31083f37-f0f4-4e7f-843b-a633c6e197de"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="dac54c97-e736-4cdd-b3d5-c5fd6b3abb83"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="ae352598-e941-45dc-a8d4-fd44bb9f7883"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="3ee42164-0908-4e5c-bd4d-edb246aadf54"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="9e0ade05-b348-4dcb-b5ef-a3c5a763af8a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Register_Service" id="74811c24-aa2a-4fbf-99f9-98d80a149a54"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.register" methodName="Register_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "transform": {
          "service": {
            "serviceName": "${#TestSuite#Service_Name}",
            "serviceDescription": "${#TestSuite#Service_Name}",
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationIDs": ["${#TestSuite#Operation_Implementation_Id}"],
            "managementDomainID": "${#TestSuite#Management_Domain_Id}",
            "subscriptionRequiredIndicator": true
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="45d018e1-db2a-4b4e-8bc1-05aabbc9db58" name="Contains"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Id" id="6b9eb29d-38d6-4367-baad-52ff48681fcd"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Service"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.service.serviceID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1c8f36de-f743-4d5a-95d6-d6ab1a73b1d1"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service" id="18e8c431-5d9f-40ad-8b96-781df1d6045a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/services/{serviceID}" methodName="Get_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Service" id="ab49de96-ce4e-4415-af70-aa7548d2f5a3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.submit" methodName="Submit_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "requesterNote": {
              "textValue": "Requester Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e6093940-b488-4643-87f8-141a8ad93872" name="Contains State Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Service" id="4b5be148-2425-4ea4-a0ec-e82639feca5e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.review" methodName="Review_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="53eb487b-919c-4a5d-8067-790d847383e0" name="Contains In Review State"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Service" id="de50509e-7a75-4c3a-a9fd-40dda10a5e59"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.approve" methodName="Approve_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "reviewerNote": {
              "textValue": "Review Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="55a9630f-1f5f-4fc1-90b8-cba16426666c" name="Contains Approved State"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Service" id="85e2e659-1d33-4cee-b20f-838a63550150"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.activate" methodName="Activate_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ea4aed5f-772c-44b5-be52-1233c3afcde3" name="Contains Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay1" id="a8589851-331a-45fb-a4b5-e1507ddcb30b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:testStep type="restrequest" name="Suspend_Service" id="7bcae7a4-1d68-493e-a871-90ce0b43b8bf"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.suspend" methodName="Suspend_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Suspend_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="abe09554-c86f-4042-a2df-b08b69c90d3d" name="Contains Status Suspended"><con:configuration><token>Suspended</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Open_Service" id="93158b33-bda0-4490-a7ce-0beafe9bf6eb"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.open" methodName="Open_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Open_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="538bd7f1-4fa6-416a-a897-52f9bb7c7d39" name="Contains Status Open"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Modify_Service" id="1633dcd3-5a9d-493f-bcd2-40afa7d73017"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.modify" methodName="Modify_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Modify_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "serviceName": "Modified Service Name",
            "serviceDescription": "Modified Service Description",
            "managementDomainID": "${#TestSuite#Management_Domain_Id}",
            "subscriptionRequiredIndicator": false
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Service1" id="608e7618-9297-4627-b462-47c76ad9b6a1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.submit" methodName="Submit_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Service1" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "requesterNote": {
              "textValue": "Requester Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e6093940-b488-4643-87f8-141a8ad93872" name="Contains State Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Service1" id="73365d2b-6bab-420f-8c34-69cf6c529f53"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.review" methodName="Review_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Service1" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="53eb487b-919c-4a5d-8067-790d847383e0" name="Contains In Review State"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Reject_Service" id="7bd850d3-f848-41ed-96ba-073c94a2bc6d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.reject" methodName="Reject_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reject_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "reviewerNote": {
              "textValue": "Review Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4de068db-d495-4855-aeaf-64972ec243c5" name="Contains Status Rejected"><con:configuration><token>Rejected</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay2" id="72b1d0c2-bccb-4059-b23e-e8d6fc9a0014"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f4ea5e2d-7d49-4c12-bfd7-bc48ad19f3e4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_And Subscribe_To_Service" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Service_Subscriptions" id="a6ba3e46-5cb9-43de-916d-fe8f6727bb2a"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceSubscriptions


			log.info "Total No Of Service Subscriptions : "+ dbCollection.find().count()

			serviceId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Id"));
			log.info "serviceId: " + serviceId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceID").equals(serviceId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Subscriptions Found In ServiceSubscriptions Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceSubscriptionID " + doc.get("content").get("serviceSubscriptionID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service" id="505efd51-f39a-4bd9-a991-59948c7c9c35"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.services


			log.info "Total No Of Services : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Services Found In Services Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceID " + doc.get("content").get("serviceID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="3d3da965-faca-4242-a588-cf06d90b6fb4"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="274cb9ea-28d7-4c8b-acfa-f406713a63ce"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="97f01dd1-8d18-4257-b30b-c39387726dd0"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="0b965681-fd5b-4967-8413-93b082c7db93"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Subscribe_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="0c587f95-0d9c-4d6d-8c0a-504d55615447"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Service_Name", "TestService"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Management_Domain_Id", nr.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="b2564be2-f1a7-42e3-adb8-fd2813afb5ae"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="62418ebd-68b9-43ba-9edf-65de1eb9885b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="6db6ae4f-a2ab-4d6d-b47f-398e81413d55"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="b371ddc0-79de-4485-ade6-2c15b4251dcc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "post"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="4dd702f3-db02-4914-bcb8-ea0299e8fa4d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="8d0a0bd6-1065-4521-8412-c0bf67864c20"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="e7da2798-1397-4ba8-904e-437ebcc7953d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="85f275a9-ac9a-4807-909e-8dd514ae9fe7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="117d0ae2-e4ad-432b-9105-5902cb8308f8"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/v2/workers",
            "operationImplementationDeploymentHost": "https://testhost.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="5e22ce1f-a0e1-4f16-9acc-cf25396a9202"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="decced97-4ff4-424b-96f4-f4b803970a6d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="676bf4f4-3b22-4645-8455-dfa587834f5a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="630a7b41-911e-4bd4-9c58-3971b39f8d1e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Register_Service" id="21e836da-0536-42f5-ba2a-cf5250bed9cb"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.register" methodName="Register_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "transform": {
          "service": {
            "serviceName": "${#TestSuite#Service_Name}",
            "serviceDescription": "${#TestSuite#Service_Name}",
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationIDs": ["${#TestSuite#Operation_Implementation_Id}"],
            "managementDomainID": "${#TestSuite#Management_Domain_Id}",
            "subscriptionRequiredIndicator": true
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="45d018e1-db2a-4b4e-8bc1-05aabbc9db58" name="Contains"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Id" id="b6a5caa3-2bef-487e-a767-ef8ade38c85d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Service"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.service.serviceID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="18a91c02-192a-4677-82ce-d1757ba41a84"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service" id="d42bd4cc-77e2-4a56-9175-dcb3be9b8a7e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/services/{serviceID}" methodName="Get_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Service" id="365d65bd-3f3f-4c23-b7e6-1b677ed8418f"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.submit" methodName="Submit_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "requesterNote": {
              "textValue": "Requester Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e6093940-b488-4643-87f8-141a8ad93872" name="Contains State Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Service" id="9b41f438-67b2-4627-8fe6-67a3eeac0243"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.review" methodName="Review_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="53eb487b-919c-4a5d-8067-790d847383e0" name="Contains In Review State"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Service" id="5382115c-9599-452a-ae3e-cf6ad44efd3d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.approve" methodName="Approve_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "reviewerNote": {
              "textValue": "Review Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="55a9630f-1f5f-4fc1-90b8-cba16426666c" name="Contains Approved State"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Service" id="71b60b79-5912-4587-a8c4-5d5104bb9720"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.activate" methodName="Activate_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ea4aed5f-772c-44b5-be52-1233c3afcde3" name="Contains Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Subscribe_Service" id="9eb53103-c907-42f1-9b9d-6607580d6bee"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.subscribe" methodName="Post_Service_Subscribe" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscribe_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service.subscribe"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceSubscription": {
            "serviceID": "${#TestSuite#Service_Id}",
            "subscriberOrganizationOID": "FFFFFFFFFFFFFFFF",
            "subscriberAssociateOID": "FFFFFFFFFFFFFFFA",
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            },
            "authenticationCredentials": {}
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ea4aed5f-772c-44b5-be52-1233c3afcde3" name="Contains Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Subscription_Id" id="d05e6263-970a-4b35-900a-73b075cc17de"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Subscribe_Service"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceSubscription.serviceSubscriptionID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceSubscriptionID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Subscription_Id",temp.toString());
</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="ef716a56-0fc6-43bc-93c3-933ac11783b0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Subscription_By_Subscription_Id" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="cd6aeb7e-27e1-4d42-aff3-96c92d4c0131"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Subscription_By_Id").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Subscription_By_Id" id="109e1e31-cf57-4ee8-945c-a43bcebbe947"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-subscriptions/{serviceSubscriptionId}" methodName="Get_Service_Subscription_By_Id" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Subscription_By_Id" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceSubscriptionByIdTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cc3599fa-7989-4bf0-a45a-f6bdafbd1928" name="Contains operationImplementationSubscriptionID"><con:configuration><token>${#TestSuite#Service_Subscription_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="operation-Implementation-subscription-id" value=" ${#TestSuite#Operation_Implementation_Subscription_Id}"/>
  <con:entry key="serviceSubscriptionId" value="${#TestSuite#Service_Subscription_Id}"/>
  <con:entry key="operationInstanceSubscriptionID" value="${#TestSuite#Operation_Implementation_Subscription_Id}"/>
</con:parameters><con:parameterOrder><con:entry>operation-Implementation-subscription-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="797cc91c-a7d8-45a3-a714-e723d851cdc2"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="899d3079-9342-4292-868d-f9df4e2ffa2c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Subscriptions" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="523d2aaa-da52-4e9e-a242-ec5f73e92dc4"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Subscriptions").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Subscriptions" id="b0b81605-5932-4a73-a8de-1c896525ffe8"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-subscriptions" methodName="Get_Service_Subscriptions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Subscriptions" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceSubscriptionsTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cc3599fa-7989-4bf0-a45a-f6bdafbd1928" name="Contains operationImplementationSubscriptionID"><con:configuration><token>${#TestSuite#Service_Subscription_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="$filter" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>$filter</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="00c5b1ae-374f-439c-9dfd-c9266485af9e"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f0f7a0c4-27c6-4775-add8-9e2126c18d1c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify_Service_Subscription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a119f72b-5579-433a-b9cc-3428d02cf8fb"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Modify_Service_Subscription").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Modify_Service_Subscription" id="c7737d2e-97ad-489a-a550-c73a633b297a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.modify" methodName="Post_Service_Subscription_Modify" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Modify_Service_Subscription" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.modify"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": "${#TestSuite#Service_Subscription_Id}"
          }
        },
        "transform": {
          "serviceSubscription": {
            "authenticationCredentials": {
              "userID": "fjsadlfkjads",
              "password": "fsadfdsf"
            },
            "mutualSSLCertificate": {
              "publicCertificate": "fkdsafjsd",
              "privateKey": "fasdfadsf"
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a7c87d1a-1e6a-4ffa-8227-820e1395f874" name="Contains Modified userid"><con:configuration><token>fjsadlfkjads</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9364940c-5673-4545-bf1c-4867c2cdbd1d" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="5067642e-b94d-4c34-985f-2adb277b0e1c"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e89336eb-436d-462b-ad3b-dddb81bcd539" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Suspend_Service_Subscription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="990ff633-be6c-4ec6-b8a1-8bc3f6362db8"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Suspend_Service_Subscription").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Suspend_Service_Subscription" id="a5e495d4-c244-4d05-82cc-73cd68e9ffb6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.suspend" methodName="Post_Service_Subscription_Suspend" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Suspend_Service_Subscription" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.suspend"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": "${#TestSuite#Service_Subscription_Id}"
          }
        },
        "transform": {}
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f6d49dec-6424-4170-be14-8d216b8d6734" name="Contains Subscription Status Suspended"><con:configuration><token>Suspended</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f839445f-2695-4f98-9489-04bb43c2c1ed" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="adf8ba61-3914-494b-ba3b-44e37b6fbe93"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ae298247-6841-4d33-a38d-8f11df9ab513" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Service_Subscription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f75001bf-814d-4f5e-892d-8820a65e19d2"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Activate_Service_Subscription").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Service_Subscription" id="cf68d27a-343f-4929-b1d6-1e527c6288f2"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.activate" methodName="Post_Service_Subscription_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Service_Subscription" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": "${#TestSuite#Service_Subscription_Id}"
          }
        },
        "transform": {}
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8e2ad31a-d807-4c24-9d28-b373b7c20862" name="Contains Subscription Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="67b64165-eccb-4dbe-a46d-460255914b75" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e40c3aa6-b83d-431b-971e-f9910e6f6949"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="066032c2-f3e7-4c84-9939-9afed1d0a164" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Cancel_Service_Subscription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="e967f3ef-9ada-4f54-9f05-caf5d14d94a0"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Cancel_Service_Subscription").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Cancel_Service_Subscription" id="7aa97fc7-4581-4856-bb95-d4e948c2b67f"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.cancel" methodName="Post_Service_Subscription_Cancel" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Cancel_Service_Subscription" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.cancel"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": "${#TestSuite#Service_Subscription_Id}"
          }
        },
        "transform": {}
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Subscription Status Cancelled"><con:configuration><token>Cancelled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ab201b0e-ea15-483f-aad3-765dd0caccf1" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1c50dc6c-8eac-4fa2-9a34-d6ae1929d24a"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="32c39020-5bf9-4e4e-b58d-f172d116a4f3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Subscribe_Subscription_Without_Service_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f90b5bc3-8345-406b-8aac-8fe1f22de42a"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Subscribe_Subscription").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Subscribe_Subscription" id="460be5a2-8005-4ad0-9803-c361d6de039b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.subscribe" methodName="Post_Service_Subscribe" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscribe_Subscription" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service.subscribe"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceSubscription": {
            "subscriberOOID": "FFFFFFFFFFFFFFFF",
            "subscriberAOID": "FFFFFFFFFFFFFFFA",
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            },
            "authenticationCredentials": {}
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1852e947-522f-480b-9d93-f08183b98203" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e7180612-7f6c-4647-9aae-0572ef6cd655"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="8c3fbfab-32d8-4c24-b5f4-2b3158919b03" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Modify_Subscription_Without_Subscription_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="16a9dcbd-6dd6-4aff-93b2-1650faa0bf84"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Subscription_Modify").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Subscription_Modify" id="fe6ebbd1-74b8-4045-8806-6a2ac56eb8ba"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.modify" methodName="Post_Service_Subscription_Modify" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscription_Modify" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.modify"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": ""
          }
        },
        "transform": {
          "serviceSubscription": {
            "authenticationCredentials": {
              "userID": "fjsadlfkjads",
              "password": "fsadfdsf"
            },
            "mutualSSLCertificate": {
              "publicCertificate": "fkdsafjsd",
              "privateKey": "fasdfadsf"
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d6a8cdf7-82f8-470e-8c02-f77d98aeae3b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1c1bd889-89bd-4de2-ab5e-1c48bd1120a7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Suspend_Subscription_Without_Subscription_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="ca5f3fe9-e81a-4d44-8bab-86c4e575314a"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Subscription_Suspend").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Subscription_Suspend" id="6e0d1787-91e9-429a-a587-ca4f40262133"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.suspend" methodName="Post_Service_Subscription_Suspend" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscription_Suspend" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.suspend"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": ""
          }
        },
        "transform": {}
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a085ae6d-da9c-435c-931d-cabae1140e67"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ae7da862-8ca0-4d9d-b235-0672d8ac5750" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Subscription_Without_Subscription_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a43019c0-23b6-43c0-b56d-625b298bdf37"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Subscription_Activate").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Subscription_Activate" id="5d496424-8b32-41fc-a68f-14bb32fbdba1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.activate" methodName="Post_Service_Subscription_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscription_Activate" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": ""
          }
        },
        "transform": {}
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="c8e6786c-0a15-4383-a526-3e357d7a6e80"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="0947aefb-e256-47ee-bc74-f6d99aa45388" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Cancel_Subscription_Without_Subscription_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f530dcb9-61b7-4e4d-a0ea-ea693a40da04"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Subscription_Cancel").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Subscription_Cancel" id="cf13b908-e517-4575-92ba-6739b91e453f"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.cancel" methodName="Post_Service_Subscription_Cancel" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscription_Cancel" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.cancel"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": ""
          }
        },
        "transform": {}
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="760a8e11-1a24-4600-905b-9c091166b4d7"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="14050594-f04a-413b-8b92-a0bddb38f7dc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Service_Subscription_Authentication_Credentials_Change" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="ec6c4868-7252-479d-be6d-10e58cb6247c"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Service_Subscription_Authentication_Credentials_Change").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Service_Subscription_Authentication_Credentials_Change" id="c7f8bb28-de78-4c95-b84c-73d59a9cc268"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.authentication-credentials.change" methodName="Post_Service_Subscription_Auth_Cred_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Service_Subscription_Authentication_Credentials_Change" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.authentication-credentials.change"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": "${#TestSuite#Service_Subscription_Id}"
          }
        },
        "transform": {
          "serviceSubscription": {
            "authenticationCredentials": {
              "userID": "admin",
              "password": "admin"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Userid"><con:configuration><token>admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Password"><con:configuration><token>admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ab201b0e-ea15-483f-aad3-765dd0caccf1" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="5b4d91e4-061c-4d86-83f1-920f21d89e25"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ffb56e1b-23ef-407d-99e7-ecf0bc709f05" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Subscription_Authentication_Credentials_Change_Without_Subscription_Id_For_400" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="b9042a7c-17a9-4e14-b162-2a0af4fe5142"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Subscription_Authentication_Credentials_Change_Without_Subscription_Id_For_400").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Subscription_Authentication_Credentials_Change_Without_Subscription_Id_For_400" id="7fbb9bbc-a6a0-4d1c-84ee-30147d18f392"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.authentication-credentials.change" methodName="Post_Service_Subscription_Auth_Cred_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscription_Authentication_Credentials_Change_Without_Subscription_Id_For_400" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.authentication-credentials.change"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": ""
          }
        },
        "transform": {
          "serviceSubscription": {
            "authenticationCredentials": {
              "userID": "admin",
              "password": "admin"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="fcb43892-0282-4ebc-9650-8a53959697ca"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b33f7453-9107-4fb9-8245-24d2162c0ac2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Service_Subscription_Authentication_Credentials_Remove" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="6940747b-627c-4636-9504-aa82d8997b0b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Service_Subscription_Authentication_Credentials_Remove").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Service_Subscription_Authentication_Credentials_Remove" id="846b1b16-93ae-44a1-92ff-0d0050287db8"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.authentication-credentials.remove" methodName="Post_Service_Subscription_Auth_Cred_Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Service_Subscription_Authentication_Credentials_Remove" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 4224fb13-428c-4ef4-b204-8c7df7e9ff7b"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="SubscriptionCredentialsRemoveTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.authentication-credentials.remove"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": "${#TestSuite#Service_Subscription_Id}"
          }
        },
        "transform": {
          "serviceSubscription": {
            "authenticationCredentials": {
              "userID": "admin",
              "password": "admin"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Userid"><con:configuration><token>admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Password"><con:configuration><token>admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ab201b0e-ea15-483f-aad3-765dd0caccf1" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e0ad8739-4d00-4c5d-b339-96adb9d54731"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f80e076b-65e6-45c0-b20b-73fef9957b80" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Subscription_Authentication_Credentials_Remove_Without_Subscription_Id_For_400" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a226f2ea-7559-491f-96cb-b66b1f897d94"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Subscription_Authentication_Credentials_Remove_Without_Subscription_Id_For_400").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Subscription_Authentication_Credentials_Remove_Without_Subscription_Id_For_400" id="cbb69a03-8ee2-4ef7-bfad-fab17fc3391e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-subscription.authentication-credentials.remove" methodName="Post_Service_Subscription_Auth_Cred_Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscription_Authentication_Credentials_Remove_Without_Subscription_Id_For_400" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 4224fb13-428c-4ef4-b204-8c7df7e9ff7b"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-subscription.authentication-credentials.remove"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "serviceSubscription": {
            "serviceSubscriptionID": ""
          }
        },
        "transform": {
          "serviceSubscription": {
            "authenticationCredentials": {
              "userID": "admin",
              "password": "admin"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d2ed2a8e-ef6b-4b56-a966-94424521a7c0"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="08d14001-4b1b-452b-af9d-3762360b9a61" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="4e49190b-0d9e-42cf-be0e-1b7556b248b6"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change" id="46c43bcf-186c-4771-855c-94cd417367ef"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription-mutual-ssl-certificates.change" methodName="Post_Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer ded493ce-6a94-41f0-a144-f0e76a577017"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription-mutual-ssl-certificates.change"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationSubscription": {
            "operationImplementationSubscriptionID": "${#TestSuite#Operation_Implementation_Subscription_Id}"
          }
        },
        "transform": {
          "operationImplementationSubscription": {
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Public Certificate"><con:configuration><token>BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Private Key"><con:configuration><token>alkjser===kjeaker===</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ab201b0e-ea15-483f-aad3-765dd0caccf1" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d6bf7fca-07ad-4401-a183-822053aea2aa"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="37fa53c0-cfe6-4932-84f0-ffe6b91960db" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="d8728fe1-144e-402e-a64f-7eb8e44f78fa"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete" id="14d7a6e2-8261-4149-8e50-6262cbc1cdfe"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription-mutual-ssl-certificates.delete" methodName="Post_Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer ded493ce-6a94-41f0-a144-f0e76a577017"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription-mutual-ssl-certificates.delete"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationSubscription": {
            "operationImplementationSubscriptionID": "${#TestSuite#Operation_Implementation_Subscription_Id}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Operation Implementation Subscription Status"><con:configuration><token>Cancelled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e9d7bbfc-104f-40dd-8115-dd521a6ae1af" name="Contains Public Certificate"><con:configuration><token>BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="29300380-a3d7-49a1-921e-40c0fcadd8f1" name="Contains Private Key"><con:configuration><token>alkjser===kjeaker===</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ab201b0e-ea15-483f-aad3-765dd0caccf1" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="dafa45c6-b9b0-4199-8cb1-1d9025ed317c" name="Contains Propertu Path"><con:configuration><token>mutualSSLCertificate</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="d94b315d-a920-451f-84b5-c0a441cc191c"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a8549e59-4b9e-4213-bacf-58654ec4a04c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Subscription_Mutual_Ssl_Certificates_Change_Without_Subscription_Id_For_400" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="4308e6d1-4404-4051-a17e-b66882d193d6"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change" id="186b29b7-5d03-438b-864c-b45dc7b45c98"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription-mutual-ssl-certificates.change" methodName="Post_Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Change" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 169d4781-07e9-4301-b5d8-d4f93c3ab40e"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription-mutual-ssl-certificates.change"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationSubscription": {
            "operationImplementationSubscriptionID": ""
          }
        },
        "transform": {
          "operationImplementationSubscription": {
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="b475621e-141a-48c3-b5b6-ab7b3e2ada0c"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4948e4a0-d2f9-4022-b68e-db6295a925de" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Subscription_Mutual_Ssl_Certificates_Delete_Without_Subscription_Id_For_400" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="88763364-f070-4310-bf68-0d419a010faf"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete" id="02ec2f55-3983-4002-bcb3-0e48a379afbc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription-mutual-ssl-certificates.delete" methodName="Post_Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Mutual_Ssl_Certificates_Delete" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 169d4781-07e9-4301-b5d8-d4f93c3ab40e"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription-mutual-ssl-certificates.delete"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationSubscription": {
            "operationImplementationSubscriptionID": ""
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="85c15c2a-485e-4d7c-a3b5-828566c423ab"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="69ea97fa-573d-4d15-a323-19c7a2ac97c2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Activate_Operation_Implementation_And_Get_Canonical_Uri_With_X_Url_Path_And_X_Method" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Service_Subscriptions" id="0dc2e8ce-9d08-47ca-a427-1bff16c6b6ae"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceSubscriptions


			log.info "Total No Of Service Subscriptions : "+ dbCollection.find().count()

			serviceId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Id"));
			log.info "serviceId: " + serviceId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceID").equals(serviceId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Subscriptions Found In ServiceSubscriptions Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceSubscriptionID " + doc.get("content").get("serviceSubscriptionID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service" id="1427953a-6223-4a8b-b1dc-5edd228c356d"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.services


			log.info "Total No Of Services : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Services Found In Services Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceID " + doc.get("content").get("serviceID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="abbdb0e4-2ad4-47c0-b2e0-69d48d399aba"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="3c46f7e8-7264-4023-b230-464e9f48cea2"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="515bde4f-d11c-4b94-b243-4e804f82fc9b"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="d0d6a7f8-7b4a-4b90-8343-2c52951bd197"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="4d2cc1dd-fb00-4722-9f75-25bb93b35fa6"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Service_Name", "TestService"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Management_Domain_Id", nr.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="45ded2b1-01d7-4068-a70a-8066bbd8aecd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="9c8590af-ba00-43e6-8787-191b2453222e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="aaa724c2-24f3-48f0-b23e-4bc5d158c579"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="ec91bf5f-f28d-4572-81e0-229701a1ff97"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/${#TestSuite#Api_Id}",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "POST"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="89b4718d-ea9b-49a9-8f0c-8efb3917facb"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="b18935f8-9844-4f2f-b2db-df93c4cdf1a1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="77f1531f-af4d-4c39-b614-09bedb43bc06"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="bf3f0099-5094-4592-ac2e-8e6fdd158b1b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="1c082451-c7a9-4ad5-b7b0-5eb922c1dd2a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/version2/${#TestSuite#Api_Id}",
            "operationImplementationDeploymentHost": "http://localhost",
            "operationImplementationDeploymentProxy": "http://localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="0ed8cc04-8746-4bfd-a026-5a144b6bff31"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="bb8a2154-7e5a-4359-acb9-f905c64a8eb2"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="f4782bd2-67cb-4e07-b16e-ce0cb2c36055"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="8364d01e-7f0f-4942-9dd7-3f22b962824b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4fbcf910-ccd5-4918-84af-215abc7096d3" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="84b4d626-3f78-49bb-b314-b4342f5e248a" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay1" id="84a08297-5d67-4740-965d-45fc222188a9"><con:settings/><con:config><delay>120000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="b2d4dbe7-9567-4dcd-99b1-3379727cd426"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="CanonicalUritest"/>
  <con:entry key="x-method" value="POST"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>/hr/workerInformationManagement/workerManagement/workerProfileManagement/${#TestSuite#Api_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b1dc0b63-f04a-4841-b0dd-29c7f4211355" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Activate_Operation_Implementation_And_Get_Canonical_Uri_With_Invalid_X_Url_Path" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="03dc05e6-fba0-49f3-82bb-12f67abd9bf3" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Invalid_X_Url_Path_For_404" id="e6a1dbd2-048a-4cd8-b5de-697c1aed8610"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Invalid_X_Url_Path_For_404" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="test"/>
  <con:entry key="x-method" value="POST"/>
  <con:entry key="x-url-path" value="/hr/version2/API1234"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>03dc05e6-fba0-49f3-82bb-12f67abd9bf3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="7b952e74-fa43-4027-88c2-142d462fce69" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Activate_Operation_Implementation_And_Get_Canonical_Uri_With_Invalid_X_Method" searchProperties="true" timeout="0" maxResults="0"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="40bd227d-48ca-4539-b50a-24219e4eaacb" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Invalid_X_Method_For_404" id="7a49c207-166e-462f-9ea3-96f9039be87b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Invalid_X_Method_For_404" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="test"/>
  <con:entry key="x-method" value="GET"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}}"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>40bd227d-48ca-4539-b50a-24219e4eaacb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="138121d0-2c2c-48a6-b662-a043cbe7e0f6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Canonical_Uri_From_Patch_With_X_Url_Path_And_X_Method" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="fad05406-ab32-4bf5-bd4e-6d330cd2674f" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="b37dd7d2-d06f-4aaf-b424-7391c44443ce"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="test"/>
  <con:entry key="x-method" value="POST"/>
  <con:entry key="x-url-path" value="/events/marketplace/v1/service-provider.add"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>/marketplace/marketplaceManagement/serviceProviderInformationManagement/serviceProviderManagement/serviceProvider.add</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e4a89981-d117-4f55-baef-23461184969a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b35523c-abe1-4182-a066-178da4fbc5ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>26fed9a3-3aeb-480b-9bb8-61ca7289b858</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80b8dda8-e04d-4e1e-8508-1e69703ff538</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fad05406-ab32-4bf5-bd4e-6d330cd2674f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8236516a-6f11-4bd6-b2b9-9f00de569890" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Canonical_Uri_From_Patch_With_Invalid_X_Url_Path" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2fdd23f5-ea45-4818-a241-bd2716b6433d" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Invalid_X_Url_Path_For_404" id="7b3f841a-4187-40c8-b120-ba6da9229fd1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Invalid_X_Url_Path_For_404" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="test"/>
  <con:entry key="x-method" value="POST"/>
  <con:entry key="x-url-path" value="/events/marketplace/v1/service-provider.register"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e4a89981-d117-4f55-baef-23461184969a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b35523c-abe1-4182-a066-178da4fbc5ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>26fed9a3-3aeb-480b-9bb8-61ca7289b858</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80b8dda8-e04d-4e1e-8508-1e69703ff538</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="c3537db3-9bac-4a16-b9d5-2a3d1a8d269c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Canonical_Uri_With_Invalid_X_Method" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="78095943-58fb-4650-8b4d-b864faa9c957" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Invalid_X_Method_For_404" id="72632d39-12cf-444b-9ce8-e6552e5cc57e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Invalid_X_Method_For_404" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="test"/>
  <con:entry key="x-method" value="GET"/>
  <con:entry key="x-url-path" value="/events/marketplace/v1/service-provider.add"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e4a89981-d117-4f55-baef-23461184969a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b35523c-abe1-4182-a066-178da4fbc5ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>26fed9a3-3aeb-480b-9bb8-61ca7289b858</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80b8dda8-e04d-4e1e-8508-1e69703ff538</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3ad70122-1a13-4423-8198-ca61a84a0c5c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Operation_Implementation_Deployment_Uri_With_Orgoid" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove_Service_Subscriptions" id="fde1126d-48b9-453b-bcb3-99ddf1baa0e3"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceSubscriptions


			log.info "Total No Of Service Subscriptions : "+ dbCollection.find().count()

			serviceId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Id"));
			log.info "serviceId: " + serviceId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceID").equals(serviceId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Subscriptions Found In ServiceSubscriptions Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceSubscriptionID " + doc.get("content").get("serviceSubscriptionID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service" id="27dac7ea-3b35-4207-a610-bed41b70f7d8"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.services


			log.info "Total No Of Services : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Services Found In Services Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceID " + doc.get("content").get("serviceID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment" id="eda5ddaa-0f6a-40b3-aea9-8f657aa51f6e"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation" id="2daa0d24-0591-4612-ac98-6e58e27e2d56"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider" id="bc0d5d77-c53d-40f8-a3e2-cd0b49e6750c"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="5ac14bae-6e65-41f9-b026-70a5b37a0b46"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Add_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Register").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Submit_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Review_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Approve_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Subscribe_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_Subscription_By_Id").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Subscribe_Service1").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Get_Subscription_By_Id1").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="3d4c16be-141d-47ff-a66a-7bd41f679508"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Service_Name", "TestService"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Management_Domain_Id", nr.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Add_Service_Provider" id="b0a602ef-b505-452e-871a-c6a33378d8b5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service-provider.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceProvider": {
            "serviceProviderOrganizationOID": "${#TestSuite#Service_Provider_Ooid}",
            "serviceProviderName": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderShortCode": "${#TestSuite#Service_Provider_Name}",
            "serviceProviderDescription": "${#TestSuite#Service_Provider_Name}"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="87fc85b0-4cb9-4a70-adc2-263a9b32d8e9"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Add_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Operation_Implementation_Name" id="4289f89b-3c39-4ddf-a57b-0b75331ca377"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Name", "ServTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Name", "ServTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Operation_Implementation_Desc", "ServTestModifiedDesc"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Api_Id", "Api"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="beaf4fa6-85ff-4e63-83be-3f53b0983ffd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "${#TestSuite#Operation_Implementation_Name}",
            "operationImplementationDescription": "ADP",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/workerProfileManagement/worker.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
		  "operationMethodCode": {
              "shortName": "POST",
              "codeValue": "POST"
            },	
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
		  "operationImplementationCustomHeaders": [
            {
                "nameCode": {
                  "codeValue": "foo",
                  "shortName": "Foo"
                },
                "valueCode": {
                  "codeValue": "twentyone",
                  "shortName": "TwentyOne"
                }
              }
            ],
            "operationImplementationOauthTokenEndpoint": "new.end.point.com"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="40f00e52-fd1d-4339-b207-0dc0d885f2f0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Operation_Implementation" id="678a6b3d-6d59-4701-ba12-b1f2b6cf327d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.submit"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="d13d9950-3b07-4f4b-a967-1768932acc9c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="88270d74-0168-46e9-a3ab-37367e272037"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Approved"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Register" id="2893c850-b2ee-463b-89e3-d9c0be6f4933"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Register" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/hr/version2/${#TestSuite#Api_Id}",
            "operationImplementationDeploymentHost": "http://localhost",
            "operationImplementationDeploymentProxy": "http://localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="2a9a6123-8883-43dd-855e-4921e5d9eb52"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Register"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="1c477cd2-8cd3-4130-84c4-fb99d2bca39d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="6f4497aa-9e42-44ad-81bd-c4648fa1d30a"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation" id="3272d314-ef8c-42f9-bb44-30466571481e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.activate" methodName="Post_Operation_Implementation_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.activate"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Register_Service" id="49c1f63e-e32f-4ad5-80f3-d227414b32c7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.register" methodName="Register_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "transform": {
          "service": {
            "serviceName": "${#TestSuite#Service_Name}",
            "serviceDescription": "${#TestSuite#Service_Name}",
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationIDs": ["${#TestSuite#Operation_Implementation_Id}"],
            "managementDomainID": "${#TestSuite#Management_Domain_Id}",
            "subscriptionRequiredIndicator": true
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="45d018e1-db2a-4b4e-8bc1-05aabbc9db58" name="Contains"><con:configuration><token>Open</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Id" id="2ef12f1e-76e1-42fa-8603-ec415bef69ed"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Service"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.service.serviceID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="a9cd81d5-f6b6-4f53-93e9-57b57a03a350"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service" id="94573ebb-a89e-4859-aa4b-094a39788b0d"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/services/{serviceID}" methodName="Get_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Submit_Service" id="feb17dfe-51f8-4598-b0e6-ab5e468122d6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.submit" methodName="Submit_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Submit_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "requesterNote": {
              "textValue": "Requester Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e6093940-b488-4643-87f8-141a8ad93872" name="Contains State Submitted"><con:configuration><token>Submitted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Review_Service" id="0c5b9444-893e-49a7-a841-bd666e91c179"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.review" methodName="Review_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="53eb487b-919c-4a5d-8067-790d847383e0" name="Contains In Review State"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Service" id="d4e3d780-c6ea-441a-bdd0-c24897234633"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.approve" methodName="Approve_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        },
        "transform": {
          "service": {
            "reviewerNote": {
              "textValue": "Review Note 1"
            }
          }
        }
      }
    }
  ]
}
</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="55a9630f-1f5f-4fc1-90b8-cba16426666c" name="Contains Approved State"><con:configuration><token>Approved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Service" id="1bfe17b4-25f9-470b-b683-81f88fa014b9"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.activate" methodName="Activate_Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "data": {
        "eventContext": {
          "serviceID": "${#TestSuite#Service_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ea4aed5f-772c-44b5-be52-1233c3afcde3" name="Contains Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Subscribe_Service" id="d4e8e991-e371-4b62-b6e3-dd85400560ce"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.subscribe" methodName="Post_Service_Subscribe" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscribe_Service" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service.subscribe"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceSubscription": {
            "serviceID": "${#TestSuite#Service_Id}",
            "subscriberOrganizationOID": "FFFFFFFFFFFFFFFF",
            "subscriberAssociateOID": "FFFFFFFFFFFFFFFA",
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            },
            "authenticationCredentials": {}
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ea4aed5f-772c-44b5-be52-1233c3afcde3" name="Contains Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Subscription_Id" id="21e7af35-9542-453b-9f1a-2384be436a35"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Subscribe_Service"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceSubscription.serviceSubscriptionID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceSubscriptionID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Subscription_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Subscription_By_Id" id="e5eab007-0046-4be9-b333-dc84754880e2"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-subscriptions/{serviceSubscriptionId}" methodName="Get_Service_Subscription_By_Id" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Subscription_By_Id" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceSubscriptionByIdTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cc3599fa-7989-4bf0-a45a-f6bdafbd1928" name="Contains operationImplementationSubscriptionID"><con:configuration><token>${#TestSuite#Service_Subscription_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="operation-Implementation-subscription-id" value=" ${#TestSuite#Operation_Implementation_Subscription_Id}"/>
  <con:entry key="serviceSubscriptionId" value="${#TestSuite#Service_Subscription_Id}"/>
  <con:entry key="operationInstanceSubscriptionID" value="${#TestSuite#Operation_Implementation_Subscription_Id}"/>
</con:parameters><con:parameterOrder><con:entry>operation-Implementation-subscription-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay1" id="2b1fba7d-6d6b-4d80-b2d9-62880473ab5f"><con:settings/><con:config><delay>300000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_With_Orgoid" id="7caa1d54-c17e-45b3-b323-e724ee654812"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_With_Orgoid" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
  <con:entry key="orgoid" value="FFFFFFFFFFFFFFFF"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="POST"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>${#TestSuite#Operation_Implementation_Deployment_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Subscribe_Service1" id="0bb59a33-61b8-46c5-a059-5573c390a692"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.subscribe" methodName="Post_Service_Subscribe" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Subscribe_Service1" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="sm_transactionId" value="ServiceSubscribeTest1"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "service.subscribe"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "serviceSubscription": {
            "serviceID": "${#TestSuite#Service_Id}",
            "subscriberOrganizationOID": "G3ETHEQMHN7VCE2Q",
            "subscriberAssociateOID": "G3ETHEQMHN7VSAVA",
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            },
            "authenticationCredentials": {}
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ea4aed5f-772c-44b5-be52-1233c3afcde3" name="Contains Status Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set_Service_Subscription_Id" id="1cf28f88-1604-4061-adea-1a4291ecb581"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Subscribe_Service"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceSubscription.serviceSubscriptionID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceSubscriptionID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Subscription_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Subscription_By_Id1" id="cfc922ff-33e1-4b25-b0a3-0915e15464a6"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-subscriptions/{serviceSubscriptionId}" methodName="Get_Service_Subscription_By_Id" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Subscription_By_Id1" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 90c0072b-ed2c-4862-9f16-9b2e29ee1ce6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceSubscriptionByIdTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cc3599fa-7989-4bf0-a45a-f6bdafbd1928" name="Contains operationImplementationSubscriptionID"><con:configuration><token>${#TestSuite#Service_Subscription_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="operation-Implementation-subscription-id" value=" ${#TestSuite#Operation_Implementation_Subscription_Id}"/>
  <con:entry key="serviceSubscriptionId" value="${#TestSuite#Service_Subscription_Id}"/>
  <con:entry key="operationInstanceSubscriptionID" value="${#TestSuite#Operation_Implementation_Subscription_Id}"/>
</con:parameters><con:parameterOrder><con:entry>operation-Implementation-subscription-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay1" id="917a1f93-9600-4df5-b4c7-36f59275ac2d"><con:settings/><con:config><delay>300000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_With_Consumerapp_Clientid" id="9d31f210-1970-49cb-a5f0-ea4110f54074"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_With_Consumerapp_Clientid" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="consumerappoid" value="276226af-3c24-4013-94f8-bff6f3406cf8"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="POST"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>${#TestSuite#Operation_Implementation_Deployment_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_With_X_Url_Path_And_X_Method" id="67ba17aa-4f9d-47aa-96fb-e01ccc1e7046"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_With_X_Url_Path_And_X_Method" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="POST"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>${#TestSuite#Operation_Implementation_Deployment_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_Without_Orgoid" id="7f1c8854-c4aa-492d-91d1-e125f1d914a7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_Without_Orgoid" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="POST"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>${#TestSuite#Operation_Implementation_Deployment_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_With_Orgoid_Not_Existing" id="81332070-67ff-40f1-bece-aa74919b74c1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_With_Orgoid_Not_Existing" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
  <con:entry key="orgoid" value="Api1234"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="POST"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>${#TestSuite#Operation_Implementation_Deployment_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_With_Consumerapp_Clientid_Not_Existing" id="aa70ec79-8f72-4ef5-aaf3-b2ecaa1c4ca7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_With_Consumerapp_Clientid_Not_Existing" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="consumerappoid" value="176226af-3c24-4013-94f8-bff6f3406cf9"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="POST"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>${#TestSuite#Operation_Implementation_Deployment_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_Without_X_Url_Path" id="515d3bef-b4df-4d6f-bea8-f085fb5cacc0"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_Without_X_Url_Path" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="POST"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_Without_X_Method" id="30774bfb-b8da-4cd9-aa1a-e2a31fbe64b4"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_Without_X_Method" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_With_Invalid_X_Url_Path" id="0f3d425c-e945-4d12-aa26-1a9ace8ac561"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_With_Invalid_X_Url_Path" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="POST"/>
  <con:entry key="x-url-path" value="/hr/version2/Api1234"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_With_Invalid_X_Method" id="816a5d18-f8c2-4f8d-8d2b-864346ed1bd2"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_With_Invalid_X_Method" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="Bearer 05249cd4-56b1-4eac-b142-57c02add9fea"/>
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="GET"/>
  <con:entry key="x-url-path" value="/hr/version2/${#TestSuite#Api_Id}"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9d1b0f58-d360-4657-8e84-108e00a3f033" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Subscriptions2" id="84b2b53c-17be-4537-9fe4-ee1078bafa64"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceSubscriptions


			log.info "Total No Of Service Subscriptions : "+ dbCollection.find().count()

			serviceId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Id"));
			log.info "serviceId: " + serviceId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceID").equals(serviceId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Subscriptions Found In ServiceSubscriptions Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceSubscriptionID " + doc.get("content").get("serviceSubscriptionID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service2" id="fd03892f-a62a-40d8-a08b-07e35ffa0c55"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.services


			log.info "Total No Of Services : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Services Found In Services Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceID " + doc.get("content").get("serviceID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Services: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation_Deployment2" id="4e522132-0f48-43d9-a87c-2fabc557f94a"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementationDeployments


			log.info "Total No Of Operation Implementation Deployments: "+ dbCollection.find().count()

			oImplementationId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Operation_Implementation_Id"));
			log.info "operationImplementationID: " + oImplementationId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                		if (doc.get("content").get("operationImplementationID").equals(oImplementationId)){
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Deployment Found In Operation Implementation Deployments Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationDeploymentID " + doc.get("content").get("operationImplementationDeploymentID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  	cursor.close()
         		}

     
			log.info "Total No Of Operation Implementation Deploymentss: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Operation_Implementation2" id="52ce489f-4c4d-4830-aa34-144d85a8d8fe"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)

   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.operationImplementations


			log.info "Total No Of Operation Implementations : "+ dbCollection.find().count()

			sproviderId = UUID.fromString(testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Id"));
			log.info "serviceProviderID: " + sproviderId

 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderID").equals(sproviderId)){	
                	 		
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Operation Implementation Found In Operation Implementations Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "operationImplementationID " + doc.get("content").get("operationImplementationID")

                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}

     
			log.info "Total No Of Operation Implementations: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
}</script></con:config></con:testStep><con:testStep type="groovy" name="Remove_Service_Provider2" id="f893df7b-bf6c-4198-adbb-806c7615755f"><con:settings/><con:config><script>import com.jcraft.jsch.JSch
import com.jcraft.jsch.Session
import com.jcraft.jsch.UserInfo
import com.jcraft.jsch.Channel
import com.jcraft.jsch.ChannelExec
import com.jcraft.jsch.*

import java.util.Properties

import com.gmongo.GMongo
import com.mongodb.*

def mongoHost = testRunner.testCase.testSuite.getPropertyValue("Mongo_Host")
log.info("mongoHost:" + mongoHost)

def mongoUser = testRunner.testCase.testSuite.getPropertyValue("Mongo_User")
log.info("mongoUser:" + mongoUser)

def mongoPass = testRunner.testCase.testSuite.getPropertyValue("Mongo_Password")
log.info("mongoPass:" + mongoPass)

def sshPort = 22

def mongoPort = testRunner.testCase.testSuite.getPropertyValue("Mongo_Port")
log.info("mongoPort:" + mongoPort)

def assignedPort

def localPort = testRunner.testCase.testSuite.getPropertyValue("Local_Port")
log.info("localPort:" + localPort)
   
JSch jsch = new JSch()
Session sshSession = jsch.getSession(mongoUser, mongoHost, sshPort);
sshSession.setConfig("StrictHostKeyChecking", "no")
sshSession.setPassword(mongoPass)

try{
		sshSession.connect()
	 	assignedPort = sshSession.setPortForwardingL(localPort.toInteger(), mongoHost.toString(), mongoPort.toInteger());
	 	log.info("assigned port:" + assignedPort)
		if (assignedPort == 0) {
    			
    			log.info("Port forwarding failed!"); 
    			return;
		
		}else{

			log.info "Connected To Mongo Host Using Port Forwarding .."

			def mongo = new GMongo(testRunner.testCase.testSuite.getPropertyValue("Local_Host"))
			def db = mongo.getDB('serviceRegistryDB')
			def dbCollection = db.serviceProviders

			log.info "Total No Of Service Providers: "+ dbCollection.find().count()

			sproviderOoid = testRunner.testCase.testSuite.getPropertyValue("Service_Provider_Ooid");
			log.info "sproviderOoid: " + sproviderOoid


 			DBCursor cursor =  dbCollection.find()
        		try{
            	while(cursor.hasNext()){
                	def doc = cursor.next()
                
                
                	 	if (doc.get("content").get("serviceProviderOrganizationOID").equals(sproviderOoid)){	
					
                	 		log.info "------------------------------------------------------------------------------------------------"
                	 		log.info "Service Provider Found In Service Providers Collection"
                	 		
                	 		//log.info doc   
                	 		log.info "serviceProviderName: " + doc.get("content").get("serviceProviderName")
                	 		log.info "serviceProviderID " + doc.get("content").get("serviceProviderID")

						sproviderId = doc.get("content").get("serviceProviderID")
						testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id", sproviderId.toString());
						
                	 		objectId = doc.get("_id")
                	 		log.info "documentId: " + objectId

                	 		log.info dbCollection.remove("_id" : objectId)
                	 		log.info "------------------------------------------------------------------------------------------------"

              	 		}
                	 	     
                	}
         		}finally {
                  cursor.close()
         		}
     
			log.info "Total No Of Service Providers: "+ dbCollection.find().count()
			mongo.close()
			
		}
}finally{
	  sshSession.disconnect()
	  log.info "Disconnected From Mongo Host.."
	  null
} 
</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>1085d557-7116-40f3-91be-de37c012aa40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317ddbd9-a728-4700-b2d0-ba23659678a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db75d4c-c8a3-4ac8-9cf3-7a3ee2d5fa5b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8041e1d3-c400-434d-b57e-9d24463611ef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change_Service_Operation_Implementation_Ids" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="45278b7c-771f-45f9-bdd8-f8acaa528cf1"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Change_Service_Operation_Implementation_Ids").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Change_Service_Operation_Implementation_Ids" id="4afdbc67-5863-49ca-830b-89538453ec83"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service.operation-implementation-ids.change" methodName="Service_Operation_Implementation_Ids_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Change_Service_Operation_Implementation_Ids" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 6f37cbe2-8af9-454f-b31f-3bfca435ccbe"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="serviceID" value="${#TestSuite#Service_Id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Access_Token</con:name><con:value>Bearer 6158a13f-fd3a-4c58-aac0-240cbc9ed380</con:value></con:property><con:property><con:name>Access_Token_B2C</con:name><con:value>Bearer 5940ab98-c89e-4880-b7ce-712bffa9656b</con:value></con:property><con:property><con:name>Adp_Msg_Msgid</con:name><con:value/></con:property><con:property><con:name>Api_Id</con:name><con:value>Api83386</con:value></con:property><con:property><con:name>Delay_Time</con:name><con:value>4000</con:value></con:property><con:property><con:name>Item_Id</con:name><con:value>871e700e-36b3-42cc-b754-c615936e2967</con:value></con:property><con:property><con:name>Management_Domain_Id</con:name><con:value>57702</con:value></con:property><con:property><con:name>Modified_Operation_Implementation_Desc</con:name><con:value>ServTestModifiedDesc83386</con:value></con:property><con:property><con:name>Modified_Operation_Implementation_Name</con:name><con:value>ServTestModified83386</con:value></con:property><con:property><con:name>Modified_Service_Provider_Desc</con:name><con:value>ServProvTestModifiedDesc57702</con:value></con:property><con:property><con:name>Modified_Service_Provider_Name</con:name><con:value>ServProvTestModified57702</con:value></con:property><con:property><con:name>Operation_Implementation_Deployment_Id</con:name><con:value>95fcad1d-970f-40a5-b1b6-e86e65392b8f</con:value></con:property><con:property><con:name>Operation_Implementation_Id</con:name><con:value>0faebd4c-e7bc-4646-8815-fbed6fb4038d</con:value></con:property><con:property><con:name>Operation_Implementation_Name</con:name><con:value>ServTest83386</con:value></con:property><con:property><con:name>Operation_Implementation_Subscription_Id</con:name><con:value>1d71de0d-1a0a-40e8-9a03-78253d2afe82</con:value></con:property><con:property><con:name>Operation_Spec_Id</con:name><con:value>OSpec64807</con:value></con:property><con:property><con:name>Service_Id</con:name><con:value>ad139cae-940a-43c6-9b78-ee302d97b13f</con:value></con:property><con:property><con:name>Service_Name</con:name><con:value>TestService57702</con:value></con:property><con:property><con:name>Service_Provider_Id</con:name><con:value>b47ab8e0-ace7-4886-ba9f-413c015a82c9</con:value></con:property><con:property><con:name>Service_Provider_Name</con:name><con:value>ServProvTest57702</con:value></con:property><con:property><con:name>Service_Provider_Ooid</con:name><con:value>G3DHY9KFVPP9RGAK</con:value></con:property><con:property><con:name>Service_Subscription_Id</con:name><con:value>1e0d02b1-997a-4b9e-90c9-3e05215770db</con:value></con:property><con:property><con:name>Mongo_Host</con:name><con:value>dc1rfhcmmktpl28.whc.dc01.us.adp</con:value></con:property><con:property><con:name>Mongo_User</con:name><con:value>saragadv</con:value></con:property><con:property><con:name>Mongo_Password</con:name><con:value>U80htO7h</con:value></con:property><con:property><con:name>Mongo_Port</con:name><con:value>27017</con:value></con:property><con:property><con:name>Local_Port</con:name><con:value>27889</con:value></con:property><con:property><con:name>Local_Host</con:name><con:value>localhost:27889</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="4c858cdd-27ad-47f0-a0aa-867ced37ca89" name="AWSHostPostAndGetAddressAPIRegressionTestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="8d453c37-6e87-4e78-8401-75edf0a60641" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Generate_Token_B2C" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="properties" name="Properties" id="e1b9c1a1-f98d-4a04-8e5c-27d97370e5df"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Session_ID</con:name><con:value>sessionID=a8097d81-2f46-455c-a31b-9dbb5fc9b61e&amp;action=Login&amp;username=sbarbato@iat9mark&amp;password=adpadp13</con:value></con:property><con:property><con:name>Sm_session</con:name><con:value>client_id=888ed931-bb1d-496f-a5a9-3d71e6171c47&amp;client_secret=47f1f83b-9af3-48be-aa6e-38788a74dbd4&amp;code=31cb3038-e01c-410c-aa1d-140c8aa1c848&amp;redirect_uri=https://testadp.appdirect.com&amp;scope=openid%20api%20profile&amp;grant_type=authorization_code</con:value></con:property><con:property><con:name>Session_ID_value</con:name><con:value>a8097d81-2f46-455c-a31b-9dbb5fc9b61e</con:value></con:property><con:property><con:name>Set_Cookie</con:name><con:value>SMSESSION=ytF++FxNsxwqgaQnZCTJSNbgbsFYbRYiFXNhutiFbcZ+UMvsn4yDq1J7QBGb8dqIub7OQKZ/4OIqzvwGaeokMPZ97pCYnmfnQnNTBk6lonA+hSVdH7XmRM6eQ4fcnNNjAOCT+Mz0bF54G8Tr31dWcP2kslOiM/wOyc1ltbzFwUQdQFSmPSHd9jLySK3z+r3ZoniaV8WgBU8gensc7RW32OQ7M76wm4WLvp84v26bhG+D5tquQVXrswDL20u8cNhBAcTxnRikJekNmz+yRFWNpgCsCmy6l7vOyrkabQRC91NSRpQM2p/adRqIvZf4MKBPVwMlzeLfDTEEjFTy/1Oqn0TyNI1qnc9wIj+hZmyzqM9GjjX1BsgIHxDuobUn8INHGVpf1pHQfClp38MF6cbk+P5Rug/iv7qXo/e+NClTUIqzjRzAnumTVc61vDvevPk0dpYgpzIDE93PryBuG9rYfXnvoPg1HYlnPZaOSmYdHkLX/gKeDyv0ks9LpSYGCXqrSnDL3+P85ev1FVm5kVQeir60PgGRB/zSjau96AKwSvi2coNgJVl+FzfWhQf6So1kdp1Mx4pfB7I1jkNPNEF+3Uonc+nPcqQFvpiOC4wGIKTaNkzMEzciZnIT5vlGjVJwh6QFNCk0WqXm5EN7esn5T3z96ixBjfaWLEp9GPTupwX5zQIGHLi8ou0qRsay3E6QIsMk9ToKn4Pbz3QUeXcrXlOIO/DWIFKt0QPU2KBg50P+9V9LY9gDBM2dm2DU6etEU3dOU3OkbeJryTeMkXuc/rQznDrIJ++ylp86ezN46fSwuwHEvJBUv7PoPMG3z1YmnP11y5H44mFF1KBkh2KPM5eP9k1mV7Vp9ahiDil2qKB+ASx5hzoiZ+fYsSFErYuQtnmrlE3EArGwfZnqQkMFiwWNAZBp833QjrO2wtYV9aOlpZbrQL/MhAQriUli06iYRKSL4X5MFKohIEh329Ir50EXzm76M2KmUrACOOmBFNd/uFJCt2v0mPAeOkjV2LMeXfAc4VneB325/9xfDPwo7XoDlTSLAO7S</con:value></con:property><con:property><con:name>Authorize_confirm</con:name><con:value>sessionID=5f53c04b-72eb-4b87-9596-6affcdc58515&amp;action=Confirm</con:value></con:property><con:property><con:name>accessTokenPayload</con:name><con:value>client_id=888ed931-bb1d-496f-a5a9-3d71e6171c47&amp;client_secret=47f1f83b-9af3-48be-aa6e-38788a74dbd4&amp;code=5b9815e9-6d37-452c-bef4-185aabd82fde&amp;redirect_uri=https://marketplace.adp.com/&amp;scope=openid%20api%20profile&amp;grant_type=authorization_code</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Get_SessionID" id="819392f7-14e3-4e17-a9d1-bbba2f2705b5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/authorize" methodName="Wfn_Session_Call" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_SessionID" id="46e5185b-a519-49f8-a772-ca7595c620be" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://accounts.adp.com/auth/oauth/v2/authorize</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="627f4dd7-80e6-4202-a442-6879a2405dbd" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="scope" value="openid api profile"/>
  <con:entry key="response_type" value="code"/>
  <con:entry key="redirect_uri" value="https://testadp.appdirect.com"/>
  <con:entry key="client_id" value="888ed931-bb1d-496f-a5a9-3d71e6171c47"/>
</con:parameters><con:parameterOrder><con:entry>response_type</con:entry><con:entry>client_id</con:entry><con:entry>redirect_uri</con:entry><con:entry>scope</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Get_SessionID_groovy" id="c9fd4c83-f202-46ac-aa86-4bbd53b0c515"><con:settings/><con:config><script>import java.util.regex.*
def response
def match
def postJSON = "sessionID=528dcac3-4c93-4bbe-aa3d-6423a60c2b8f&amp;action=Login&amp;username=sbarbato@iat9mark&amp;password=adpadp18"
def propTestStep
def responseHeads
def httpStatus

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_SessionID"].testRequest.response.responseContent
responseHeads = context.testCase.testSteps["Get_SessionID"].testRequest.response.responseHeaders
httpStatus = responseHeads["#status#"]
log.info "Response Status for the GET SessionID call: " + httpStatus

//log.info "Response:$response"

httpsLocation = (responseHeads["Location"]).toString()
log.info "Location:$httpsLocation"

Pattern myRegex = ~/regex/
match = (httpsLocation =~ /\w{8}-\w{4}-\w{4}-\w{4}-\w{12}/)[0]
//Matcher myatcher = Pattern.compile(/regex/).matcher("subject")
log.info "SessionID value: " + match.toString()

log.info postJSON
postJSON = postJSON.replace("528dcac3-4c93-4bbe-aa3d-6423a60c2b8f", match.toString())
log.info "The Payload to get the smSession vlaue: "+postJSON

propTestStep = context.testCase.getTestStepByName("Properties")
propTestStep.setPropertyValue("Session_ID",postJSON)
propTestStep.setPropertyValue("Session_ID_value",match.toString())</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_code_smSession" id="a0ebc974-123a-4c9b-8e43-15463da4489b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/authorize" methodName="Wfn_SMSession_Call" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_code_smSession" id="87552401-8f3b-4c16-8aea-7bb127019ec6" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>${Properties#Session_ID}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/authorize</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="53d7ae8e-6d3d-4c86-9612-636cab4b10c7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,302, 307</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_code_smSession_With_Authorize_Consent" id="a8c5170e-4d24-4835-b6b2-6580b7a363be"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/authorize/consent" methodName="Wfn_AuthorizeConsent_Call" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_code_smSession_With_Authorize_Consent" id="87552401-8f3b-4c16-8aea-7bb127019ec6" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>${Properties#Session_ID}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/authorize</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="53d7ae8e-6d3d-4c86-9612-636cab4b10c7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,302, 307</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Get_code_sm_groovy" id="43e92f6d-e5d2-49f4-8c80-a405a2d0b3f5"><con:settings/><con:config><script><![CDATA[import com.eviware.soapui.support.types.StringToStringsMap

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def payload = "client_id=888ed931-bb1d-496f-a5a9-3d71e6171c47&client_secret=47f1f83b-9af3-48be-aa6e-38788a74dbd4&code=<<code>>&redirect_uri=https://testadp.appdirect.com&scope=openid%20api%20profile&grant_type=authorization_code"
def runner
def myTestCase = context.testCase
def TestCase = testRunner.testCase.testSuite.testCases["Get_Token_B2C"]
def codeValue
def httpStatus
def httpStatusTemp
def cookieValue
def AC_payload = "sessionID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&action=Confirm"
//def sessionID_value
def propTestStep = context.testCase.getTestStepByName("Properties")
//payload = propTestStep.getPropertyValue("accessTokenPayload")
AC_payload = propTestStep.getPropertyValue("smSessionPayload")
response = context.testCase.testSteps["Get_code_smSession_With_Authorize_Consent"].testRequest.response.responseContent
//log.info "Response:$response"

httpResponseHeaders = context.testCase.testSteps["Get_code_smSession_With_Authorize_Consent"].testRequest.response.responseHeaders
//log.info "Got the RH"
httpStatus = (httpResponseHeaders["#status#"]).toString()
codeValue = httpResponseHeaders["Location"][0]
log.info "httpStatus for the smSession call: " + httpStatus
log.info "CodeValue: " + codeValue



//if(httpStatus.contains("200")){
if(codeValue.toString().contains("code=")){

	log.info "Calling the Get token call since status is 302"	
	codeValue = httpResponseHeaders["Location"][0]
	match = ((codeValue =~ /code=(.*)\&/)[0][1]).toString()
	//log.info "Code Value: " + match

	log.info "Got the code value from the location header: " + match
	payload = payload.replace("<<code>>", match.toString())
	log.info "Payload for Get_Token: " + payload
	propTestStep.setPropertyValue("Sm_session",payload)	

}
else if(!codeValue.toString().contains("code=")){
	
	log.info "Calling authorize with action=confirm since the status 200 received"

	cookieValuetemp = httpResponseHeaders["Set-Cookie"][0]
	cookieValuetemp = cookieValuetemp.replace("; Domain=.adp.com; Path=/; Secure", "")
	//log.info cookieValuetemp

	cookieValue = ((cookieValuetemp =~ /(SMSESSION=.*)/)[0][1]).toString()		
	propTestStep.setPropertyValue("Set_Cookie",cookieValue)
	log.info "Cookie Value is seen: " + cookieValue

	//sessionID_value = propTestStep.getPropertyValue("Session_ID_value")
	AC_payload = AC_payload.replace("action=Login", "action=Confirm")
	log.info "Payload for Authorize_confirm: " + AC_payload

	
	propTestStep.setPropertyValue("Authorize_confirm",AC_payload)	
	request = testRunner.testCase.getTestStepByName("Authorize_confirm").testRequest
	headers = request.getRequestHeaders()
	headers.remove( "Cookie");
	headers.put("Cookie", cookieValue)

	request.setRequestHeaders(headers)

	log.info "Cookie header is set successfully"
	log.info "cookieValue: " + cookieValue
	
	runner = TestCase.testSteps["Authorize_confirm"]
	runner.run(testRunner, context)
	//testRunner.runTestStepByName("Authorize_confirm_http")
	log.info "Run Success for Authorize_confirm case!!"

	httpResponseHeaders = context.testCase.testSteps["Authorize_confirm"].testRequest.response.responseHeaders
	httpStatusTemp = (httpResponseHeaders["#status#"]).toString()
	log.info "HttpStatus for Authorize call: " + httpStatusTemp
	codeValue = httpResponseHeaders["Location"][0]

	match = ((codeValue =~ /code=(.*)\&/)[0][1]).toString()
	//log.info "Code Value: " + match

	log.info "Got the code value from the location header: " + match

	payload = payload.replace("<<code>>", match.toString())
	log.info "Payload for Get_Token: " + payload

	propTestStep.setPropertyValue("Sm_session",payload)

}


//runner = TestCase.testSteps["Get_token"]
//runner.run(testRunner, context)
//log.info "Run Success for Get_token case!!"

else{
	log.info "Invalid Status Code. Script will fail"
}

/*
match = ((httpStatus =~ /code=(.*)\&/)[0][1]).toString()
log.info match

payload = payload.replace("d9a881a1-fcc9-4d8a-916b-e65fed398ada", match.toString())
log.info payload

propTestStep = context.testCase.getTestStepByName("Properties")
propTestStep.setPropertyValue("Sm_session",payload)
*/
//log.info "compelete headers:"
					//log.info httpResponseHeaders
					//temp = httpResponseHeaders["Cache-Control"]]]></script></con:config></con:testStep><con:testStep type="restrequest" name="Authorize_confirm" id="62e64657-c190-443b-84bc-3370a11a8a57" disabled="true"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/authorize" methodName="Wfn_SMSession_Call" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Authorize_confirm" id="87552401-8f3b-4c16-8aea-7bb127019ec6" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="SMSESSION=W0WBaUGTQDvYjqXb1wnQldW50WJ5vR2BnsLtlA+K2GlPTi3aQ+vq72GL/qekzK3bGC7xsiBwMXiecCf8KZQG1OjkPVCdRzvzy+f4tT//ro0yK8Muzm/b8Y98Wt6op5aMcw+jtNoa3IKhalJ4C3R04qvRHuIqUZW+saoaQGOixqy0Q3GNYLouK3X5kqQ92C1Q+CYXI4Ll3yDmLWdHYasOSwlpV4Sx6yy8vLZ6ABpMtMNAFpY7WhM5pNgR3d4KQ5EqMti+tJcDhV0Iv40po6DzU48cHoqjjN5gl4c6H/KC7UnhyEt1cChtGqKQJg229jO8m7vTOReQ6Cs/AUb9IsWZ0I6hW/5nxFnUvgyvGaUHNS9KEJ6A5DB5DwqAbHkMboy/jIXdUGgRsFR8oLoswys4g2DEJ3Lt4a2r54jYw63h/TofLgmATZPgJk6AlqlmikebqFyDDDMbHoz1ijVvy8qMOOe3ZgTzHDwnyxZaKqf/pT5KoZSfAb7EgF1aq8NQoLzjHMmJxarAs78WfUbkBVIdfyOvT0nBM+SLIRWsM2jJ7lizFRikRRJBpJgrMBopPDm7mEIgTK+JtvanwChVU9VHt5kyvGwB1EzTVYYsHm5e3WOs3lpwJ8bfjmpj75rmKWaEa3A3+uH1PqzfQXyGMGBDwYx04fU+rkwHxfFD9hxa5DN+xqtu3Fj65aU1EhFuMPrxHF2BC2LMFGWt8jWCSKfPDiMjeaCtqogFJSaVA+ZfECffoJC+yB3zdKDqsrYvqw/XY7FgPeAKYEN6e1FUquaBKDjjBVYZIFklRofvWo/PmPEJLqZppE0NwRovq38glfg7Hb/Pas+GnLIuGrDBmXZGVyAe1B7rBIWTql52ijOB5rzfdgQDs39b+px84/8OTU7ediZp7muXTt6xFOHOvvJ6yIRjOI7by44QTPXRXiecow2UwbSmfkN4STXF23j11u43PS6sa05mfjE72rP6V5zAPdy12DJURrNS;"/>
  &lt;con:entry key="content-type" value="application/x-www-form-urlencoded"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>${Properties#Authorize_confirm}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/authorize</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="210fdb11-7f51-4c66-8787-46cc79eb8e27" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,302</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="$badparam" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>$orderby</con:entry><con:entry>$expand</con:entry><con:entry>limit</con:entry><con:entry>offset</con:entry><con:entry>$top</con:entry><con:entry>$skip</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$badparam</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_token" id="e134de74-1ad8-432c-b984-c83eb1a3485b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/token" methodName="Wfn_Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_token" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>${Properties#Sm_session}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="78077eba-0b9d-4787-bdd4-21fe90861835" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Get_token_groovy" id="672b9c7e-c0ba-4caf-b754-63102d831fef"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Get_token"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.access_token

log.info "Access Token: " + temp

accessToken = "Bearer " + temp

testRunner.testCase.testSuite.setPropertyValue("Access_Token",accessToken);

log.info "Authorization is header is set for the workers call !!"</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="564fb483-54b9-4598-96b8-ed0f903c7580" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Service_Provider" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="e315395b-8e58-4d65-9970-be628747ee69"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="1b440a67-95f6-448e-9999-8d84909c0a33" disabled="true"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Ooid", nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Service_Provider" id="90ed6440-4c92-482a-8ec1-3eec7e0f7367"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 9488e553-7eda-4687-879f-df85a2f56063"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "marketplace"
      },
      "eventNameCode": {
        "codeValue": "service-provider.register"
      },
      "data": {
        "transform": {
          "eventStatusCode": {
            "codeValue": "submit"
          },
          "serviceProvider": {
            "serviceProviderOOID": "MIKEBOWERSADPMKP",
            "serviceProviderName": "Mike Bowers",
            "serviceProviderShortCode": "MB",
            "serviceProviderLogoLink": {
              "rel": "related",
              "href": ""
            },
            "serviceProviderDescription": "Mike Bowers"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="10b86489-f047-43ec-ac5d-07f450511657"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1720bc5d-adf6-415f-9e9a-1fadfad2e0d6"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a29b2d1b-8323-44dd-b715-1562fa59f4be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Service_Provider" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="45459ef0-6a03-4d6d-8417-661e16b2a5b8"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider" id="7fc07c30-2a50-4bd8-a560-ed31ee906aba"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a586efd0-c8fe-47e0-824b-9c9f6c834335" name="Contains"><con:configuration><token>${#TestSuite#Service_Provider_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="514e8b4a-fc22-444a-bbc6-1c2ea3326ef6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="b78d7390-f018-45d2-a5ee-bb7e19d89250"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="ee98685e-0a4f-47b2-8d1e-6051d571af0e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay" id="adb7fa2c-4a16-4eb7-81da-075a782d3fae"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f27dfe00-5fd1-40b5-bbfc-af104dba8b04" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="01713fc4-6975-4e48-9591-13d8afbd0c3b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="956b9781-b1cb-4ee2-81b9-3cf2f91b892c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "PostAddressFromAwsHost",
            "canonicalURI": "/hr/workerInformationManagement/workerManagement/associateAddressManagement/associateAddress.create",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecification": {
              "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
              "operationMethod": "POST"
            },
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "basic",
              "shortName": "Basic"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationDescription": "ADP"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="f457e248-55ae-477f-b316-70264fc3a21d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="e6b98873-4b86-4ee7-b89b-02ac2e049474"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ba18a809-1422-475d-996b-dc83217d25e1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="54864812-d472-43fe-8748-b95bcbdbcc46"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Operation_Implementation" id="5f003f24-c784-4df4-863e-b3b4809e8df0"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations/{operationImplementationID}" methodName="Get_Operation_Implementation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="920d3673-f05d-4e48-9854-4fdd34be6ae0" name="Contains operationImplementationName"><con:configuration><token>${#TestSuite#Operation_Implementation_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="operationImplementationID" value="${#TestSuite#Operation_Implementation_Id}"/>
</con:parameters><con:parameterOrder><con:entry>operationImplementationID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="9d3025fc-67d4-4d2f-9032-f8e88887d5e0"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="dd693ec3-c41d-4a3b-9318-6a0d3dcf2807" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Review_Request_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="337c1569-c1d1-4d14-ba69-779d53cc94c4"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Review_Request_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Review_Request_Operation_Implementation" id="011a75b5-b5bd-4e9a-93f1-5f1f9823316f"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Request_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review-request"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Pending Review"><con:configuration><token>Pending Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="042ec15a-d906-44c4-b96a-bfcd41264991"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="19884004-8228-4d26-906e-469c37621c75" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Review_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="b7b4b796-a7b6-48e1-81ab-82b784d7f7da"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="91b26ea9-ca94-4719-9b42-487731c0ef4e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3b5ee188-6578-4ca2-bda2-4b69e80c6a47"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6eca400c-8feb-4dad-9fc5-3b202af1d17c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Approve_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="d4f299da-cf82-44b2-9dbb-62d6a328044c"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="98fbbf1a-b2ab-4e04-bffc-b5dc24ecdc0f"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Pending Release"><con:configuration><token>Pending Release</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="ab006f6f-d331-4f33-88c2-4c0e535fb7bc"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="85275201-3151-42a5-a8e2-d835532f7f0e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Release_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="09b3e71c-e637-43e3-acc3-4004e5f2b9ac"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Add").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Release_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Add" id="ef8ba7c9-2ffe-4dc7-a0b4-f3ab2b287781"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Add" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/dev/address",
            "operationImplementationDeploymentHost": "https://bu612zra1g.execute-api.us-east-1.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="157d63b0-fae5-4ec0-bc86-f4dbdc47c989"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Add"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="71e38148-31a3-4c3f-9b7e-dc66d29d15b3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="87c2a0f5-16d5-413e-8c72-bf91463416f3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="3ade16ab-786a-4e2c-b5e7-295a502d512c"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c3910454-90da-4222-bacc-c65153904af4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Operation_Implementation_Subscription" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="55b4e7b3-8ba3-4857-8a32-38048aa501af"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Add").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Add" id="af3838fd-aa59-4b5a-9e5c-81c68b123df1"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription.add" methodName="Post_Operation_Implementation_Subscription_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Add" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationSubscription": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "subscriberOOID": "G3J931CGFFPWKGGB",
            "subscriberAOID": "G3K5H8MR440GYGXN",
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            },
            "authenticationCredentials": {}
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cba677bd-13a2-42e4-ab89-c7121759f225" name=" Contains operationImplementationSubscriptionStatusCode Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f2ef12c2-d300-4b1f-9800-c368bd54e8d9" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Subscription_Id" id="55d1be50-321d-468c-ab18-11f06725a025"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Implementation_Subscription_Add"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationSubscription.operationImplementationSubscriptionID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationSubscriptionID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Subscription_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="24520d6d-99fc-4b2c-b6c9-4afc899d8ddd"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c4768aa4-2bcc-4aa1-ac50-e4da90706bf3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Operation_Implementation_Subscription_Authentication_Credentials_Change" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="3731002f-8825-4882-a0dc-0f04073606e2"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Authentication_Credentials_Change").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Authentication_Credentials_Change" id="f2ca222d-2b98-4c87-a69d-8906ec6935cb"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription-authentication-credentials.change" methodName="Post_Operation_Implementation_Subscription_Authentication_Credentials_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Authentication_Credentials_Change" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription-authentication-credentials.change"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationSubscription": {
            "operationImplementationSubscriptionID": "${#TestSuite#Operation_Implementation_Subscription_Id}"
          }
        },
        "transform": {
          "operationImplementationSubscription": {
            "authenticationCredentials": {
              "userID": "marketplace",
              "password": "mkpl"
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Userid"><con:configuration><token>marketplace</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Password"><con:configuration><token>mkpl</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ab201b0e-ea15-483f-aad3-765dd0caccf1" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="707ebdf3-b762-4e72-bd02-a0f8b0ee50ad"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="23b51cc4-4359-4f0c-993c-91af2719cf4f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Canonical_Uri_From_Patch_With_X_Url_Path_And_X_Method" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="9c6d733d-8914-4e15-b79b-3aa85bd532de" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="71780efe-9224-49e8-b38a-c05709279bb8"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="test"/>
  <con:entry key="x-method" value="POST"/>
  <con:entry key="x-url-path" value="/dev/address"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e4a89981-d117-4f55-baef-23461184969a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b35523c-abe1-4182-a066-178da4fbc5ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>26fed9a3-3aeb-480b-9bb8-61ca7289b858</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80b8dda8-e04d-4e1e-8508-1e69703ff538</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fad05406-ab32-4bf5-bd4e-6d330cd2674f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="84f8c46d-b0df-4367-8f72-70e35f810d4e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Operation_Implementation1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c3adaf3f-fdcb-4cfe-a483-e28052d65001"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="45af5e13-15f0-45e3-94cc-3daaeec57ec5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "GetAddressFromAwsHost",
            "canonicalURI": "/core/messageCenterManagement/notificationManagement/notificationViewing/notificationEvent.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecification": {
              "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
              "operationMethod": "GET"
            },
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "basic",
              "shortName": "Basic"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "none",
              "shortName": "None"
            },
            "operationImplementationDescription": "ADP"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="b12c4ac7-6fa8-4da0-9731-78578725ee07"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="051e272e-a141-4129-b509-51409a496489"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e11905df-8404-4f91-9601-2c9fd2f669c2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Operation_Implementation1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="591ba2ef-7e12-4867-8161-3e36c689378a"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Operation_Implementation" id="0375d4c9-a1ec-47ea-ae19-f7958fb9a8d7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations/{operationImplementationID}" methodName="Get_Operation_Implementation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="920d3673-f05d-4e48-9854-4fdd34be6ae0" name="Contains operationImplementationName"><con:configuration><token>${#TestSuite#Operation_Implementation_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="operationImplementationID" value="${#TestSuite#Operation_Implementation_Id}"/>
</con:parameters><con:parameterOrder><con:entry>operationImplementationID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="f015fef2-9c26-4404-afd1-9dc4b21da578"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="760b420d-8aea-4a26-8d44-544a87a91698" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Review_Request_Operation_Implementation1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="fd7d1aaa-26b3-4b78-96e5-65c47da6d009"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Review_Request_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Review_Request_Operation_Implementation" id="a9357890-2a21-456e-bc81-b796e65c292b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Request_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review-request"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Pending Review"><con:configuration><token>Pending Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="81a88799-2334-4375-ae84-12b3ea0bf627"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="15fa461a-9266-44b2-828a-ddd66a802722" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Review_Operation_Implementation1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2958e8e7-92ec-4fbe-9391-ac53e1bfd5c8"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="3fac41ef-20c5-4792-a372-0bfba47e3669"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="209e207e-94d8-4402-8b95-9816a7a1b72c"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6da40edd-dc38-4faf-8668-21bac640898e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Approve_Operation_Implementation1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="27b63d10-6792-4db5-8119-751750be32fe"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="9de0f756-7cf0-42fe-8e62-8c64d9b69fce"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Pending Release"><con:configuration><token>Pending Release</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="5a467985-5747-4e6d-8634-e27463425ef7"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6a397cca-ec8d-44fd-91ff-27b3977226f3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Release_Operation_Implementation1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="6a5d705a-db84-4ec8-a528-e46169b5ec96"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Add").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Release_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Add" id="e83b9ab6-8d83-466f-93a3-67a4e7dd815c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Add" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/dev/address",
            "operationImplementationDeploymentHost": "https://bu612zra1g.execute-api.us-east-1.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="ffd91082-c8e8-4403-952c-cd1d0bc35ef8"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Add"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="1726080a-1538-4f0e-9f6e-244685c91218"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="bd2cf738-f3cb-405e-84cb-df6a642cc443"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="33a08161-b4f7-49ee-8256-34c727b35079"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4899c5a1-2a9f-4092-8d59-cc8b9ad556f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Operation_Implementation_Subscription1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="3e251aad-75a2-4a09-b9d4-a238a3ecddf1"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Add").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Add" id="bc5d2d64-7c6f-464a-822e-b148b7b69402"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription.add" methodName="Post_Operation_Implementation_Subscription_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Add" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationSubscription": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "subscriberOOID": "G3J931CGFFPWKGGB",
            "subscriberAOID": "G3K5H8MR440GYGXN",
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            },
            "authenticationCredentials": {}
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cba677bd-13a2-42e4-ab89-c7121759f225" name=" Contains operationImplementationSubscriptionStatusCode Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f2ef12c2-d300-4b1f-9800-c368bd54e8d9" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Subscription_Id" id="9ea98c00-a2fd-4a9b-b8da-e31dc9b1aeec"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Implementation_Subscription_Add"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationSubscription.operationImplementationSubscriptionID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationSubscriptionID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Subscription_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="aeab574c-17f2-4ba7-a2e7-712739ee45df"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="fc2718f2-84f8-4e69-9dda-028dafd8fbfb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Operation_Implementation_Subscription_Authentication_Credentials_Change1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="ecae805f-8bac-46a3-b289-a3c54dc7a08d"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Authentication_Credentials_Change").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Authentication_Credentials_Change" id="b12fe436-5bd2-4fc2-b012-86e7e14171b7"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription-authentication-credentials.change" methodName="Post_Operation_Implementation_Subscription_Authentication_Credentials_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Authentication_Credentials_Change" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer fcf6b1f5-5d06-4e6e-95a9-82a1f8a33f21"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription-authentication-credentials.change"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationSubscription": {
            "operationImplementationSubscriptionID": "${#TestSuite#Operation_Implementation_Subscription_Id}"
          }
        },
        "transform": {
          "operationImplementationSubscription": {
            "authenticationCredentials": {
              "userID": "marketplace",
              "password": "mkpl"
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Userid"><con:configuration><token>marketplace</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Password"><con:configuration><token>mkpl</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ab201b0e-ea15-483f-aad3-765dd0caccf1" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="7e68f980-f3a2-4f69-a919-40623c144154"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="72a34a75-1e75-4a93-baf7-ea31e92ccac3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Canonical_Uri_From_Patch_With_X_Url_Path_And_X_Method1" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a432e766-3073-45ca-ac91-b3648def8af0" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="c4ee049c-6ac9-4e02-b71a-7bc71c79c7d5"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="test"/>
  <con:entry key="x-method" value="GET"/>
  <con:entry key="x-url-path" value="/dev/address"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e4a89981-d117-4f55-baef-23461184969a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b35523c-abe1-4182-a066-178da4fbc5ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>26fed9a3-3aeb-480b-9bb8-61ca7289b858</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80b8dda8-e04d-4e1e-8508-1e69703ff538</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fad05406-ab32-4bf5-bd4e-6d330cd2674f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="218698b1-5e24-417a-8def-55725bf02dbb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Operation_Implementations" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="8dc044c5-0b0c-4085-908e-841765069df3"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Operation_Implementations").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Operation_Implementations" id="8fba21df-d4e6-4d1f-a31e-dd4dc2d155ec"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations" methodName="Get_Operation_Implementations" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Operation_Implementations" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer e6e295c7-a1ac-4b02-bfde-bcf384e63bc7"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="af6c0a27-3622-4ff3-8e4b-4bf17d424868"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="38f6da2d-b0d3-4aae-8a4a-96aa54bea04d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_All_Operation_Implementation_Deployments" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="eaaf8e03-b3b2-4bb4-b893-b3f687611fe3"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_All_Operation_Implementation_Deployments").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_All_Operation_Implementation_Deployments" id="6457759b-92c3-4e3d-a79d-2f81a0568c30"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments" methodName="Get_Operation_Implementation_Deployments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_All_Operation_Implementation_Deployments" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer e6e295c7-a1ac-4b02-bfde-bcf384e63bc7"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="6fb27f57-dd98-45d2-9518-5de3aafc3aa2"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="32694520-77ae-4f09-b3cd-9e03028e9f99" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Operation_Implementation_Subscriptions" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="42f16f8b-dc28-4832-a715-d2317aa44ce9"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscriptions_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscriptions_Get" id="7e6ff002-fdf9-43b1-b682-c7685c919e6b"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-subscriptions" methodName="Get_Operation_Implementation_Subscriptions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscriptions_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer b12e165e-47dc-4179-8300-d26b215ad2a6"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cc3599fa-7989-4bf0-a45a-f6bdafbd1928" name="Contains operationImplementationSubscriptionID"><con:configuration><token>operationImplementationSubscriptionID</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="$filter" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>$filter</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="f85cc998-ffe6-491a-add8-2b1d12f38f80"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4d9f93ab-a050-472e-8063-fa527a2b14c4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Generate_Token_B2B" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="Generate_token" id="af6f1438-b235-4238-a07e-6fe782c2eed9"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/token" methodName="Wfn_Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Generate_token" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>client_id=d8467fe1-845a-44bc-9505-92b6e517a929&amp;client_secret=83af1087-d63e-4d5d-ac17-d47207593870&amp;grant_type=client_credentials</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Global_Access_Token_Groovy" id="9104467d-5707-405d-92f7-142664f28308"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Generate_token"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.access_token

log.info "Access Token: " + temp

accessToken = "Bearer " + temp

testRunner.testCase.testSuite.setPropertyValue("Access_Token",accessToken);

log.info "Authorization is header is set for the workers call !!"</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="fbf5fa3d-22e2-4d18-a316-0d8f4c05c8ed" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Post Address" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="09705aab-b7ee-45e8-aaf4-b2517edbaf7d"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info nr.toString() + " Westside Pkwy";

testRunner.testCase.testSuite.setPropertyValue("Adp_Mkpl_Aws_Address", nr.toString() + " Westside Pkwy");
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="5c4f157b-1dda-43dd-8d46-200fd2076c73"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Post_Address").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Post_Address" id="7d77df31-2788-4db5-9ccf-8700ce0806c3"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/dev/address" methodName="PostAddress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Post_Address" id="dc8ec691-726b-4394-82ef-29e672c95b86" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 553c2139-cc05-49fc-acf7-9b78fdfa42e3"/>
  &lt;con:entry key="sm_transactionid" value="awsDevAddressGatewayTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "address": "${#TestSuite#Adp_Mkpl_Aws_Address}",
  "city": "Alpharetta",
  "state": "GA",
  "zip": "30004"
}</con:request><con:originalUri>http://mkplproxy-iat.gslb.es.oneadp.com/dev/address</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="766287b4-691e-4b0e-be07-f25d696732de" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7027f029-918a-47b5-8896-135755109649" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Address" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="bfc2c8f1-64a3-4f24-a433-925026eb93f6"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Address").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Address" id="41c0b7c8-d2b1-4854-a211-45c2d7ab9306"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/dev/address" methodName="GetAddress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Address" id="dc8ec691-726b-4394-82ef-29e672c95b86" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 553c2139-cc05-49fc-acf7-9b78fdfa42e3" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>http://mkplproxy-iat.gslb.es.oneadp.com/dev/address</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="182bc972-de0d-450d-a19c-80a17b8d5b24" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="246e8d2d-1007-4439-8c67-34f982d78aec" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Post Address At Mkpl Proxy" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="48bfc9a4-57f9-4f61-9286-d38248748959"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info nr.toString() + " Westside Pkwy";

testRunner.testCase.testSuite.setPropertyValue("Adp_Mkpl_Aws_Address", nr.toString() + " Westside Pkwy");
</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="a5fc96e3-ba89-4aee-91f2-19a390fd0144" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Post_Address").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Post_Address" id="b2ed070d-9de3-4509-9618-dd6dec38bdfd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/dev/address" methodName="PostAddress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Post_Address" id="dc8ec691-726b-4394-82ef-29e672c95b86" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="consumerappoid" value="888ed931-bb1d-496f-a5a9-3d71e6171c47"/>
  <con:entry key="x-service-gateway" value="true"/>
  <con:entry key="associateoid" value="G3DHY9KFVPP9RGAK"/>
  <con:entry key="sm_transactionid" value="awsDevAddressTest"/>
  <con:entry key="orgoid" value="G3DHY9KFVPP9WGHE"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request>{
  "address": "${#TestSuite#Adp_Mkpl_Aws_Address}",
  "city": "Alpharetta",
  "state": "GA",
  "zip": "30004"
}</con:request><con:originalUri>http://mkplproxy-iat.gslb.es.oneadp.com/dev/address</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="766287b4-691e-4b0e-be07-f25d696732de" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="af2986fa-f8b1-4b33-8f1d-51d9c1a2d01b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Address At Mkpl Proxy" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="f3b70a72-fe5b-4d48-8e6a-0f3e8fcb270f" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Address").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Address" id="7e8637e3-337e-4b53-bc81-25e4779be3fb"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/dev/address" methodName="GetAddress" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Address" id="dc8ec691-726b-4394-82ef-29e672c95b86" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="consumerappoid" value="888ed931-bb1d-496f-a5a9-3d71e6171c47"/>
  <con:entry key="x-service-gateway" value="true"/>
  <con:entry key="associateoid" value="G3DHY9KFVPP9WGHE"/>
  <con:entry key="orgoid" value="G3DHY9KFVPP9RGAK"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request/><con:originalUri>http://mkplproxy-iat.gslb.es.oneadp.com/dev/address</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="182bc972-de0d-450d-a19c-80a17b8d5b24" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Access_Token</con:name><con:value>Bearer 4f4a1437-0d05-4d7d-9e15-5e915f064460</con:value></con:property><con:property><con:name>Delay_Time</con:name><con:value>2000</con:value></con:property><con:property><con:name>Service_Provider_Id</con:name><con:value>4e9d01c4-292e-45ba-96c2-6dedf79b6d00</con:value></con:property><con:property><con:name>Service_Provider_Name</con:name><con:value>ServProvTest74501</con:value></con:property><con:property><con:name>Modified_Service_Provider_Name</con:name><con:value>ServProvTestModified74501</con:value></con:property><con:property><con:name>Modified_Service_Provider_Desc</con:name><con:value>ServProvTestModifiedDesc74501</con:value></con:property><con:property><con:name>Adp_Msg_Msgid</con:name><con:value/></con:property><con:property><con:name>Item_Id</con:name><con:value/></con:property><con:property><con:name>Api_Id</con:name><con:value>Api08431</con:value></con:property><con:property><con:name>Operation_Implementation_Id</con:name><con:value>0afedc7e-c0ce-471c-8d8d-7d73601ea1e7</con:value></con:property><con:property><con:name>Operation_Implementation_Name</con:name><con:value>ServTest08431</con:value></con:property><con:property><con:name>Modified_Operation_Implementation_Name</con:name><con:value>ServTestModified08431</con:value></con:property><con:property><con:name>Modified_Operation_Implementation_Desc</con:name><con:value>ServTestModifiedDesc08431</con:value></con:property><con:property><con:name>Operation_Implementation_Deployment_Id</con:name><con:value>be65ed43-3b36-45f0-bebd-b7cf238e143a</con:value></con:property><con:property><con:name>Operation_Spec_Id</con:name><con:value>OSpec08431</con:value></con:property><con:property><con:name>Operation_Implementation_Subscription_Id</con:name><con:value>69b70424-115d-4a28-b765-0ce5807877d2</con:value></con:property><con:property><con:name>Service_Provider_Ooid</con:name><con:value>74501</con:value></con:property><con:property><con:name>Access_Token_B2C</con:name><con:value>Bearer 5940ab98-c89e-4880-b7ce-712bffa9656b</con:value></con:property><con:property><con:name>Adp_Mkpl_Aws_Address</con:name><con:value>58047 Westside Pkwy</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="ff4c11fe-2b71-44c6-9841-24da0d9ea1de" name="AWSHostTokenEndPointRegressionTestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="024ad9af-1d19-485a-89b3-b6f94764f1c6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Generate_Token_B2B" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="Generate_token" id="a404f699-8512-4cf0-8dc1-5378f8f64023"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/auth/oauth/v2/token" methodName="Wfn_Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Generate_token" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="content-type" value="application/x-www-form-urlencoded" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>client_id=6b0b8720-e96c-4cf0-ba23-cfbf9a566ed0&amp;client_secret=d781f313-6d58-41b1-88f8-875bdb08baee&amp;grant_type=client_credentials</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Global_Access_Token_Groovy" id="5815e42e-a430-42d2-8fce-c04ae4ab2a09"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Generate_token"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.access_token

log.info "Access Token: " + temp

accessToken = "Bearer " + temp

testRunner.testCase.testSuite.setPropertyValue("Access_Token",accessToken);

log.info "Authorization is header is set for the workers call !!"</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c3af4d84-9a49-4941-90ac-3da97795a89d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Service_Provider" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="4b60968b-18ed-4175-b585-efe4ef45c618"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="groovy" name="Generate_Random_Service_Provider_Name" id="5901b65d-d1e4-436b-8d87-323c3bb54c80" disabled="true"><con:settings/><con:config><script>int a = 9
nr = ""
for(i = 0; i &lt; 5; i++)
{
random = new Random()
randomInteger= random.nextInt(a)
nr = nr + randomInteger
}
log.info nr
log.info "ServProvTest"+nr.toString();

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Ooid", nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Name", "ServProvTest"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Name", "ServProvTestModified"+nr.toString());

testRunner.testCase.testSuite.setPropertyValue("Modified_Service_Provider_Desc", "ServProvTestModifiedDesc"+nr.toString());</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Service_Provider" id="3af34d9a-96bd-4397-a2f1-66e3dc305e15"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/service-provider.add" methodName="Post_Service_Provider_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "marketplace"
      },
      "eventNameCode": {
        "codeValue": "service-provider.register"
      },
      "data": {
        "transform": {
          "eventStatusCode": {
            "codeValue": "submit"
          },
          "serviceProvider": {
            "serviceProviderOOID": "MIKEBOWERSADPMKP",
            "serviceProviderName": "Mike Bowers",
            "serviceProviderShortCode": "MB",
            "serviceProviderLogoLink": {
              "rel": "related",
              "href": ""
            },
            "serviceProviderDescription": "Mike Bowers"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="be4e3475-3ea4-4936-8e6a-3ed50a9f7a1d" name="Contains Active Status"><con:configuration><token>active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Service_Provider_Id" id="be91ced2-a86a-4245-b0a4-484bbf0341e6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Service_Provider"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.serviceProvider.serviceProviderID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "serviceProviderID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Service_Provider_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="053eef70-82bf-49cb-b32a-7162d7a9dd50"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6843347f-1d13-40c1-adb5-9e0213eb7c81" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Service_Provider" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="230c191f-03b6-413d-a158-5e427acc4258"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Service_Provider").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Service_Provider" id="21a43c85-33a3-471b-a26a-31b68bc7a0ff"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers/{serviceProviderID}" methodName="Get_Service_Provider" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Service_Provider" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 9c51e5ce-fc8f-4ae2-921b-bab0e3fe59fd"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a586efd0-c8fe-47e0-824b-9c9f6c834335" name="Contains"><con:configuration><token>${#TestSuite#Service_Provider_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a130ea60-71d3-4772-b2c7-235c0d3fc199" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_List_Of_Service_Providers" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="c6bc7d81-6ea5-4982-a058-2e34a555ed3e"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_List_Of_Service_Providers").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_List_Of_Service_Providers" id="70779781-c923-45c2-8003-b5d4ae711825"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/service-providers" methodName="Get_Service_Providers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_List_Of_Service_Providers" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 2b662547-8c28-481a-99dd-491f0bc3fce3"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5497b112-250c-47de-a27e-32167b39ea27" name="Contains"><con:configuration><token>${#TestSuite#Service_Provider_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="$select" value=""/>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="$inlinecount" value=""/>
  <con:entry key="$filter" value=""/>
  <con:entry key="$top" value=""/>
  <con:entry key="$skip" value=""/>
</con:parameters><con:parameterOrder><con:entry>$inlinecount</con:entry><con:entry>$filter</con:entry><con:entry>$select</con:entry><con:entry>$skip</con:entry><con:entry>$top</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay" id="1b470651-12f1-4936-a79d-6e6a22d04e66"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ed9948f6-64a4-4261-affe-78fe355f7957" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="8e7472f9-bd9b-4ae2-a892-2789b6dc033b"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Register_Operation_Implementation" id="8aff5885-53f5-41ea-96f2-066712e62938"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.register" methodName="Post_Operation_Implementation_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Register_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation.register"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementation": {
            "serviceProviderID": "${#TestSuite#Service_Provider_Id}",
            "operationImplementationName": "GetDevApiTimeFromAwsHost",
            "canonicalURI": "/core/messageCenterManagement/notificationManagement/notificationViewing/notificationEvent.read",
            "apiSpecificationID": "${#TestSuite#Api_Id}",
            "operationSpecification": {
              "operationSpecificationID": "${#TestSuite#Operation_Spec_Id}",
              "operationMethod": "GET"
            },
            "operationImplementationVersion": "1.0",
            "operationImplementationAuthenticationTypeCode": {
              "codeValue": "oauth",
              "shortName": "OAuth"
            },
            "operationImplementationGrantTypeCode": {
              "codeValue": "client_credentials",
              "shortName": "Client Credentials"
            },
            "operationImplementationCustomHeaders": [{
			"nameCode": {"codeValue": "fus", "shortName": "Fus"},
			"valueCode": {"codeValue": "roda", "shortName": "Roh Dah!"}
		}],
		"operationImplementationOauthTokenEndpoint": "https://ike6cxyhhd.execute-api.us-east-1.amazonaws.com/dev/auth/token",
    "operationImplementationDescription": "ADP"
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Id" id="9d86267f-029a-432a-aa8b-b1d05f4b23c4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Register_Operation_Implementation"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementation.operationImplementationID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="f93ecc83-0125-48b1-8279-93cfb309149b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="d35c974a-7afb-4455-b4a7-0af1e1eea4c3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="e9e852f8-3382-416a-a828-9047e795158e"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Operation_Implementation" id="c1c78c02-da36-4f7f-88f0-9b2ab4a84117"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementations/{operationImplementationID}" methodName="Get_Operation_Implementation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersGetTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request/><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="920d3673-f05d-4e48-9854-4fdd34be6ae0" name="Contains operationImplementationName"><con:configuration><token>GetDevApiTimeFromAwsHost</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceProviderID" value="${#TestSuite#Service_Provider_Id}"/>
  <con:entry key="operationImplementationID" value="${#TestSuite#Operation_Implementation_Id}"/>
</con:parameters><con:parameterOrder><con:entry>operationImplementationID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="8eb33e73-9673-41f8-b3df-52019c77a2d6"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f0c99cef-db6b-4f47-b4e2-10101217ce2f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Review_Request_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="0d400785-bab6-438c-b749-2f021ad0167c"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Review_Request_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Review_Request_Operation_Implementation" id="adeed0a9-9c9b-4269-a971-ea7ed040717e"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.submit" methodName="Post_Operation_Implementation_Submit_Request" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Request_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review-request"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8d98d783-9e09-44b9-a69b-987a9e6d93ac" name="Contains Operation Implementation Status Pending Review"><con:configuration><token>Pending Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b72406f7-2d8e-4c14-ad22-2ef59353f355" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="53ca22c3-8fef-4aa9-9ce7-39bbbdc8ac55"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a98a8478-5bb7-4dab-a4b0-8578a74b77a4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Review_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="5e0eba8d-5687-4774-a41d-b238853912f2"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Review_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Review_Operation_Implementation" id="2430d9b6-c0e5-42fa-bf4f-cb2ce67582bd"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.review" methodName="Post_Operation_Implementation_Review" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Review_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.review"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0321c9dd-7424-4156-a372-43a0d5f15f73" name="Contains Operation Implementation Status In Review"><con:configuration><token>In Review</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5e40bb5b-23c6-48c5-9bc1-73bab13ec4e3" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="80f3dc4f-867c-49ac-abf2-4536b42edb2a"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2d1ff1ed-98f2-4781-990d-853d9f04184e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Approve_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="fec09629-1093-44b4-84fd-e6104564c657"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Approve_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Approve_Operation_Implementation" id="042f5117-02fb-4fac-9abb-633838b415e9"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation.approve" methodName="Post_Operation_Implementation_Approve" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Approve_Operation_Implementation" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operationImplementation.approve"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="3b7e1df6-9e2c-4853-84f3-1c1a2b795b0f" name="Contains Operation Implementation Status Pending Release"><con:configuration><token>Pending Release</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="5c809e93-205d-4f95-871f-aef92798d750" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="db6c1ccf-ba15-4817-8735-f58890a2351a"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5cf1cf6f-8eeb-40ec-809c-e0904c72e6a3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Release_Operation_Implementation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2d9ed208-a783-4332-a1a5-a09ee14d6b27"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Add").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Activate_Operation_Implementation_Deployment").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Operation_Deployment_Get").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

request = testRunner.testCase.getTestStepByName("Release_Operation_Implementation").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Add" id="3afba128-bf47-4ebb-8375-0f4bcc6d9c52"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.register" methodName="Post_Operation_Implementation_Deployment_Register" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Add" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "/dev/api/time",
            "operationImplementationDeploymentHost": "https://ike6cxyhhd.execute-api.us-east-1.amazonaws.com",
            "operationImplementationDeploymentProxy": "",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 1000000,
              "unitCode": {
                "codeValue": "Calls Per Second",
                "shortName": "cps"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Deployment_Id" id="de23b844-28ce-4e0a-b38f-66b2785f1443"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Deployment_Add"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationDeployment.operationImplementationDeploymentID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationDeploymentID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Deployment_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="restrequest" name="Activate_Operation_Implementation_Deployment" id="93c42c35-924b-4182-9277-6787df8fa480"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-deployment.activate" methodName="Post_Operation_Implementation_Deployment_Activate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Activate_Operation_Implementation_Deployment" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationDeploymentID": "${#TestSuite#Operation_Implementation_Deployment_Id}"
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2acbef6c-4cea-43a2-bff5-fcbe388be0a4" name="Contains Operation Implementation Deployment status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="8471c0e2-708d-4307-989b-e0b3fae8df72" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Deployment_Get" id="84786e6c-63ba-4f71-8aca-3cc0b71591db"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployments/{operationImplementationDeploymentID}" methodName="Get_Operation_Implementation_Deployment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Deployment_Get" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer 0e353fbb-c571-4eae-8ff1-933bd8e004af"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains Active Status"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="80c13747-5d7d-4853-81e3-53b99d83fb35"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2ac913d4-e4e3-480c-a7d9-bdf0e5a73ae5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add_Operation_Implementation_Subscription" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="3a442378-2c55-40e9-80a4-16d30555eea7"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Add").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)


log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Add" id="3c3316d1-12d2-4841-95a0-5e60f50256dc"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription.add" methodName="Post_Operation_Implementation_Subscription_Add" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Add" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer ab1a04b0-da67-458c-8476-06904c934acd"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription.add"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationSubscription": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "subscriberOOID": "G3J931CGFFPWKGGB",
            "subscriberAOID": "G3910Q1H12CAD3TN",
            "mutualSSLCertificate": {
              "publicCertificate": "BEGIN CERTIFICATE sdfkjslkjf;lJ3rkjaksljfdkse END CERTIFICATE",
              "privateKey": "alkjser===kjeaker==="
            },
            "authenticationCredentials": {}
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="cba677bd-13a2-42e4-ab89-c7121759f225" name=" Contains operationImplementationSubscriptionStatusCode Active"><con:configuration><token>Active</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="f2ef12c2-d300-4b1f-9800-c368bd54e8d9" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set_Operation_Implementation_Subscription_Id" id="ba1e55bb-99e6-4ced-9733-5721131981f0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def temp
def accessToken

groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
response = context.testCase.testSteps["Operation_Implementation_Subscription_Add"].testRequest.response.responseContent
log.info "Response: $response"

def slurper = new JsonSlurper()
def json = slurper.parseText response

temp = json.events.data.output.operationImplementationSubscription.operationImplementationSubscriptionID.toString();

temp = temp.toString().drop(1).reverse().drop(1).reverse()

log.info "operationImplementationSubscriptionID: " + temp.toString()

//Set this value into a parameter
testRunner.testCase.testSuite.setPropertyValue("Operation_Implementation_Subscription_Id",temp.toString());
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="9b406410-fcf1-4feb-ae3b-4e543d99978b"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ee36c06d-5dbe-4865-aaa1-7cc97332a97e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Operation_Implementation_Subscription_Authentication_Credentials_Change" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="92bd075d-2d05-44db-b4f2-73b86390edd7"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Operation_Implementation_Subscription_Authentication_Credentials_Change").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Operation_Implementation_Subscription_Authentication_Credentials_Change" id="8191472a-26da-41af-b5a4-af9c330fa622"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/events/marketplace/v1/operation-implementation-subscription-authentication-credentials.change" methodName="Post_Operation_Implementation_Subscription_Authentication_Credentials_Change" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Subscription_Authentication_Credentials_Change" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Bearer ab1a04b0-da67-458c-8476-06904c934acd"/>
  &lt;con:entry key="content-type" value="application/json"/>
  &lt;con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventNameCode": {
        "codeValue": "operation-implementation-subscription-authentication-credentials.change"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "eventContext": {
          "operationImplementationSubscription": {
            "operationImplementationSubscriptionID": "${#TestSuite#Operation_Implementation_Subscription_Id}"
          }
        },
        "transform": {
          "operationImplementationSubscription": {
            "authenticationCredentials": {
              "userID": "50be005b-a4b6-49fd-908d-9450c3b8c305",
              "password": "30301080-e730-4b81-a208-c2d9365ea467"
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Userid"><con:configuration><token>marketplace</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e5e1f34f-0eb5-40f0-90ca-4a4db8c6f9dc" name="Contains Password"><con:configuration><token>mkpl</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ab201b0e-ea15-483f-aad3-765dd0caccf1" name="Contains Event Status"><con:configuration><token>Complete</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" id="76134397-d9b5-404c-ac5c-1be87a0894d5"><con:settings/><con:config><delay>${#TestSuite#Delay_Time}</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6365c900-1022-4fe0-aa30-0f3d95b2f60f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_Canonical_Uri_From_Patch_With_X_Url_Path_And_X_Method" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="377b9f0e-1432-4c34-8ca2-223520ee1699" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Register_Service").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="46308288-2436-4bbe-acb9-387abd3039ac"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/canonical-uri" methodName="Get_Canonical_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Canonical_Uri_With_Valid_X_Url_Path_And_X_Method_For_200" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="sm_serversessionid" value="test"/>
  <con:entry key="sm_transactionId" value="test"/>
  <con:entry key="x-method" value="GET"/>
  <con:entry key="x-url-path" value="/dev/api/time"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="operationImplementationDeploymentID" value="${#TestSuite#Operation_Implementation_Deployment_Id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>operationImplementationDeploymentID</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e4a89981-d117-4f55-baef-23461184969a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b35523c-abe1-4182-a066-178da4fbc5ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>26fed9a3-3aeb-480b-9bb8-61ca7289b858</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>80b8dda8-e04d-4e1e-8508-1e69703ff538</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fad05406-ab32-4bf5-bd4e-6d330cd2674f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3a2f89c5-b518-4231-b63f-48bf88f57786" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Operation_Implementation_Deployment_Uri_Get_With_X_Url_Path_And_X_Method" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="Operation_Implementation_Deployment_Uri_Get_With_X_Url_Path_And_X_Method" id="8339bc2e-3b23-45ae-acc7-4d7cc4ca845c"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/marketplace/v1/operation-implementation-deployment-uri" methodName="Get_Operation_Implementation_Deployment_Uri" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Operation_Implementation_Deployment_Uri_Get_With_X_Url_Path_And_X_Method" id="f9920fe7-27ff-4a4f-991c-6b9560f8f15f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="content-type" value="application/json"/>
  <con:entry key="sm_transactionId" value="ServiceProvidersRegisterTest"/>
  <con:entry key="x-method" value="GET"/>
  <con:entry key="x-url-path" value="/dev/api/time"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>https://iat-api.adp.com</con:endpoint><con:request>{
  "events": [
    {
      "serviceCategoryCode": {
        "codeValue": "core"
      },
      "eventStatusCode": {
        "codeValue": "submit"
      },
      "actor": {
        "geoCoordinate": {
          "latitude": 40.816636,
          "longitude": -74.310168
        },
        "deviceUserAgentID": "Apple-iPhone5C1"
      },
      "data": {
        "transform": {
          "operationImplementationDeployment": {
            "operationImplementationID": "${#TestSuite#Operation_Implementation_Id}",
            "operationImplementationDeploymentEndPoint": "http://127.0.0.1",
            "operationImplementationDeploymentHost": "localhost",
            "operationImplementationDeploymentProxy": "localpproxy",
            "operationImplementationDeploymentRateLimit": {
              "quantityValue": 123,
              "unitCode": {
                "codeValue": "mydepratecode",
                "shortName": "My Dep Rate Code"
              }
            }
          }
        }
      }
    }
  ]
}</con:request><con:originalUri>https://apidit.nj.adp.com/auth/oauth/v2/token</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5022c080-69c9-4ae7-87f8-9e63a1d47a2b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="d18e9d09-0b12-413a-b34c-8deaff9e0b0a" name="Contains ${#TestSuite#Operation_Implementation_Deployment_Id}"><con:configuration><token>${#TestSuite#Operation_Implementation_Deployment_Id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ee8c0704-5ed6-4b5e-a020-fceff3588456" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Time" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set_Access_Token_Groovy" id="2e34f592-fd01-4dc1-bd99-d7ef4f65233f" disabled="true"><con:settings/><con:config><script>
accessToken = testRunner.testCase.testSuite.getPropertyValue("Access_Token");
log.info "accessToken: $accessToken"

request = testRunner.testCase.getTestStepByName("Get_Time").testRequest
headers = request.getRequestHeaders()
headers.remove( "Authorization");
headers.put("Authorization", accessToken)
request.setRequestHeaders(headers)

log.info "Authorization is header is set !!"</script></con:config></con:testStep><con:testStep type="restrequest" name="Get_Time" id="261f23ea-e6ef-44ce-9e56-5bafa74d4118"><con:settings/><con:config service="https://iat-api.adp.com" resourcePath="/dev/api/time" methodName="GetTime" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Time" id="dc8ec691-726b-4394-82ef-29e672c95b86" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="x-service-gateway" value="true"/>
  <con:entry key="cache-control" value="no-cache"/>
  <con:entry key="associateoid" value="G3DHY9KFVPP9WGHE"/>
  <con:entry key="orgoid" value="G3DHY9KFVPP9RGAK"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://mkplproxy-iat.gslb.es.oneadp.com</con:endpoint><con:request/><con:originalUri>http://mkplproxy-iat.gslb.es.oneadp.com/dev/address</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="182bc972-de0d-450d-a19c-80a17b8d5b24" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Access_Token</con:name><con:value>Bearer d1eccc4f-436a-4760-b0b5-d2bf1e3397fe</con:value></con:property><con:property><con:name>Delay_Time</con:name><con:value>2000</con:value></con:property><con:property><con:name>Service_Provider_Id</con:name><con:value>4e9d01c4-292e-45ba-96c2-6dedf79b6d00</con:value></con:property><con:property><con:name>Service_Provider_Name</con:name><con:value>ServProvTest74501</con:value></con:property><con:property><con:name>Modified_Service_Provider_Name</con:name><con:value>ServProvTestModified74501</con:value></con:property><con:property><con:name>Modified_Service_Provider_Desc</con:name><con:value>ServProvTestModifiedDesc74501</con:value></con:property><con:property><con:name>Adp_Msg_Msgid</con:name><con:value/></con:property><con:property><con:name>Item_Id</con:name><con:value/></con:property><con:property><con:name>Api_Id</con:name><con:value>Api08431</con:value></con:property><con:property><con:name>Operation_Implementation_Id</con:name><con:value>803a1fb1-3863-4b57-8922-0f751ebd61c8</con:value></con:property><con:property><con:name>Operation_Implementation_Name</con:name><con:value>ServTest08431</con:value></con:property><con:property><con:name>Modified_Operation_Implementation_Name</con:name><con:value>ServTestModified08431</con:value></con:property><con:property><con:name>Modified_Operation_Implementation_Desc</con:name><con:value>ServTestModifiedDesc08431</con:value></con:property><con:property><con:name>Operation_Implementation_Deployment_Id</con:name><con:value>a88e7d2c-9543-4a25-9998-c64efab02931</con:value></con:property><con:property><con:name>Operation_Spec_Id</con:name><con:value>OSpec08431</con:value></con:property><con:property><con:name>Operation_Implementation_Subscription_Id</con:name><con:value>a731ecf9-3e34-4477-b0e6-65498f041529</con:value></con:property><con:property><con:name>Service_Provider_Ooid</con:name><con:value>74501</con:value></con:property><con:property><con:name>Access_Token_B2C</con:name><con:value>Bearer 5940ab98-c89e-4880-b7ce-712bffa9656b</con:value></con:property><con:property><con:name>Adp_Mkpl_Aws_Address</con:name><con:value>35051 Westside Pkwy</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/><con:tags/></con:soapui-project>